<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>General Transcriptions (&lt;TAN-T&gt;)</title><link rel="stylesheet" type="text/css" href="../../../../css/TAN-guidelines.css"/><meta name="generator" content="DocBook XSL Stylesheets V1.78.1"/><link rel="home" href="index.xhtml" title="The Text Alignment Network: Official Guidelines"/><link rel="up" href="ch06.xhtml" title="Chapter 6. Class 1 TAN Files, Representations of Textual Objects"/><link rel="prev" href="ch06.xhtml" title="Chapter 6. Class 1 TAN Files, Representations of Textual Objects"/><link rel="next" href="ch06s03.xhtml" title="Transcriptions Using the Text Encoding Initiative (&lt;TAN-TEI&gt;)"/></head><body><div class="navheader"><table width="100%" summary="Navigation header"><tr><th colspan="3" align="center">General Transcriptions (<code class="code">&lt;TAN-T&gt;</code>)</th></tr><tr><td width="20%" align="left"><a accesskey="p" href="ch06.xhtml">Prev</a> </td><th width="60%" align="center">Chapter 6. Class 1 TAN Files, Representations of Textual Objects</th><td width="20%" align="right"> <a accesskey="n" href="ch06s03.xhtml">Next</a></td></tr></table><hr/></div><div class="section"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="tan-t"/>General Transcriptions (<code class="code">&lt;TAN-T&gt;</code>)</h2></div></div></div><p>The rootmost element of a TAN-T file is <code class="code">&lt;TAN-T&gt;</code>. </p><div class="section"><div class="titlepage"><div><div><h3 class="title"><a id="tan-t_declarations"/><code class="code">head/declarations</code></h3></div></div></div><p>The TAN-T <code class="code">&lt;head&gt;</code> is identical to all other TAN heads except for
                  the <code class="code">&lt;declarations&gt;</code> element.</p><p>
                  </p><div class="table"><a id="d5e2514"/><p class="title"><strong>Table 6.1. Synopsis of TAN-T <code class="code">&lt;declaration&gt;</code></strong></p><div class="table-contents"><table summary="Synopsis of TAN-T &lt;declaration&gt;" border="1"><colgroup><col class="c1"/><col class="c3"/><col class="c4"/><col class="c5"/><col class="newCol7"/><col class="newCol6"/><col class="c6"/></colgroup><thead><tr><th>name</th><th>req?</th><th>qty</th><th>parent</th><th>attributes</th><th>children</th><th>purpose</th></tr></thead><tbody><tr><td><code class="code">&lt;declarations&gt;</code></td><td>yes</td><td>one</td><td><code class="code">&lt;head&gt;</code></td><td><a class="xref" href="ch05.xhtml#edit_stamp" title="Edit Stamp">the section called “Edit Stamp”</a>?</td><td><code class="code">&lt;work&gt;</code>, <code class="code">&lt;version&gt;</code>?,
                                    <code class="code">&lt;div-type&gt;</code>+,
                                    <code class="code">&lt;recommended-tokenization&gt;</code>+,
                                    <code class="code">&lt;filter&gt;</code>?</td><td>identifies the work that has been transcribed</td></tr></tbody></table></div></div><p><br class="table-break"/>
               </p><p>The TAN-T <code class="code">&lt;declarations&gt;</code> takes five possible child
                  elements—three mandatory, two optional. These declarations pertain to the work and
                  version chosen, the types of segementation, the tokenization patterns adopted, and
                  normalizations made to the transcription.</p><div class="section"><div class="titlepage"><div><div><h4 class="title"><a id="d5e2553"/>Works</h4></div></div></div><div class="table"><a id="d5e2556"/><p class="title"><strong>Table 6.2. Synopsis of <code class="code">&lt;work&gt;</code></strong></p><div class="table-contents"><table summary="Synopsis of &lt;work&gt;" border="1"><colgroup><col class="c1"/><col class="c3"/><col class="c4"/><col class="c5"/><col class="newCol7"/><col class="newCol6"/><col class="c6"/></colgroup><thead><tr><th>name</th><th>req?</th><th>qty</th><th>parent</th><th>attributes</th><th>children</th><th>purpose</th></tr></thead><tbody><tr><td><code class="code">&lt;work&gt;</code></td><td>yes</td><td>one</td><td><code class="code">&lt;declaration&gt;</code></td><td>----</td><td><a class="xref" href="ch05.xhtml#iri_and_name" title="IRI + name Pattern">the section called “IRI + name Pattern”</a></td><td>identifies the work that has been transcribed</td></tr></tbody></table></div></div><p><br class="table-break"/>The <code class="code">&lt;work&gt;</code> element is required, and states which
                     conceptual work has been transcribed. It takes the <a class="xref" href="ch05.xhtml#iri_and_name" title="IRI + name Pattern">the section called “IRI + name Pattern”</a>.</p><p>Well-known works may have a suitable IRI name already assigned to them. See
                        <a class="link" href="iris.xml" target="_top">iris.xml</a> for suggestions on vocabularies. Most works
                     have not been assigned IRIs or are named in IRI vocabularies that are not well
                     known. You may assign any work your own URN, through a UUID or a tag URN. Any
                     IRIs that you mint are free to be used by other people writing TAN files about
                     the same work. Similarly, if you find that another TAN-T file has transcribed a
                     version of your work, you may also use that URN (you don't need to ask
                     permission, since no URN can be copyrighted). As with other parts of the
                     metadata, multiple <code class="code">&lt;IRI&gt;</code>s and <code class="code">&lt;name&gt;</code>s are
                     synonyms for the same work, not individual names for different works. </p><div class="example"><a id="d5e2594"/><p class="title"><strong>Example 6.1. <code class="code">&lt;work&gt;</code></strong></p><div class="example-contents"><pre class="programlisting">      ...........
   &lt;work&gt;
       &lt;IRI&gt;http://dbpedia.org/resource/Ring_a_Ring_o%27_Roses&lt;/IRI&gt;
       &lt;name&gt;"Ring a Ring o' Roses" or "Ring Around the Rosie"&lt;/name&gt;
   &lt;/work&gt;
      ...........               </pre></div></div><br class="example-break"/><div class="example"><a id="d5e2598"/><p class="title"><strong>Example 6.2. <code class="code">&lt;work&gt;</code></strong></p><div class="example-contents"><pre class="programlisting">      ...........
   &lt;work&gt;
      &lt;IRI&gt;http://dbpedia.org/resource/Praktikos&lt;/IRI&gt;
      &lt;IRI&gt;tag:evagriusponticus.net,2014:cpg2032&lt;/IRI&gt;
      &lt;name xml:lang="eng"&gt;The Praktikos, written by Evagrius Ponticus&lt;/name&gt;
   &lt;/work&gt;
      ...........               </pre></div></div><br class="example-break"/></div><div class="section"><div class="titlepage"><div><div><h4 class="title"><a id="d5e2602"/>Versions</h4></div></div></div><div class="table"><a id="d5e2604"/><p class="title"><strong>Table 6.3. Synopsis of <code class="code">&lt;version&gt;</code></strong></p><div class="table-contents"><table summary="Synopsis of &lt;version&gt;" border="1"><colgroup><col class="c1"/><col class="c3"/><col class="c4"/><col class="c5"/><col class="newCol7"/><col class="newCol6"/><col class="c6"/></colgroup><thead><tr><th>name</th><th>req?</th><th>qty</th><th>parent</th><th>attributes</th><th>children</th><th>purpose</th></tr></thead><tbody><tr><td><code class="code">&lt;version&gt;</code></td><td>no</td><td>one</td><td><code class="code">&lt;declaration&gt;</code></td><td>----</td><td><a class="xref" href="ch05.xhtml#iri_and_name" title="IRI + name Pattern">the section called “IRI + name Pattern”</a></td><td>identifies the work-version that has been transcribed</td></tr></tbody></table></div></div><br class="table-break"/><p>An optional <code class="code">&lt;version&gt;</code> element identifies a specific version
                     of what has been identified under <code class="code">&lt;work&gt;</code>. It takes the <a class="xref" href="ch05.xhtml#iri_and_name" title="IRI + name Pattern">the section called “IRI + name Pattern”</a>.</p><p>In most cases, <code class="code">&lt;version&gt;</code> is unnecessary, because
                        <code class="code">&lt;work&gt;</code> in conjunction with <code class="code">&lt;source&gt;</code> are
                     sufficient to identify a particular work-version. But if the source carries
                     multiple versions (e.g., a bilingual edition of a text), then
                        <code class="code">&lt;version&gt;</code> must be included.</p><p>Very few work-versions have their own URN names. It is advisable to assign a
                     tag URN or a UUID. If you have used an IRI for <code class="code">&lt;work&gt;</code> that you
                     are entitled to modify, you may wish to add a suffix that will name the
                     version. If you need to specify exactly where on a text-bearing object a
                     version appears, <code class="code">&lt;desc&gt;</code> or <code class="code">&lt;comment&gt;</code> should be
                     used.</p><div class="example"><a id="d5e2649"/><p class="title"><strong>Example 6.3. <code class="code">&lt;version&gt;</code></strong></p><div class="example-contents"><pre class="programlisting">      ...........
   &lt;version&gt;
      &lt;IRI&gt;urn:uuid:31648039-3dbb-49b9-b66e-9bd2cd11630e&lt;/IRI&gt;
      &lt;name&gt;zweite Version des Arbeits&lt;/name&gt;
   &lt;/version&gt;
      ...........               </pre></div></div><br class="example-break"/><div class="example"><a id="d5e2653"/><p class="title"><strong>Example 6.4. <code class="code">&lt;version&gt;</code></strong></p><div class="example-contents"><pre class="programlisting">      ...........
   &lt;version&gt;
      &lt;IRI&gt;tag:evagriusponticus.net,2014:cpg2040.grc.1971&lt;/IRI&gt;
      &lt;name xml:lang="eng"&gt;Guillaumonts' ancient Greek version of the 
          Praktikos published in 1971&lt;/name&gt;
   &lt;/version&gt;
      ...........               </pre></div></div><br class="example-break"/></div><div class="section"><div class="titlepage"><div><div><h4 class="title"><a id="div-type"/>Division Types</h4></div></div></div><div class="table"><a id="d5e2660"/><p class="title"><strong>Table 6.4. Synopsis of <code class="code">&lt;div-type&gt;</code></strong></p><div class="table-contents"><table summary="Synopsis of &lt;div-type&gt;" border="1"><colgroup><col class="c1"/><col class="c3"/><col class="c4"/><col class="c5"/><col class="newCol7"/><col class="newCol6"/><col class="c6"/></colgroup><thead><tr><th>name</th><th>req?</th><th>qty</th><th>parent</th><th>attributes</th><th>children</th><th>purpose</th></tr></thead><tbody><tr><td><code class="code">&lt;div-type&gt;</code></td><td>yes</td><td>one or more</td><td><code class="code">&lt;declaration&gt;</code></td><td><code class="code">@xml:id</code>, <code class="code">@ns-are-numerals</code>?</td><td><a class="xref" href="ch05.xhtml#iri_and_name" title="IRI + name Pattern">the section called “IRI + name Pattern”</a></td><td>identifies the types of division into which the
                                    transcription has been segmented</td></tr></tbody></table></div></div><p><br class="table-break"/>At least one <code class="code">&lt;div-type&gt;</code> must be supplied, declaring the
                     types of divisions into which the text has been segmented. Each
                        <code class="code">&lt;div-type&gt;</code> must take an <code class="code">xml:id</code> that has a
                     string value (regular expression: <code class="code">\w+</code>; no punctuation or spaces
                     are allowed) unique to the document. This value will be used throughout the TAN
                     file to label divisions, so it is advisable to keep the abbreviation brief but
                     meaningful. Each <code class="code">&lt;div-type&gt;</code> takes the <a class="xref" href="ch05.xhtml#iri_and_name" title="IRI + name Pattern">the section called “IRI + name Pattern”</a>.</p><p><code class="code">@ns-are-numerals</code> is optional. If absent, the value is assumed
                     to be true, and processors of the TAN-T file will attempt to cast the values of
                        <code class="code">@n</code> as <code class="code">xs:integer</code>. </p><p><a id="numeration_systems"/>TAN supports four numeration systems other than
                     Arabic numerals:</p><div class="orderedlist"><ol class="orderedlist" type="1"><li class="listitem"><p><span class="bold"><strong>Roman numerals</strong></span>. Values up to 5000,
                              utilizing i, v, x, l, c, d, and m, uppercase or lowercase, with
                              liberal syntactic rules (within a roman numeral, any digit preceding
                              one of a higher value is assumed to be a subtraction from the total
                              value; all others are positive values).</p></li><li class="listitem"><p><span class="bold"><strong>Alphabetic sequences</strong></span>. The
                              26-letter Roman alphabet, assigned 1 through 26, with each series 26n
                              + 1 beginning with n + 1 repeated letters. E.g., aa = 27, bbb = 54.
                              Uppercase or lowercase allowed.</p></li><li class="listitem"><p><span class="bold"><strong>Arabic numerals + alphabetic
                                 sequences</strong></span>. Arabic numerals followed immediately by an
                              alphabetic sequence. The second item is to be calculated as a
                              subsequence of the first item, with the lack of a second item taking
                              highest priority. E.g., 4, 4a, 4b, 4c....</p></li><li class="listitem"><p><span class="bold"><strong>Alphabetic sequences + Arabic
                                 numerals</strong></span>: As above, but with alphabetic sequence
                              preceding Arabic numerals.</p></li></ol></div><p>Implementations processing TAN files should determine whether the
                        <code class="code">@n</code>s are numerals by testing all values and opting for the
                     numeration system that predominates. It is recommended that the functions and
                     variables defined for <a class="link" href="../functions/TAN-A-div-functions.xsl" target="_top">TAN-A-div</a>, <a class="link" href="../functions/TAN-class-2-functions.xsl" target="_top">TAN-class-2</a>, and <a class="link" href="../functions/TAN-core-functions.xsl" target="_top">TAN-core</a> be studied
                     in reconciling and converting numeration systems. </p><p>In most cases, <code class="code">@ns-are-numerals</code> will not need to be invoked.
                     Even if there is a case where <code class="code">n="civ"</code> and <code class="code">civ</code> is
                     meant to be a word or abbreviation, this will be interpreted as a Roman numeral
                     only if the majority of <code class="code">@n</code>s for that <code class="code">&lt;div&gt;</code> type
                     match the pattern for Roman numerals. In that case,
                        <code class="code">@ns-are-numerals="false"</code> should be invoked in the appropriate
                        <code class="code">&lt;div-type&gt;</code>. </p><p>Well-known division types already have suitable IRI names. See <a class="link" href="iris.xml" target="_top">iris.xml</a> for suggestions. That list also includes less common
                     types of divisions. If you encounter a rare division type, or one that needs
                     specificity not provided for in a well-known URN, you should mint your
                     own.</p><p>You may have as many <code class="code">&lt;div-type&gt;</code>s as you like. Not every
                     division type needs to be used in the transcription. In this it resembles
                     surplus namespace invocations at the head of an XML document. The only harm is
                     bloat.</p><div class="example"><a id="d5e2735"/><p class="title"><strong>Example 6.5. <code class="code">&lt;div-type&gt;</code></strong></p><div class="example-contents"><pre class="programlisting">      ...........
   &lt;div-type xml:id="line"&gt;
      &lt;IRI&gt;http://dbpedia.org/resource/Line_(poetry)&lt;/IRI&gt;
      &lt;name&gt;line of poetry&lt;/name&gt;
   &lt;/div-type&gt;
      ...........               </pre></div></div><br class="example-break"/><div class="example"><a id="d5e2739"/><p class="title"><strong>Example 6.6. <code class="code">&lt;div-type&gt;</code></strong></p><div class="example-contents"><pre class="programlisting">      ...........
   &lt;div-type xml:id="p"&gt;
      &lt;IRI&gt;http://dbpedia.org/resource/Preface&lt;/IRI&gt;
      &lt;name xml:lang="eng"&gt;preface&lt;/name&gt;
   &lt;/div-type&gt;
   &lt;div-type xml:id="t"&gt;
      &lt;IRI&gt;http://dbpedia.org/resource/Title_(publishing)&lt;/IRI&gt;
      &lt;name xml:lang="eng"&gt;title&lt;/name&gt;
   &lt;/div-type&gt;
   &lt;div-type xml:id="s"&gt;
      &lt;IRI&gt;http://dbpedia.org/resource/Section_(typography)&lt;/IRI&gt;
      &lt;name xml:lang="eng"&gt;section&lt;/name&gt;
   &lt;/div-type&gt;
   &lt;div-type xml:id="c"&gt;
      &lt;IRI&gt;http://dbpedia.org/resource/Chapter_(books)&lt;/IRI&gt;
      &lt;name xml:lang="eng"&gt;chapter&lt;/name&gt;
      &lt;name xml:lang="grc"&gt;κεφάλαιον&lt;/name&gt;
   &lt;/div-type&gt;
   &lt;div-type xml:id="e"&gt;
      &lt;IRI&gt;http://dbpedia.org/resource/Epilogue&lt;/IRI&gt;
      &lt;name xml:lang="eng"&gt;epilogue&lt;/name&gt;
   &lt;/div-type&gt;
      ...........               </pre></div></div><br class="example-break"/></div><div class="section"><div class="titlepage"><div><div><h4 class="title"><a id="recommended-tokenizations"/>Recommended Tokenizations</h4></div></div></div><div class="table"><a id="d5e2746"/><p class="title"><strong>Table 6.5. Synopsis of <code class="code">&lt;recommended-tokenization&gt;</code></strong></p><div class="table-contents"><table summary="Synopsis of &lt;recommended-tokenization&gt;" border="1"><colgroup><col class="c1"/><col class="c3"/><col class="c4"/><col class="c5"/><col class="newCol7"/><col class="newCol6"/><col class="c6"/></colgroup><thead><tr><th>name</th><th>req?</th><th>qty</th><th>parent</th><th>attributes</th><th>children</th><th>purpose</th></tr></thead><tbody><tr><td><code class="code">&lt;recommended-tokenization&gt;</code></td><td>yes</td><td>one or more</td><td><code class="code">&lt;declaration&gt;</code></td><td><a class="xref" href="ch05.xhtml#edit_stamp" title="Edit Stamp">the section called “Edit Stamp”</a>?, <code class="code">@xml:id</code>,
                                       <code class="code">@which</code>?</td><td><a class="xref" href="ch05.xhtml#digital_entity_metadata" title="Digital Entity Metadata Pattern">the section called “Digital Entity Metadata Pattern”</a>?</td><td>names a TAN-R-tok file that is recommended</td></tr></tbody></table></div></div><p><br class="table-break"/>At least one <code class="code">&lt;recommended-tokenization&gt;</code> must be
                     supplied, declaring which TAN-R-tok patterns the transcription has been
                     optimized for (see <a class="xref" href="ch08.xhtml#tan-r-tok" title="Tokenization Patterns">the section called “Tokenization Patterns”</a>). If no thought has been given
                     to tokenization, this element should be left empty. Otherwise this element
                     takes two kinds of content:</p><p>
                     </p><div class="orderedlist"><ol class="orderedlist" type="1"><li class="listitem"><p><span class="bold"><strong>Core TAN tokenization pattern</strong></span>. TAN
                              provides three core tokenization patterns, <code class="code">general-1</code>,
                                 <code class="code">general-words-only-1</code>, and <code class="code">precise-1</code>. To
                              refer to these core patterns, simply assign to <code class="code">@which</code> one
                              of those three values. The numeral after the name refers to version
                              number; the number of versions may grow. See <a class="xref" href="ch08.xhtml#tan-r-tok" title="Tokenization Patterns">the section called “Tokenization Patterns”</a> for more about these files.</p></li><li class="listitem"><p><span class="bold"><strong>Custom TAN tokenization pattern</strong></span>.
                              Under this option, Each <code class="code">&lt;recommended-tokenization&gt;</code>
                              must take a unique value for <code class="code">@xml:id</code> that names the
                              tokenization pattern. This value will be used by class 2 files to
                              choose a particular tokenizing pattern. Each
                                 <code class="code">&lt;recommended-tokenization&gt;</code> takes the <a class="xref" href="ch05.xhtml#digital_entity_metadata" title="Digital Entity Metadata Pattern">the section called “Digital Entity Metadata Pattern”</a>.</p></li></ol></div><p>
                  </p><p>If a TAN-R-tok file is language specific, and if not every language invoked
                     in a TAN-T(EI) file is explicitly supported by that tokenization file, a
                     warning will be produced. If you have in your transcription combining
                     characters that cannot be handled reliably by a given recommended tokenization
                     pattern, you will get an error upon validation, indicating where the combining
                     characters are to be found. For more see <a class="xref" href="ch04s03.xhtml#reg_exp_and_comb_chars" title="Regular Expressions and Combining Characters">Regular Expressions and Combining Characters</a>.</p><p>You may have as many <code class="code">&lt;recommended-tokenization&gt;</code>s as you
                     like. The order of <code class="code">&lt;recommended-tokenization&gt;</code>s is important.
                     The most recommended tokenizing pattern should be placed first. </p><div class="example"><a id="d5e2805"/><p class="title"><strong>Example 6.7. <code class="code">&lt;recommended-tokenization&gt;</code>: none</strong></p><div class="example-contents"><pre class="programlisting">      ...........
   &lt;recommended-tokenization/&gt;
      ...........               </pre></div></div><br class="example-break"/><div class="example"><a id="d5e2809"/><p class="title"><strong>Example 6.8. <code class="code">&lt;recommended-tokenization&gt;</code>: all three core general TAN
                        tokenization pattern</strong></p><div class="example-contents"><pre class="programlisting">      ...........
   &lt;recommended-tokenization which="general-1"/&gt;
   &lt;recommended-tokenization which="general-words-only-1"/&gt;
   &lt;recommended-tokenization which="precise-1"/&gt;
      ...........</pre><div class="caption"><p>The example above prioritizes the core TAN general pattern above the
                           other two.</p></div></div></div><br class="example-break"/><div class="example"><a id="d5e2815"/><p class="title"><strong>Example 6.9. <code class="code">&lt;recommended-tokenization&gt;</code>: modern English texts</strong></p><div class="example-contents"><pre class="programlisting">      ...........
   &lt;recommended-tokenization xml:id="penn"&gt;
      &lt;IRI&gt;tag:textalign.net,2015:tokenization:eng.1&lt;/IRI&gt;
      &lt;name&gt;Tokenization pattern for English, in Penn Treebank style&lt;/name&gt;
      &lt;location when-accessed="2015-03-17"&gt;../TAN-R-tok/tok.eng.1.xml&lt;/location&gt;
   &lt;/recommended-tokenization&gt;
   &lt;recommended-tokenization which="general"/&gt;
      ...........               </pre></div></div><br class="example-break"/></div><div class="section"><div class="titlepage"><div><div><h4 class="title"><a id="filter_normalization"/>Filter: Normalizing, Replacing, Transliterating</h4></div></div></div><p>The <code class="code">&lt;filter&gt;</code> of a TAN-T file takes three children, all
                     optional and repeatable: <code class="code">&lt;normalization&gt;</code>,
                        <code class="code">&lt;replace&gt;</code>, and <code class="code">&lt;transliteration&gt;</code>. </p><p>
                     </p><div class="table"><a id="d5e2827"/><p class="title"><strong>Table 6.6. Synopsis of <code class="code">&lt;filter&gt;</code>,
                           <code class="code">&lt;normalization&gt;</code>, <code class="code">&lt;replace&gt;</code>,
                              <code class="code">&lt;transliteration&gt;</code>, <code class="code">&lt;pattern&gt;</code>,
                              <code class="code">&lt;replacement&gt;</code>, <code class="code">&lt;flags&gt;</code></strong></p><div class="table-contents"><table summary="Synopsis of &lt;filter&gt;,&#xA;                           &lt;normalization&gt;, &lt;replace&gt;,&#xA;                              &lt;transliteration&gt;, &lt;pattern&gt;,&#xA;                              &lt;replacement&gt;, &lt;flags&gt;" border="1"><colgroup><col class="c1"/><col class="c3"/><col class="c4"/><col class="c5"/><col class="newCol7"/><col class="newCol6"/><col class="c6"/></colgroup><thead><tr><th>name</th><th>req?</th><th>qty</th><th>parent</th><th>attributes</th><th>children</th><th>purpose</th></tr></thead><tbody><tr><td><code class="code">&lt;filter&gt;</code></td><td>no</td><td>one</td><td><code class="code">&lt;declarations&gt;</code></td><td><code class="code">@src</code>?</td><td><code class="code">&lt;normalization&gt;</code>*,
                                    <code class="code">&lt;replace&gt;</code>*,
                                    <code class="code">&lt;transliteration&gt;</code>*</td><td>collect textual changes that have been made to the
                                    source</td></tr><tr><td><code class="code">&lt;normalization&gt;</code></td><td>no</td><td>one or more</td><td><code class="code">&lt;filter&gt;</code></td><td><code class="code">@xml:id</code>?</td><td><code class="code">&lt;for-lang&gt;</code>*, <a class="xref" href="ch05.xhtml#iri_and_name" title="IRI + name Pattern">the section called “IRI + name Pattern”</a></td><td>declare normalizations made to the text of a source</td></tr><tr><td><code class="code">&lt;replace&gt;</code></td><td>no</td><td>one or more</td><td><code class="code">&lt;filter&gt;</code></td><td><code class="code">@xpath</code>?</td><td><code class="code">&lt;pattern&gt;</code>, <code class="code">&lt;replacement&gt;</code>,
                                       <code class="code">&lt;flags&gt;</code>?</td><td>state a pattern to be searched and replaced in a digital
                                    source</td></tr><tr><td><code class="code">&lt;transliteration&gt;</code></td><td>no</td><td>one or more</td><td><code class="code">&lt;filter&gt;</code></td><td>----</td><td><code class="code">&lt;for-lang&gt;</code>*, <a class="xref" href="ch05.xhtml#iri_and_name" title="IRI + name Pattern">the section called “IRI + name Pattern”</a></td><td>state a transliteration scheme used upon a source to convert
                                    one alphabet to another</td></tr><tr><td><code class="code">&lt;pattern&gt;</code></td><td>yes</td><td>one</td><td><code class="code">&lt;replace&gt;</code></td><td>----</td><td>data (xsd:string)</td><td>state through a regular expression a pattern to be
                                    found</td></tr><tr><td><code class="code">&lt;replacement&gt;</code></td><td>yes</td><td>one</td><td><code class="code">&lt;replace&gt;</code></td><td>----</td><td>data (xsd:string)</td><td>state through a regular expression a replacement
                                    pattern</td></tr><tr><td><code class="code">&lt;flags&gt;</code></td><td>yes</td><td>one</td><td><code class="code">&lt;replace&gt;</code></td><td>----</td><td>data (xsd:string)</td><td>state flags to be applied in a replace operation</td></tr></tbody></table></div></div><p><br class="table-break"/>
                  </p><p><code class="code">&lt;filter&gt;</code> (see <a class="xref" href="ch06s02.xhtml#filter_normalization" title="Filter: Normalizing, Replacing, Transliterating">the section called “Filter: Normalizing, Replacing, Transliterating”</a> above)
                     may take take one or more <code class="code">&lt;normalization&gt;</code>s, each of which
                     states an editorial decision made to normalize the text found in a source. Each
                     normalization takes the <a class="xref" href="ch05.xhtml#iri_and_name" title="IRI + name Pattern">the section called “IRI + name Pattern”</a> and may take one or more
                        <code class="code">&lt;for-lang&gt;</code> values, indicating through a language code to
                     which languages the normalization applies (see <a class="xref" href="ch05.xhtml#languages" title="Languages">the section called “Languages”</a> and
                        <a class="xref" href="ch04s03.xhtml#language" title="xsd:language">xsd:language</a>). </p><p><code class="code">&lt;normalization&gt;</code> caters to descriptions of changes to
                     nondigital sources, but it may be made also for digital sources, to declare
                     global changes that would be cumbersome, difficult, or impossible to describe
                     in <code class="code">&lt;replace&gt;</code>. </p><p>In creating a TAN-T file you should declare every change you have made to
                     the source, no matter its medium. See <a class="xref" href="ch06.xhtml#transcription_principles" title="Principles and Assumptions">the section called “Principles and Assumptions”</a> above. Currently there are no IRI vocabularies for normalizing decisions;
                     see <a class="link" href="iris.xml" target="_top">iris.xml</a> for TAN-minted ones. If none of these
                     adequately describe a normalization principle you have adopted, you may mint
                     your own IRI, probably a tag URN. It is hoped that as TAN-T files are created,
                     commonly used normalizations will coalesce into a shared IRI vocabulary. </p><p><code class="code">&lt;replace&gt;</code>s, intended exclusively for valid XML sources, is
                     used to indicate what global changes were applied to the text of the source
                     before creating the data. </p><p>The conventions of <code class="code">&lt;replace&gt;</code> accord with
                        <code class="code">fn:replace</code> as defined in <a class="link" href="http://www.w3.org/TR/xpath-functions-30/#func-replace" target="_top">XPath
                        Functions 3.0</a>. Each <code class="code">&lt;replace&gt;</code> has as children exactly
                     one <code class="code">&lt;pattern&gt;</code>, exactly one <code class="code">&lt;replacement&gt;</code>, and
                     an optional <code class="code">&lt;flags&gt;</code> element, corresponding to the three
                     parameters in the XPath function. The values of these three elements, all
                     strings, are regular expressions (see <a class="xref" href="ch04s03.xhtml#regular_expressions" title="Regular Expressions">the section called “Regular Expressions”</a>).
                     Also, if the source is a valid XML file, <code class="code">&lt;replace&gt;</code> may take an
                     optional <code class="code">@xpath</code> value, to restrict the scope of the replacement to
                     a specific place in a valid XML source.</p><div class="caution" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Caution"><tr><td rowspan="2" align="center" valign="top" width="25"><img alt="[Caution]" src="img/caution.png"/></td><th align="left">Caution</th></tr><tr><td align="left" valign="top"><p>Using <code class="code">@xpath</code> is not recommended if you wish to serve
                           users who may be relying upon XSLT 2.0 and earlier for transformations.
                           Only from version 3.0 has it been possible to convert a string datatype
                           (the datatype of <code class="code">@xpath</code>) into an XPath expression.</p></td></tr></table></div><div class="caution" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Caution"><tr><td rowspan="2" align="center" valign="top" width="25"><img alt="[Caution]" src="img/caution.png"/></td><th align="left">Caution</th></tr><tr><td align="left" valign="top"><p>It is not predictable whether a regular expression engine will include or
                        exclude combining characters in a search. You will need to worry about this
                        only if you are working with texts that use combining characters and you are
                        making subtoken alignments. For more details see <a class="xref" href="ch04s03.xhtml#regular_expressions" title="Regular Expressions">the section called “Regular Expressions”</a> and <a class="xref" href="ch04s03.xhtml#combining_characters" title="Combining characters">Combining characters</a>. If you invoke a TAN-R-tok file that has a replace function, and the
                        target text includes combining characters, a warning will be returned upon
                        validation.</p></td></tr></table></div><p>Multiple <code class="code">&lt;replace&gt;</code> values are assumed to have been applied
                     in the order given.</p><p>In the third part of <code class="code">&lt;filter&gt;</code> are one or more optional
                        <code class="code">&lt;transliteration&gt;</code> elements, which indicate what if any
                     transliteration schemes have been used upon the source (digital or nondigital).
                     This may be useful for projects that find it easier to work with a source in a
                     Latin alphabet rather than a native one. Each transliteration element takes the
                        <a class="xref" href="ch05.xhtml#iri_and_name" title="IRI + name Pattern">the section called “IRI + name Pattern”</a> and one or more optional
                        <code class="code">&lt;for-lang&gt;</code> values, indicating through a language code to
                     which languages the transliteration applies (see <a class="xref" href="ch05.xhtml#languages" title="Languages">the section called “Languages”</a>
                     and <a class="xref" href="ch04s03.xhtml#language" title="xsd:language">xsd:language</a>). </p><p>
                     </p><div class="caution" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Caution"><tr><td rowspan="2" align="center" valign="top" width="25"><img alt="[Caution]" src="img/caution.png"/></td><th align="left">Caution</th></tr><tr><td align="left" valign="top"><p>It is hoped that a class 3 format will be developed to formalize
                           transliteration rules. Until this format is available, there is no
                           standardized way to convert the transliteration. For now, the
                              <code class="code">&lt;IRI&gt;</code>s in <code class="code">&lt;transliteration&gt;</code> should use
                           vocabularies similar to those recommended in <a class="link" href="iris.xml" target="_top">iris.xml</a>. </p></td></tr></table></div><p>
                  </p><div class="example"><a id="d5e2987"/><p class="title"><strong>Example 6.10. <code class="code">&lt;normalization&gt;</code></strong></p><div class="example-contents"><pre class="programlisting">      ...........
   &lt;filter&gt;
      &lt;normalization&gt;
         &lt;IRI&gt;tag:textalign.net,2015:normalization:comments-editorial-removed&lt;/IRI&gt;
         &lt;name&gt;Editorial comments removed.&lt;/name&gt;
      &lt;/normalization&gt;
   &lt;/filter&gt;
      ...........               </pre></div></div><br class="example-break"/><div class="example"><a id="d5e2991"/><p class="title"><strong>Example 6.11. <code class="code">&lt;normalization&gt;</code> and <code class="code">&lt;replace&gt;</code>: remove
                        discretionary hyphenation and line breaks from a TAN-TEI file</strong></p><div class="example-contents"><pre class="programlisting">      ...........
   &lt;filter&gt;
      &lt;normalization&gt;
         &lt;for-lang&gt;grc&lt;/for-lang&gt;
         &lt;IRI&gt;tag:textalign.net,2015:normalization:hyphens-discretionary-removed&lt;/IRI&gt;
         &lt;name&gt;Suppression of hyphens&lt;/name&gt;
      &lt;/normalization&gt;
      &lt;replace&gt;
         &lt;pattern&gt;&amp;lt;lb[^/]*\s*break\s*=\s*"no"[^/]*\s*/&gt;&lt;/pattern&gt;
         &lt;replacement/&gt;
      &lt;/replace&gt;
      &lt;replace&gt;
         &lt;pattern&gt;&amp;lt;lb[^/]*\s*[^/]*/&gt;&lt;/pattern&gt;
         &lt;replacement&gt; &lt;/replacement&gt;
      &lt;/replace&gt;
   &lt;/filter&gt;
      ...........</pre><div class="caption"><p>The removal of discretionary hyphens is declared with
                              <code class="code">&lt;normalization&gt;</code> and not <code class="code">&lt;replace&gt;</code>
                           because the TAN-T editor has realized that some hyphens at line ends are
                           part of the word. A generalized regular expression cannot be constructed
                           to define this change. The first <code class="code">&lt;replace&gt;</code> declares that
                           all instances of TEI's <code class="code">&lt;lb&gt;</code> that are meant to suppress
                           word breaks should be deleted. The regular expression held by
                              <code class="code">&lt;pattern&gt;</code> tells the computer to look for any instance
                           of <code class="code">&lt;lb</code> followed by anything until it reaches
                              <code class="code">break="no"</code> then to keep going until it finds
                              <code class="code">/&gt;</code>, even across new lines. Note the use of
                              <code class="code">&amp;lt;</code>, since a literal use of <code class="code">&lt;</code> would
                           render this file as invalid. The second replace replaces all remaining
                           TEI <code class="code">&lt;lb&gt;</code> with a single space.</p></div></div></div><br class="example-break"/><div class="example"><a id="d5e3009"/><p class="title"><strong>Example 6.12. <code class="code">&lt;transliteration&gt;</code></strong></p><div class="example-contents"><pre class="programlisting">      ...........
   &lt;filter&gt;
      &lt;transliteration&gt;
         &lt;for-lang&gt;grc&lt;/for-lang&gt;
         &lt;IRI&gt;tag:textalign.net,2015:transliteration:grc:lat:betacode2013&lt;/IRI&gt;
         &lt;name&gt;Romanized Greek&lt;/name&gt;
      &lt;/transliteration&gt;
   &lt;/filter&gt;
      ...........               </pre></div></div><br class="example-break"/></div></div><div class="section"><div class="titlepage"><div><div><h3 class="title"><a id="tan_t_data"/>Data</h3></div></div></div><div class="table"><a id="d5e3016"/><p class="title"><strong>Table 6.7. Synopsis of TAN-T <code class="code">&lt;body&gt;</code>, <code class="code">&lt;div&gt;</code></strong></p><div class="table-contents"><table summary="Synopsis of TAN-T &lt;body&gt;, &lt;div&gt;" border="1"><colgroup><col class="c1"/><col class="c3"/><col class="c4"/><col class="c5"/><col class="newCol7"/><col class="newCol6"/><col class="c6"/></colgroup><thead><tr><th>name</th><th>req?</th><th>qty</th><th>parent</th><th>attributes</th><th>children</th><th>purpose</th></tr></thead><tbody><tr><td><code class="code">&lt;body&gt;</code></td><td>yes</td><td>one</td><td><code class="code">/TAN-T</code></td><td><code class="code">@xml:lang</code>, <a class="xref" href="ch05s04.xhtml#in_progress" title="@in-progress">the section called “@in-progress”</a>?</td><td><code class="code">&lt;div&gt;</code>+</td><td>contain a transcription</td></tr><tr><td><code class="code">&lt;div&gt;</code></td><td>yes</td><td>one or more</td><td><code class="code">&lt;body&gt;</code> | <code class="code">&lt;div&gt;</code></td><td><code class="code">@type</code>, <code class="code">@n</code>,
                                 <code class="code">@xml:lang</code>?</td><td><code class="code">&lt;div&gt;</code>+ | text</td><td>segment, structure, and name the segments of a
                                 transcription</td></tr></tbody></table></div></div><p><br class="table-break"/>The sole purpose of <code class="code">&lt;body&gt;</code> is to contain a segmented
                  transcription of a single version of a single work from a textual object.
                     <code class="code">&lt;body&gt;</code> may take <code class="code">@in-progress</code> (see <a class="xref" href="ch05s04.xhtml#in_progress" title="@in-progress">the section called “@in-progress”</a>). </p><p><code class="code">&lt;body&gt;</code> takes one or more <code class="code">&lt;div&gt;</code> elements each of
                  which governs zero or more other <code class="code">&lt;div&gt;</code> elements. Collectively,
                  this tree of <code class="code">&lt;div&gt;</code> elements (with <code class="code">&lt;body&gt;</code> at the
                  root) is used to structure the text according to the reference system that has
                  been adopted. Furthermore, only leaf <code class="code">&lt;div&gt;</code> elements, that is,
                     <code class="code">&lt;div&gt;</code> elements that contain no other <code class="code">&lt;div&gt;</code>s
                  (XPath expression <code class="code">//tan:div[not(descendant::tan:div)]</code>) are allowed to
                  contain text children (white space excepted). That is, any <code class="code">&lt;div&gt;</code>
                  will contain one of the two following combinations of children: </p><p>
                  </p><div class="orderedlist"><ol class="orderedlist" type="1"><li class="listitem"><p>one or more <code class="code">&lt;div&gt;</code>s and nothing else (except white
                           space)</p></li><li class="listitem"><p>no <code class="code">&lt;div&gt;</code>s at all and text (or TEI-compliant markup, if
                           a TAN-TEI file).</p></li></ol></div><p>
               </p><p><code class="code">@xml:lang</code>, which is required in <code class="code">&lt;body&gt;</code> and is
                  optional in any <code class="code">&lt;div&gt;</code>, indicates the default language of the
                  portions of the transcription governed by the parent of <code class="code">@xml:lang</code>.
                  This value is inherited by all descendants, unless overridden by a new
                     <code class="code">@xml:lang</code>. That is, each <code class="code">&lt;div&gt;</code> takes the
                     <code class="code">@xml:lang</code> value of itself or its nearest ancestor. Any time a
                  transcription moves from one language to another (and the difference is obvious
                  and substantial, not merely a word or short phrase), you should indicate this with
                  a new <code class="code">@xml:lang</code> in the appropriate <code class="code">&lt;div&gt;</code>. This is a
                  courtesy to users who may be looking for text from a particular language. If a
                  change in language occurs within a leaf <code class="code">&lt;div&gt;</code>, you should ensure
                  that the <code class="code">@xml:lang</code> value of that <code class="code">&lt;div&gt;</code> (explicity or
                  by inheritance) reflects the majority language. Alternatively, you may subdivide
                  that <code class="code">&lt;div&gt;</code>s into a new set of leaf <code class="code">&lt;div&gt;</code>s, with
                  the appropriate <code class="code">@xml:lang</code> values applied.</p><p>Each <code class="code">&lt;div&gt;</code> must take a <code class="code">@type</code>, which points to the
                     <code class="code">@xml:id</code> values of a <code class="code">&lt;div-type&gt;</code>. </p><p>Each <code class="code">&lt;div&gt;</code> must include <code class="code">@n</code>, which carries a label
                  that identifies the number or name of a segment of the transcription. Although
                  defined as a string, <code class="code">@n</code> will be cast by processors as an
                     <code class="code">xs:integer</code> if possible, and if this feature has not been
                  overridden. See <a class="xref" href="ch06s02.xhtml#div-type" title="Division Types">the section called “Division Types”</a>.</p><p>Within this treelike structure of <code class="code">&lt;div&gt;</code>s, any given
                     <code class="code">&lt;div&gt;</code> will be identified by the paired values of
                     <code class="code">@type</code> and <code class="code">@n</code>, going from the most ancestral
                     <code class="code">&lt;div&gt;</code> down to the context node. The concatenation of the entire
                  chain is called the <span class="emphasis"><em>flat ref</em></span>, and it serves as an identifying
                  device. One of the most important validation rules must here be noted, the
                     <span class="emphasis"><em>Leaf Div Uniqueness Rule</em></span>, which states that the flat ref
                  for each leaf <code class="code">&lt;div&gt;</code> must be unique.</p><p>
                  </p><div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Note: Flattened References, and the Leaf Div Uniqueness Rule"><tr><td rowspan="2" align="center" valign="top" width="25"><img alt="[Note]" src="img/note.png"/></td><th align="left"><a id="leaf_div_uniqueness_rule"/>Flattened References, and the Leaf Div Uniqueness Rule</th></tr><tr><td align="left" valign="top"><p>Each leaf <code class="code">&lt;div&gt;</code> must have a full reference that is unique
                        within the document. Take for example a work that is structured into books,
                        chapters, and finally sections. If you are told to find book 3, chapter 7,
                        section b, line 5, you should be able to find the one place where that
                        applies. There should not be two passages labeled 3.7.b.5.</p><p>It is helpful to visualize the way the leaf <code class="code">&lt;div&gt;</code>
                        uniqueness rule gets calculated, because this process is used to validate
                        class 2 files. First, imagine each <code class="code">&lt;div&gt;</code> in the hierarchy
                        having their <code class="code">@n</code> and <code class="code">@div</code> values joined by a single
                        space or punctuation character to form a single string, e.g.,
                           <code class="code">book.3</code>, <code class="code">chapter.7</code>, <code class="code">section.b</code>, and
                           <code class="code">line.5</code>. Then picture the entire hierarchy of
                           <code class="code">&lt;div&gt;</code>s collapsing into a flat list of leaf
                           <code class="code">&lt;div&gt;</code>s. Once collapsed, each leaf <code class="code">&lt;div&gt;</code>
                        takes a new value that combines the reference values of its ancestors,
                        joining them once again by some space or punctuation mark, e.g.,
                           <code class="code">book.3:chapter.7:section.b:line.5</code>. (The choice of periods
                        and colons is entirely arbitrary; see <a class="xref" href="ch07.xhtml#flattened_refs_punctuation" title="Punctuation in flattened references">Punctuation in flattened references</a>)</p><p>Each flat ref must be unique. Any transcription file that has leaf
                           <code class="code">&lt;div&gt;</code>s with duplicate flattened references will be
                        rendered invalid.</p><p>This rule applies only to leaf <code class="code">&lt;div&gt;</code>s and not to
                           <code class="code">&lt;div&gt;</code>s in general. That is because there are many cases
                        where a source will begin a major textual unit, interject another one, then
                        resume the previous one. For example, chapters 24 and 30 in the book of
                        Proverbs of the Septuagint are split in half and collated. The sequence goes
                        as follows: 24.1 - 24.22e (22a - 22e are verses not extant in the Hebrew);
                        30.1 - 30.14; 24.23 - 24.34; and 30.15 - 30.33. If the uniqueness rule
                        applied universally, this kind of reference system would be
                        impossible.</p></td></tr></table></div><p>
               </p><p>If a section of text traditionally carries no label, for example an unnumbered
                  preface, this must declared explicitly with an empty value, i.e.,
                     <code class="code">@n=""</code>. In such cases look out for ambigua: any other sibling
                     <code class="code">&lt;div&gt;</code> of the same type that would assign its <code class="code">@n</code> as
                  a null value (for example, two prefaces to the same work).</p><div class="example"><a id="d5e3153"/><p class="title"><strong>Example 6.13. TAN-T <code class="code">&lt;body&gt;</code>, <code class="code">&lt;div&gt;</code></strong></p><div class="example-contents"><pre class="programlisting">   ...........
   &lt;body xml:lang="eng" in-progress="false"&gt;
      &lt;div type="line" n="1"&gt;Ring-a-ring-a-roses,&lt;/div&gt;
      &lt;div type="line" n="2"&gt;A pocket full of posies;&lt;/div&gt;
      &lt;div type="line" n="3"&gt;Hush! Hush! Hush! Hush!&lt;/div&gt;
      &lt;div type="line" n="4"&gt;We're all tumbled down.&lt;/div&gt;
   &lt;/body&gt;
   ...........               </pre></div></div><br class="example-break"/></div></div><div class="navfooter"><hr/><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"><a accesskey="p" href="ch06.xhtml">Prev</a> </td><td width="20%" align="center"><a accesskey="u" href="ch06.xhtml">Up</a></td><td width="40%" align="right"> <a accesskey="n" href="ch06s03.xhtml">Next</a></td></tr><tr><td width="40%" align="left" valign="top">Chapter 6. Class 1 TAN Files, Representations of Textual Objects </td><td width="20%" align="center"><a accesskey="h" href="index.xhtml">Home</a></td><td width="40%" align="right" valign="top"> Transcriptions Using the Text Encoding Initiative
               (<code class="code">&lt;TAN-TEI&gt;</code>)</td></tr></table></div></body></html>