<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>Chapter 7. Class 2 TAN files, Annotations of Texts</title><link rel="stylesheet" type="text/css" href="../../../../css/TAN-guidelines.css"/><meta name="generator" content="DocBook XSL Stylesheets V1.78.1"/><link rel="home" href="index.xhtml" title="The Text Alignment Network: Official Guidelines"/><link rel="up" href="pt02.xhtml" title="Part II. Detailed Description"/><link rel="prev" href="ch06s03.xhtml" title="Transcriptions Using the Text Encoding Initiative (&lt;TAN-TEI&gt;)"/><link rel="next" href="ch07s02.xhtml" title="Alignments: Principles and Assumptions"/></head><body><div class="navheader"><table width="100%" summary="Navigation header"><tr><th colspan="3" align="center">Chapter 7. Class 2 TAN files, Annotations of Texts</th></tr><tr><td width="20%" align="left"><a accesskey="p" href="ch06s03.xhtml">Prev</a> </td><th width="60%" align="center">Part II. Detailed Description</th><td width="20%" align="right"> <a accesskey="n" href="ch07s02.xhtml">Next</a></td></tr></table><hr/></div><div class="chapter"><div class="titlepage"><div><div><h2 class="title"><a id="class_2"/>Chapter 7. Class 2 TAN files, Annotations of Texts</h2></div></div></div><div class="toc"><p><strong>Table of Contents</strong></p><dl class="toc"><dt><span class="section"><a href="ch07.xhtml#class_2_common">Common Elements</a></span></dt><dd><dl><dt><span class="section"><a href="ch07.xhtml#class_2_metadata">Class 2 Metadata (<code class="code">&lt;head&gt;</code>)</a></span></dt><dt><span class="section"><a href="ch07.xhtml#class_2_body">Class 2 Data Patterns (<code class="code">&lt;body&gt;</code>)</a></span></dt><dt><span class="section"><a href="ch07.xhtml#inheritable_attributes">Inheritable attributes</a></span></dt></dl></dd><dt><span class="section"><a href="ch07s02.xhtml">Alignments: Principles and Assumptions</a></span></dt><dt><span class="section"><a href="ch07s03.xhtml">Division-Based Alignments (<code class="code">&lt;TAN-A-div&gt;</code>)</a></span></dt><dd><dl><dt><span class="section"><a href="ch07s03.xhtml#d5e3854">Rootmost Element and Header</a></span></dt><dt><span class="section"><a href="ch07s03.xhtml#d5e3886">Data (<code class="code">&lt;body&gt;</code>)</a></span></dt></dl></dd><dt><span class="section"><a href="ch07s04.xhtml">Token-Based Alignments (<code class="code">&lt;TAN-A-tok&gt;</code>)</a></span></dt><dd><dl><dt><span class="section"><a href="ch07s04.xhtml#d5e4486">Rootmost Element and Header</a></span></dt><dt><span class="section"><a href="ch07s04.xhtml#d5e4619">Data (<code class="code">&lt;body&gt;</code>)</a></span></dt></dl></dd><dt><span class="section"><a href="ch07s05.xhtml">Lexico-Morphology</a></span></dt><dd><dl><dt><span class="section"><a href="ch07s05.xhtml#d5e4734">Principles and Assumptions</a></span></dt><dt><span class="section"><a href="ch07s05.xhtml#d5e4740">Rootmost Element and Header</a></span></dt><dt><span class="section"><a href="ch07s05.xhtml#decl_grammar"><code class="code">&lt;morphology&gt;</code></a></span></dt><dt><span class="section"><a href="ch07s05.xhtml#d5e4855">Data (<code class="code">&lt;body&gt;</code>)</a></span></dt></dl></dd></dl></div><p>This chapter is devoted to class 2 formats, all of which annotate class 1 files.
            Class 2 files deal with either alignment or lexico-morphology. </p><p>Alignment files come in two different formats, identified by the rootmost element.
            TAN-A-div is macroscopic; TAN-A-tok, microscopic. TAN-A-div aligns any number (one or
            more) of class 1 files. It is intended for broad, general alignments of any number of
            versions of any number of works. TAN-A-tok handle pairs (and only pairs) of class 1
            files, and allows one to declare alignments with detailed specificity, certainty, and
            type. </p><p>Lexico-morphology files (also called part-of-speech files), TAN-LM, are used to
            encode the lexical headwords and morphological forms of individual words in class 1
            files.</p><div class="section"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="class_2_common"/>Common Elements</h2></div></div></div><p>The class 2 formats have been designed with the goal of making the data as human
               readable as possible. And because that data invariably points to class 1 files, it
               has been assumed that those references should be as humanly intuitive as possible. In
               ordinary conversation, when we wish to point another person to a specific part of a
               text, we generally use locators that refer to pages, paragraphs, sentences, lines,
               words, letters, and so forth, and we include relative keywords, and sometimes
               portions of the text iteslf. For example, we prefer to say "See page 4, second
               paragraph, the last four words." Or "See page 4, second paragraph, first sentence,
               second occurence of 'pull'." We generally find it difficult if not impossible to
               construct and interpret "See characters 2496-2502, 2504-2509, and 2510-2512." </p><p>TAN adopts a system of referencing that imitates the form natural to humans. There
               are some unavoidable constraints. First, reference must be made to features that are
               encoded in the source XML file. So reference must be made to the reference system
               adopted by the source file, and not to altenative, overlapping reference systems.
               Second, because the sources are commited to space normalization and the flexibility
               therein entailed, it is impossible to point to space-sensitive features such as lines
               or character numbers. Therefore references to class 1 files depend upon four features
               that are relatively stable: work-versions, divisions, word tokens, and characters.
                  <span class="emphasis"><em>Work-versions</em></span> are taken to be equivalent to the
                  <span class="emphasis"><em>sources</em></span>, i.e., the class 1 files invoked by a class 2 file.
                  <span class="emphasis"><em>Divisions</em></span> are defined by the <code class="code">&lt;div&gt;</code> structure
               of each class 1 transcription. <span class="emphasis"><em>Tokens</em></span> are defined according to
               one or more tokenization rules. And <span class="emphasis"><em>characters</em></span> are defined, when
               possible, by the codepoints that make up a particular word token.</p><p>This fourfold hierarchy—sources, divisions, tokens, and characters—are referred to
               with vocabulary that the editor of a class 2 file finds most useful. Sources can be
               given a nickname (through <code class="code">@xml:id</code>), the names of division types and
               labels can be adjusted, word tokens can be referred to by number (whether from the
               beginning of a <code class="code">&lt;div&gt;</code> or the end) or by content. Characters are always
               numbered.</p><p>This approach not only makes the syntax human readable, it also mitigates
               disruptions introduced by alterations in a source. For example, if a word in a source
               transcription is deleted, the token and character references might be disrupted, but
               references to the <code class="code">&lt;div&gt;</code> or source remain valid.</p><p>The human-friendly reference system outlined above is facilitated by core
               components in the <code class="code">&lt;head&gt;</code> and <code class="code">&lt;body&gt;</code> of all class 2
               files.</p><div class="section"><div class="titlepage"><div><div><h3 class="title"><a id="class_2_metadata"/>Class 2 Metadata (<code class="code">&lt;head&gt;</code>)</h3></div></div></div><p>All class 2 files have as their sources nothing other than class 1 files.
                  Therefore each <code class="code">&lt;source&gt;</code> must take only a single
                     <code class="code">&lt;IRI&gt;</code> that carries the IRI name of the source TAN-T(EI) file.
                  There must be at least one <code class="code">&lt;location&gt;</code>. Because the rights have
                  already been declared in the source files, <code class="code">&lt;rights-source-only&gt;</code> is
                  not allowed. For more, see above, <a class="xref" href="ch05s03.xhtml#source_and_see-also" title="Sources and related files">the section called “Sources and related files”</a>.</p><p>Within <code class="code">&lt;declarations&gt;</code> each class 2 file takes the following
                  children:</p><div class="table"><a id="d5e3322"/><p class="title"><strong>Table 7.1. Synopsis of <code class="code">&lt;tokenization&gt;</code>,
                        <code class="code">&lt;suppress-div-types&gt;</code>,
                        <code class="code">&lt;implicit-div-type-refs&gt;</code>,
                     <code class="code">&lt;rename-div-types&gt;</code>, <code class="code">&lt;rename-div-ns&gt;</code>,
                        <code class="code">&lt;rename&gt;</code></strong></p><div class="table-contents"><table summary="Synopsis of &lt;tokenization&gt;,&#xA;                        &lt;suppress-div-types&gt;,&#xA;                        &lt;implicit-div-type-refs&gt;,&#xA;                     &lt;rename-div-types&gt;, &lt;rename-div-ns&gt;,&#xA;                        &lt;rename&gt;" border="1"><colgroup><col class="c1"/><col class="c3"/><col class="c4"/><col class="c5"/><col class="newCol7"/><col class="newCol6"/><col class="c6"/></colgroup><thead><tr><th>name</th><th>req?</th><th>qty</th><th>parent</th><th>attributes</th><th>children</th><th>purpose</th></tr></thead><tbody><tr><td><code class="code">&lt;tokenization&gt;</code></td><td>varies</td><td>one</td><td><code class="code">&lt;declarations&gt;</code></td><td><a class="xref" href="ch05.xhtml#edit_stamp" title="Edit Stamp">the section called “Edit Stamp”</a>?, <code class="code">@src</code>?,
                                 <code class="code">@which</code>?</td><td><a class="xref" href="ch05.xhtml#digital_entity_metadata" title="Digital Entity Metadata Pattern">the section called “Digital Entity Metadata Pattern”</a>?</td><td>indicate a tokenization rule to be applied to a source</td></tr><tr><td><code class="code">&lt;suppress-div-types&gt;</code></td><td>no</td><td>one or more</td><td><code class="code">&lt;declarations&gt;</code></td><td><a class="xref" href="ch05.xhtml#edit_stamp" title="Edit Stamp">the section called “Edit Stamp”</a>?, <code class="code">@div-type-ref</code></td><td>data (xsd:string)</td><td>indicate what division types in what sources will be suppressed in
                              references</td></tr><tr><td><code class="code">&lt;implicit-div-type-refs&gt;</code></td><td>no</td><td>one</td><td><code class="code">&lt;declarations&gt;</code></td><td><a class="xref" href="ch05.xhtml#edit_stamp" title="Edit Stamp">the section called “Edit Stamp”</a>?, <code class="code">@src</code></td><td>----</td><td>specify sources whose div types should be inferred in references
                              to that source</td></tr><tr><td><code class="code">&lt;rename-div-types&gt;</code></td><td>no</td><td>one or more</td><td><code class="code">&lt;declarations&gt;</code></td><td><a class="xref" href="ch05.xhtml#edit_stamp" title="Edit Stamp">the section called “Edit Stamp”</a>?, <code class="code">@src</code></td><td><code class="code">&lt;rename&gt;</code></td><td>Indicate, for a given source, div types whose <code class="code">@xml:id</code>
                              values should be provisionally renamed for the purpose of the class 2
                              file.</td></tr><tr><td><code class="code">&lt;rename-div-ns&gt;</code></td><td>no</td><td>one or more</td><td><code class="code">&lt;declarations&gt;</code></td><td><a class="xref" href="ch05.xhtml#edit_stamp" title="Edit Stamp">the section called “Edit Stamp”</a>?, <code class="code">@src</code>,
                                 <code class="code">@div-type-ref</code></td><td><code class="code">&lt;rename&gt;</code></td><td>Indicate, for a given source and div type, <code class="code">@n</code> values
                              that should be provisionally renamed for the purpose of the class 2
                              file.</td></tr><tr><td><code class="code">&lt;rename&gt;</code></td><td>yes</td><td>one or more</td><td><code class="code">&lt;rename-div-types&gt;</code> or
                                 <code class="code">&lt;rename-div-ns&gt;</code></td><td><code class="code">@old</code>, <code class="code">@new</code></td><td>----</td><td>Specify labels that should be renamed for the sake of the class 2
                              file.</td></tr></tbody></table></div></div><br class="table-break"/><p>Most class 2 files must be able to name or number word-tokens in a
                  transcription. All class 2 files that require tokenization (i.e., TAN-A-tok and
                  TAN-LM) must have under <code class="code">&lt;declarations&gt;</code> one or more
                     <code class="code">&lt;tokenization&gt;</code>s that can be applied to every language in every
                  source. Class 2 files that do not require tokenization (i.e., TAN-A-div) must
                  include <code class="code">&lt;tokenization&gt;</code> only if the file uses elements (e.g.,
                     <code class="code">&lt;split-leaf-div-at&gt;</code>) that assume tokenization. </p><p><a id="tokenization"/>Each <code class="code">&lt;tokenization&gt;</code> takes, in addition to
                  the optional Edit Stamp, <code class="code">@src</code> to specify which sources (suppressed in
                  TAN-LM, which has only one source) and either <code class="code">@which</code> or a <a class="xref" href="ch05.xhtml#digital_entity_metadata" title="Digital Entity Metadata Pattern">the section called “Digital Entity Metadata Pattern”</a> to a single TAN-R-tok file. The attribute
                     <code class="code">@which</code> takes either an id reference to a
                     <code class="code">&lt;recommended-tokenization&gt;</code> in the sources indicated by
                     <code class="code">@src</code> or a keyword to one of the core TAN tokenization files
                     (<code class="code">general-1</code>, <code class="code">general-words-only-1</code>, and
                     <code class="code">precise-1</code>; see <a class="xref" href="ch06s02.xhtml#recommended-tokenizations" title="Recommended Tokenizations">the section called “Recommended Tokenizations”</a>). If
                  neither the recommended nor core tokenization methods are suitable, you may point
                  instead to another TAN-R-tok file through the <a class="xref" href="ch05.xhtml#digital_entity_metadata" title="Digital Entity Metadata Pattern">the section called “Digital Entity Metadata Pattern”</a>. See <a class="xref" href="ch08.xhtml#tan-r-tok" title="Tokenization Patterns">the section called “Tokenization Patterns”</a> for more
                  on these files.</p><div class="caution" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Caution"><tr><td rowspan="2" align="center" valign="top" width="25"><img alt="[Caution]" src="img/caution.png"/></td><th align="left">Caution</th></tr><tr><td align="left" valign="top"><p>It is not predictable whether a regular expression engine will include or
                     exclude combining characters in a search. You will need to worry about this
                     only if you are working with texts that use combining characters. For more
                     details see <a class="xref" href="ch04s03.xhtml#regular_expressions" title="Regular Expressions">the section called “Regular Expressions”</a> and <a class="xref" href="ch04s03.xhtml#combining_characters" title="Combining characters">Combining characters</a>.</p></td></tr></table></div><p>There may be some cases where a source has a div type that is extraneous to
                  referencing the text. A single optional <code class="code">&lt;suppress-div-types&gt;</code> may
                  be used to specify division types that the aligner wishes to ignore.
                     <code class="code">&lt;suppress-div-types&gt;</code> takes, in addition to the optional Edit
                  Stamp (<a class="xref" href="ch05.xhtml#edit_stamp" title="Edit Stamp">the section called “Edit Stamp”</a>), <code class="code">@div-type-ref</code>, which takes one
                  or more space-delimited id references to div types in the source file.</p><div class="caution" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Caution"><tr><td rowspan="2" align="center" valign="top" width="25"><img alt="[Caution]" src="img/caution.png"/></td><th align="left">Caution</th></tr><tr><td align="left" valign="top"><p>Any <code class="code">&lt;suppress-div-types&gt;</code> invoked where omission of the div
                     type does not preserve the Leaf Div Uniqueness Rule (see <a class="xref" href="ch06s02.xhtml#leaf_div_uniqueness_rule" title="Flattened References, and the Leaf Div Uniqueness Rule">Flattened References, and the Leaf Div Uniqueness Rule</a>) will result in an error upon
                     validation.</p></td></tr></table></div><p><a id="implicit-div-type-refs"/>A single
                     <code class="code">&lt;implicit-div-type-refs&gt;</code> is allowed. This otherwise empty
                  element takes only <code class="code">@src</code>, which lists the sources for which all div
                  types will be suppressed in references to that source. This feature allows you to
                  use briefer flattened references, but it does not preclude use of longer
                  references (see <a class="xref" href="ch07.xhtml#attr_ref" title="@ref">the section called “<code class="code">@ref</code>”</a>). This feature is disallowed for
                  sources where ignoring the types would result in duplicate flattened references
                  and therefore ambiguity. For example, a source that has <code class="code">question.13</code>
                  followed by <code class="code">answer.13</code> would make the simple flattened reference
                     <code class="code">13</code> impossible to interpret. The feature is also disallowed for
                  sources that have an <code class="code">@n</code> value that is empty. The only exception to
                  this rule are cases where <code class="code">&lt;rename-div-ns&gt;</code> is used to convert a
                  numeration system to Arabic numerals; in those cases <code class="code">n=""</code> will be
                  interpreted to mean <code class="code">n="0"</code>. For any <code class="code">@src</code>, either all or
                  no sources must be declared in <code class="code">&lt;implicit-div-type-refs&gt;</code>.
                  References to a mix of implicit and explicit div type sources are
                  disallowed.</p><p>One or more <code class="code">&lt;rename-div-types&gt;</code> may be invoked.
                     <code class="code">@src</code> specifies the applicable sources. The sole children of the
                  element are one or more <code class="code">&lt;rename&gt;</code>s, which through <code class="code">@old</code>
                  and <code class="code">@new</code> specify the old label and the new one. One or more
                     <code class="code">&lt;rename-div-ns&gt;</code> may be used to swap the values of specific
                     <code class="code">@n</code>s for one or more div-types of one or more sources (defined
                  through <code class="code">@div-type-ref</code> and <code class="code">@src</code>, respectively). </p><p><code class="code">&lt;rename-div-types&gt;</code> is useful for cases where an aligner wishes
                  to use a different abbrevation for the same div type. This can be especially
                  helpful in an alignment file, to avoid confusion in references to works that use
                  different abbreviations for the same kind of division. Changing the div type does
                  not affect the underlying definition. If you are writing a TAN-A-div file and you
                  wish to equate div types defined differently (they do not have overlapping
                     <code class="code">&lt;IRI&gt;</code> values), you must use <code class="code">&lt;equate-div-types&gt;</code>,
                  discussed below (<a class="xref" href="ch07s03.xhtml" title="Division-Based Alignments (&lt;TAN-A-div&gt;)">the section called “Division-Based Alignments (<code class="code">&lt;TAN-A-div&gt;</code>)”</a>).</p><p>Similarly, <code class="code">&lt;rename-div-ns&gt;</code> provides a convenient way to rename
                     <code class="code">@n</code> values. It may be useful in cases where you wish to use
                  division labels that are more familiar, or that are identical to the vocabulary of
                  another source invoked in the class 2 file. For example, if one source numbers the
                  surahs of the Qur'an and another uses the traditional names, this element can be
                  used to reconcile those differences, by assigning names to numbers, or vice versa.
                  Or it can be used to adopt labels that would be easier to use in the alignment
                  file. In addition, this feature can be used to convert Roman or alphabetic
                  numerals to Arabic. In these cases, the content should be the special elements
                     <code class="code">&lt;rename old="#i" new="#1"/&gt;</code> (indicates a change from Roman
                  numerals to Arabic) or <code class="code">&lt;rename old="#a" new="#1"/&gt;</code> (change from
                  letter numeration to Arabic).</p><p><code class="code">&lt;rename-div-ns&gt;</code> has potentially more impact than
                     <code class="code">&lt;rename-div-types&gt;</code>. Whereas the latter points to division types
                  that are defined by the <code class="code">&lt;IRI&gt;</code> value under
                     <code class="code">&lt;div-type&gt;</code>, and does not change that definition, the former
                  points to and provisionally alters the value of <code class="code">@n</code> in one or more
                     <code class="code">&lt;div&gt;</code>s. Because <code class="code">&lt;rename-div-ns&gt;</code> effectively
                  changes the actual value, it must preserve the Leaf Div Uniqueness Rule.
                  Furthermore, in a TAN-A-div file, this kind of renaming changes the default
                  behavior of the alignment. See <a class="xref" href="ch07s03.xhtml" title="Division-Based Alignments (&lt;TAN-A-div&gt;)">the section called “Division-Based Alignments (<code class="code">&lt;TAN-A-div&gt;</code>)”</a>.</p><div class="example"><a id="d5e3502"/><p class="title"><strong>Example 7.1. <code class="code">&lt;filter&gt;</code>: <code class="code">&lt;tokenization&gt;</code> through
                        <code class="code">@which</code></strong></p><div class="example-contents"><p>
                     </p><pre class="programlisting">   ...........
   &lt;declarations&gt;
      ...........
      &lt;tokenization src="A-fra" which="general-1"/&gt;
      ...........
   &lt;/declarations&gt;
   ...........</pre><p>
                  </p></div></div><br class="example-break"/><div class="example"><a id="d5e3509"/><p class="title"><strong>Example 7.2. <code class="code">&lt;declarations&gt;</code>: <code class="code">&lt;tokenization&gt;</code> through IRI
                     + name pattern</strong></p><div class="example-contents"><p>
                     </p><pre class="programlisting">   ...........
   &lt;declarations&gt;
      ...........
      &lt;tokenization src="eng"&gt;
         &lt;IRI&gt;tag:textalign.net,2015:tokenization:eng.1&lt;/IRI&gt;
         &lt;name&gt;Tokenization pattern for English, in Penn Treebank style&lt;/name&gt;
         &lt;location when-accessed="2015-03-17"&gt;../TAN-R-tok/tok.eng.1.xml&lt;/location&gt;
      &lt;/tokenization&gt;
      ...........
   &lt;/declarations&gt;
   ...........</pre><p>
                  </p></div></div><br class="example-break"/><div class="example"><a id="d5e3515"/><p class="title"><strong>Example 7.3. <code class="code">&lt;declarations&gt;</code>:
                     <code class="code">&lt;suppress-div-types&gt;</code></strong></p><div class="example-contents"><p>
                     </p><pre class="programlisting">   ...........
   &lt;declarations&gt;
      ...........
      &lt;suppress-div-types div-type-ref="stanza" src="ps-eng"/&gt;
      ...........
   &lt;/declarations&gt;
   ...........</pre><p>
                  </p><div class="caption"><p>In this example, Psalm 119 (LXX 118) has been subdivided by one TAN-T
                        source into its traditional 22 stanzas (one for each letter in the Hebrew
                        alphabet) before it has been subdivided into verses. The aligner chooses to
                        suppress them, so that values of <code class="code">@ref</code> can be more brief, e.g.,
                           <code class="code">psalm.119:stanza.3:v.46</code> can be rendered simply as
                           <code class="code">psalm.119:v.46</code>).</p></div></div></div><br class="example-break"/><div class="example"><a id="d5e3526"/><p class="title"><strong>Example 7.4. <code class="code">&lt;declarations&gt;</code>: <code class="code">&lt;rename-div-types&gt;</code></strong></p><div class="example-contents"><p>
                     </p><pre class="programlisting">   ...........
   &lt;declarations&gt;
      ...........
      &lt;rename-div-types src="A-grc"&gt;
         &lt;rename old="βιβ" new="bk"/&gt;
      &lt;/rename-div-types&gt;
      ...........
   &lt;/declarations&gt;
   ...........</pre><p>
                  </p><div class="caption"><p>The above <code class="code">&lt;rename-div-types&gt;</code> changes the label for the
                        division type book, from an abbreviation in the Greek alphabet to one in the
                        Roman. </p></div></div></div><br class="example-break"/><div class="example"><a id="d5e3535"/><p class="title"><strong>Example 7.5. <code class="code">&lt;declarations&gt;</code>: <code class="code">&lt;rename-div-ns&gt;</code></strong></p><div class="example-contents"><p>
                     </p><pre class="programlisting">   ...........
   &lt;declarations&gt;
      ...........
      &lt;rename-div-ns src="A-grc" div-type-ref="bk"&gt;
         &lt;rename old="γεν" new="Gen"/&gt;
         &lt;rename old="εξοδ" new="Ex"/&gt;
         &lt;rename old="λευ" new="Lev"/&gt;
      &lt;/rename-div-ns&gt;
      &lt;rename-div-ns src="A-lat" div-type-ref="bk"&gt;
         &lt;rename old="#i" new="#1"/&gt;
      &lt;/rename-div-ns&gt;
      ...........
   &lt;/declarations&gt;
   ...........   </pre><p>
                  </p><div class="caption"><p>This example illustrates both label changes and numeration system changes
                        (from Roman numerals to Arabic).</p></div></div></div><br class="example-break"/></div><div class="section"><div class="titlepage"><div><div><h3 class="title"><a id="class_2_body"/>Class 2 Data Patterns (<code class="code">&lt;body&gt;</code>)</h3></div></div></div><p>Because all class 2 files have exclusively class 1 files as sources, some
                  patterns recur throughout the <code class="code">&lt;body&gt;</code> of class 2 files.</p><div class="section"><div class="titlepage"><div><div><h4 class="title"><a id="tok_pattern"/><code class="code">&lt;tok&gt;</code></h4></div></div></div><div class="table"><a id="d5e3551"/><p class="title"><strong>Table 7.2. Synopsis of <code class="code">&lt;tok&gt;</code></strong></p><div class="table-contents"><table summary="Synopsis of &lt;tok&gt;" border="1"><colgroup><col class="c1"/><col class="c3"/><col class="c4"/><col class="c5"/><col class="newCol7"/><col class="newCol6"/><col class="c6"/></colgroup><thead><tr><th>name</th><th>req?</th><th>qty</th><th>parent</th><th>attributes</th><th>children</th><th>purpose</th></tr></thead><tbody><tr><td><code class="code">&lt;tok&gt;</code></td><td>yes</td><td>one or more</td><td>varies</td><td><a class="xref" href="ch05.xhtml#edit_stamp" title="Edit Stamp">the section called “Edit Stamp”</a>?, <code class="code">@cert</code>?*,
                                    <code class="code">@src</code>, <code class="code">@ref</code>, <code class="code">@ord</code>?,
                                    <code class="code">@val</code>?, <code class="code">@chars</code>?</td><td>------</td><td>refer to a word token or word token fragment</td></tr></tbody></table><div class="caption"><p>* not true for TAN-A-div, which takes no certainty</p></div></div></div><br class="table-break"/><p><code class="code">&lt;tok&gt;</code> takes, in addition to an optional <a class="xref" href="ch05.xhtml#edit_stamp" title="Edit Stamp">the section called “Edit Stamp”</a>, the following attributes:</p><p><code class="code">@cert</code> indicates the level of confidence an editor has in the
                     statement made about the tokens referenced. This attribute is not allowed in
                     the TAN-A-div format. See <a class="xref" href="ch07.xhtml#attr_cert" title="@cert">the section called “<code class="code">@cert</code>”</a>.</p><p><code class="code">@src</code> refers to one or more sources. This attribute does not
                     exist in class 2 files with only one source (TAN-LM). In class 2 files with
                     only two sources (TAN-A-tok), <code class="code">@src</code> may take no more than one
                     value. All others (TAN-A-div) allow multiple values.</p><p><code class="code">@ref</code> takes a sequence of references to sources. See <a class="xref" href="ch07.xhtml#attr_ref" title="@ref">the section called “<code class="code">@ref</code>”</a> for a full discussion.</p><p>One or more word tokens are referred to either through a numerical value (or
                     range of numbers) for <code class="code">@ord</code> or a string value for <code class="code">@val</code>
                     or a combination of the two (see <a class="xref" href="ch07.xhtml#attr_ord_and_val" title="@ord and @val">the section called “<code class="code">@ord</code> and <code class="code">@val</code>”</a> for the
                     pattern). </p><p><code class="code">@chars</code> takes a sequence of numbers (constructed like
                        <code class="code">@ord</code>) that state an exact range of letters or characters
                     (prefix, infixes, or suffix). This attribute is not allowed in TAN-A-div files.</p><div class="caution" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Caution"><tr><td rowspan="2" align="center" valign="top" width="25"><img alt="[Caution]" src="img/caution.png"/></td><th align="left">Caution</th></tr><tr><td align="left" valign="top"><p><code class="code">@chars</code> is not allowed for tokens that contain combining
                           characters. See <a class="xref" href="ch04s03.xhtml#combining_characters" title="Combining characters">Combining characters</a>.</p></td></tr></table></div><p>There may be times when an editor needs a quick reminder as to how many
                     words or characters are allowed. As a convenience, a question mark may be
                     placed in <code class="code">@ord</code> or <code class="code">@chars</code>. Upon validation there will
                     be both an error message for the malformed content (a question mark is not
                     allowed) and a warning message indicating the maximal value allowed. The report
                     does not take into account the presence of <code class="code">@val</code>. That is, it
                     returns the greatest value of <code class="code">@ord</code> and <code class="code">@chars</code> that is
                     allowed.</p><p><code class="code">&lt;tok&gt;</code> therefore allows multiple values in each of four
                     attributes, all distributed. That is, any assertion involving a
                        <code class="code">&lt;tok&gt;</code> applies to every set of characters in every word token
                     in every <code class="code">@ref</code> in every <code class="code">@src</code>. For example, if
                        <code class="code">@src</code>, <code class="code">@ref</code>, and <code class="code">@ord</code> each have three
                     values, then that <code class="code">&lt;tok&gt;</code> names a sequence of twenty-seven
                     tokens. (This allowance facilitates more terse and humanly readable
                        <code class="code">&lt;body&gt;</code>s.)</p></div><div class="section"><div class="titlepage"><div><div><h4 class="title"><a id="attr_ref"/><code class="code">@ref</code></h4></div></div></div><p>Recall that the transcriptions in TAN-T(EI) files are segmented and
                     structured into a treelike hierarchy of nested <code class="code">&lt;div&gt;</code>s, each one
                     with a label (<code class="code">@n</code>) and a division type (<code class="code">@type</code>). The
                     validation rules for class 1 files stipulate that leaf <code class="code">&lt;div&gt;</code>s
                     must have unique references. That is, for each leaf <code class="code">&lt;div&gt;</code>,
                     proceed from the highest ancestor <code class="code">&lt;div&gt;</code> and move leafward,
                     concatenating the values of <code class="code">@type</code> and <code class="code">@n</code> along the
                     way. The result should be unique among all other leaf <code class="code">&lt;div&gt;</code>s. </p><p>All class 2 files refer to parts of a class 1 source through a flattened
                     reference (<a class="xref" href="ch06s02.xhtml#leaf_div_uniqueness_rule" title="Flattened References, and the Leaf Div Uniqueness Rule">Flattened References, and the Leaf Div Uniqueness Rule</a>). A flattened reference
                     is the concatenated value of the <code class="code">@type</code>s and <code class="code">@n</code>s of
                     all self and ancestral <code class="code">&lt;div&gt;</code>s, joined by non-word characters as
                     delimiters, and perhaps substituted with their new values if
                        <code class="code">&lt;rename-div-types&gt;</code> or <code class="code">&lt;rename-div-ns&gt;</code> have
                     been invoked (see <a class="xref" href="ch05s03.xhtml" title="Metadata (&lt;head&gt;)">the section called “Metadata (<code class="code">&lt;head&gt;</code>)”</a>). The delimiter to be used to
                     separate <code class="code">@n</code> and <code class="code">@type</code> values and pairs of
                        <code class="code">@n</code> + <code class="code">@type</code> values is completely arbitrary, but
                     common punctuation is recommended. Hyphens and commas are allowed, but not
                     recommended, since they are used specially to create ranges of
                     references.</p><p>Take, for example, book 3 chapter 4 section 2 in a source transcription that
                     uses the abbreviations <code class="code">bk</code>, <code class="code">c</code>, and <code class="code">s</code> for
                     the division types. When flattened, the reference becomes something like
                        <code class="code">bk.3:c.4:s.2</code>. </p><div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Note: Punctuation in flattened references"><tr><td rowspan="2" align="center" valign="top" width="25"><img alt="[Note]" src="img/note.png"/></td><th align="left"><a id="flattened_refs_punctuation"/>Punctuation in flattened references</th></tr><tr><td align="left" valign="top"><p>The periods and colons in <code class="code">bk.3:c.4:s.2</code> are entirely
                           arbitrary. Other forms, such as <code class="code">bk 3/c 4/s 2</code>
                           <code class="code">bk.3.c.4.s.2</code>
                           <code class="code">bk.3:c;4|s=2</code> are permissible and will be treated
                           identically. But for the sake of those who must read your data, it is
                           best to be clear and consistent and not to use misleading separators.
                           Punctuation acts to delimit elements in a hierarchy, so the values being
                           joined are in a hypotactic, not paratactic, relationship. You should
                           avoid any punctuation that incorrectly suggests coordination, such as the
                           ampersand or the comma. In these guidelines, a period is used to delimit
                              <code class="code">@n</code> and <code class="code">@type</code> values, and a colon is used to
                           chain <code class="code">@n</code>-<code class="code">@type</code> pairs.</p><p>It is important to avoid the use of the space as a delimiter in cases
                           where unlabeled <code class="code">&lt;div&gt;</code>s are used. For example, for an
                           unnumbered preface, the preferred flattened reference would be
                              <code class="code">"preface."</code> and not <code class="code">"preface "</code>.</p></td></tr></table></div><p>Many sources will be structured to allow you to declare the div types to be
                     implicit (see <a class="xref" href="ch07.xhtml#implicit-div-type-refs">the section called “Class 2 Metadata (<code class="code">&lt;head&gt;</code>)”</a>). In those cases either
                     the longer form or a shorter one may be used: <code class="code">3:4:2</code>.</p><p>In some cases, <code class="code">@ref</code> may take a sequence of references,
                     constructed by taking two or more flattened references and joining them with a
                     hyphen <code class="code">-</code> (for range) or a comma <code class="code">,</code> (for union). In any
                     range, the division referred to on the left should precede that on the right
                     according to document order. Two flattened references joined by a hyphen
                     signify an entire range of leaf <code class="code">&lt;div&gt;</code>s. A comma indicates the
                     union of references or ranges on either side. Flattened references must be
                     spelled in full. For example, <code class="code">bk.3:c.4:s.2 - bk.3:c.4:s.4 ,
                        bk.3:c.4:s.8</code> and <code class="code">3:4:2 - 3:4:4 , 3:4:8</code> are correct ways
                     to refer to sections 2, 3, 4, and 8 of the fourth chapter of book three. </p><p>In some cases, a range of references must be siblings (i.e., <code class="code">bk.3 -
                        bk.3:c.4:s.4</code> would be disallowed), as, for example, in elements for
                     which <code class="code">@distribute</code> (<a class="xref" href="ch07s03.xhtml#attr_distribute">the section called “Data (<code class="code">&lt;body&gt;</code>)”</a>) is
                        <code class="code">true</code>.</p></div><div class="section"><div class="titlepage"><div><div><h4 class="title"><a id="attr_ord_and_val"/><code class="code">@ord</code> and <code class="code">@val</code></h4></div></div></div><p>To point to a token, one of three methods may be used.</p><p>
                     </p><div class="orderedlist"><ol class="orderedlist" type="1"><li class="listitem"><p><span class="italic"><code class="code">@ord</code> alone</span>. Under
                              this method, one or more digits, or the phrase <code class="code">last</code> or
                                 <code class="code">last-</code> plus a digit, joined by hyphens or commas
                              indicate one or more token numbers. For example, <code class="code">2, 4 - 6,
                                 last-2 - last</code> refers to the second, fourth, fifth, sixth,
                              antepenult, penult, and final tokens in a sequence of word
                              tokens.</p></li><li class="listitem"><p><span class="italic"><code class="code">@val</code> alone</span>. Under
                              this method, a single token is picked by means of a string value
                              equivalent to the token. For example, <code class="code">@val = "bird"</code>,
                              points to the first occurence of the token <code class="code">bird</code>.</p></li><li class="listitem"><p><span class="italic"><code class="code">@ord</code> and <span class="italic"><code class="code">@val</code></span> together.</span>
                              Under this method, specific occurences of a token are picked. For
                              example, <code class="code">@val="bird" @ord="2, 4"</code> picks the second and
                              fourth occurences of the token <code class="code">bird</code>.</p></li></ol></div><p>
                  </p><p>If <code class="code">@ord</code> points to an ordinal value of a word token or token
                     value beyond the acceptable range for every <code class="code">@src</code> and
                        <code class="code">@ref</code>, an error will be generated. This is true not just for
                     absolute digits, but those combined with <code class="code">last</code>. For example, the
                     attribute combination <code class="code">val="bird" ord="last-5"</code> will produce an
                     error if the word token <code class="code">bird</code> does not occur more than five
                     times.</p><p>The numerical value to which the keyword <code class="code">last</code> resolves depends
                     upon the context of each source and ref.</p><p>There may be times when an editor needs a quick reminder as to how many
                     words or characters are allowed. As a convenience, a question mark may be
                     placed in <code class="code">@ord</code> (the following is true also for
                     <code class="code">@chars</code>). Upon validation there will be both an error message for
                     the malformed content (a question mark is not allowed) and a warning message
                     indicating the maximal value allowed. The report does not take into account the
                     presence of <code class="code">@val</code>. That is, it returns the greatest value of
                        <code class="code">@ord</code> that is allowed.</p></div><div class="section"><div class="titlepage"><div><div><h4 class="title"><a id="attr_cert"/><code class="code">@cert</code></h4></div></div></div><p><code class="code">@cert</code> takes a decimal numeral from 0 to 1 or else
                        <code class="code">high</code> or <code class="code">low</code>, which are to be interpreted as
                     meaning "is probably" and "is probably not" respectively. </p><p>Assertions of certainty apply to a given statement absent inheritable
                     attributes (see <a class="xref" href="ch07.xhtml#inheritable_attributes" title="Inheritable attributes">the section called “Inheritable attributes”</a>), which establish
                     assumptions made for a given range of data before confidence is expressed.
                     Rather, <code class="code">@cert</code> is to be interpreted to mean: "Assuming the
                     abovementioned inheritable attributes to be true, I have <code class="code">@cert</code>
                     confidence about the following data:...."</p></div></div><div class="section"><div class="titlepage"><div><div><h3 class="title"><a id="inheritable_attributes"/>Inheritable attributes</h3></div></div></div><p>For class 2 formats, <code class="code">&lt;body&gt;</code> and its descendants may take
                  attributes whose values are defined in <code class="code">&lt;head&gt;</code>. This special class
                  of attributes are termed <span class="italic">inheritable
                  attributes</span>. Each descendant of <code class="code">&lt;body&gt;</code> takes the value
                  of the attribute found in the closest ancestor, if not present in the element
                  itself. </p><p>Each TAN format has been designed to limit inheritable attributes to the most
                  critical concepts for the field of inquiry covered by that format. From the
                  perspective of computability, there is no reason to restrict the number of
                  inheritable attributes; from a human perspective there is, because each new
                  inheritable attribute introduces a new parameter that has the potential to
                  exponentially increase file complexity.</p><p>Every inheritable attribute is asserted without qualification. That is, if a
                  inheritable attribute occurs alongside or under <code class="code">@cert</code>, the latter
                  does not apply to the former. Put another way, the combination of
                     <code class="code">@cert</code> and a inheritable attribute <code class="code">@x</code> are to be
                  interpreted to mean: "Assuming <code class="code">@x</code> to be true, I have
                     <code class="code">@cert</code> confidence about the following data:...."</p><p>TAN inheritable attributes are as follows:</p><div class="table"><a id="d5e3757"/><p class="title"><strong>Table 7.3. Inheritable attributes</strong></p><div class="table-contents"><table summary="Inheritable attributes" border="1"><colgroup><col class="c2"/><col class="newCol2"/><col class="newCol3"/><col class="newCol4"/><col class="c3"/><col class="c4"/></colgroup><thead><tr><th>Attribute name</th><th>A-tok</th><th>A-div</th><th>LM</th><th>refers to <code class="code">xml:id</code> of</th><th>specifies</th></tr></thead><tbody><tr><td><code class="code">@ed-who</code></td><td>y</td><td>y</td><td>y</td><td><code class="code">&lt;agent&gt;</code></td><td>Agent responsible for the data. See <a class="xref" href="ch05s03.xhtml#agent" title="Agents">the section called “Agents”</a>.</td></tr><tr><td><code class="code">@reuse-type</code></td><td>y</td><td>–</td><td>–</td><td><code class="code">&lt;reuse-type&gt;</code></td><td>The kind of textual reuse activity under consideration. See
                                    <a class="xref" href="ch07s04.xhtml#reuse_type" title="&lt;reuse-type&gt;">the section called “<code class="code">&lt;reuse-type&gt;</code>”</a>.</td></tr><tr><td><code class="code">@bitext-relation</code></td><td>y</td><td>–</td><td>–</td><td><code class="code">&lt;bitext-relation&gt;</code>
                              </td><td>The relationship between two source-bearing objects. See <a class="xref" href="ch07s04.xhtml#bitext_relation" title="&lt;bitext-relation&gt;">the section called “<code class="code">&lt;bitext-relation&gt;</code>”</a>.</td></tr><tr><td><code class="code">@lexicon</code></td><td>–</td><td>–</td><td>y</td><td><code class="code">&lt;lexicon&gt;</code></td><td>Thet lexicon that is being used. See <a class="xref" href="ch07s05.xhtml#decl_lexicon" title="&lt;lexicon&gt;">the section called “<code class="code">&lt;lexicon&gt;</code>”</a>.</td></tr><tr><td><code class="code">@morphology</code></td><td>–</td><td>–</td><td>y</td><td><code class="code">&lt;morphology&gt;</code></td><td>The rules for morphology or parts of speech. See <a class="xref" href="ch07s05.xhtml#decl_grammar" title="&lt;morphology&gt;">the section called “<code class="code">&lt;morphology&gt;</code>”</a>.</td></tr></tbody></table></div></div><p><br class="table-break"/></p></div></div></div><div class="navfooter"><hr/><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"><a accesskey="p" href="ch06s03.xhtml">Prev</a> </td><td width="20%" align="center"><a accesskey="u" href="pt02.xhtml">Up</a></td><td width="40%" align="right"> <a accesskey="n" href="ch07s02.xhtml">Next</a></td></tr><tr><td width="40%" align="left" valign="top">Transcriptions Using the Text Encoding Initiative
               (<code class="code">&lt;TAN-TEI&gt;</code>) </td><td width="20%" align="center"><a accesskey="h" href="index.xhtml">Home</a></td><td width="40%" align="right" valign="top"> Alignments: Principles and Assumptions</td></tr></table></div></body></html>