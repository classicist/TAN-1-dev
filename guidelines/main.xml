<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
   <info>
      <title>The Text Alignment Network: Official Guidelines</title>
      <legalnotice>
         <info>
            <title>Text Alignment Network: Official Guidelines</title>
            <copyright>
               <year>2015</year>
               <holder>Joel Kalvesmaki</holder>
            </copyright>
            <author>
               <personname>Joel Kalvesmaki</personname>
               <email>kalvesmaki@gmail.com</email>
            </author>
         </info>
         <remark> This work is licensed under a Creative Commons Attribution 4.0 International
            License: http://creativecommons.org/licenses/by/4.0/ </remark>
      </legalnotice>
      <revhistory>
         <info>
            <releaseinfo>This version home directory:
               http://textalign.net/release/1/dev/guidelines/.</releaseinfo>
            <releaseinfo>Latest version:
               http://textalign.net/release/1/dev/guidelines/.</releaseinfo>
         </info>
         <revision>
            <revnumber>1/dev</revnumber>
            <date>2015-08-18</date>
            <revdescription>
               <para>Prepublication working draft, under construction and for private circulation
                  only. Corrections are actively solicited and should be sent to the author (see
                  above).</para>
               <para>Formats: <link xlink:href="index.html">HTML</link> • <link
                     xlink:href="main.pdf">PDF</link> • <link xlink:href="main.xml">Docbook</link>
                  (master)</para>
               <warning>
                  <para>This version is known to have significant errors and omissions. In case of
                     contradictions, apparent or not, between the schemas and these guidelines, the
                     greatest weight is to be given to the RELAX-NG schemas, then to these
                     guidelines, and then to the Schematron schemas.</para>
                  <para>Chapters 1-2, 4-7 are relatively accurate. Revision last suspended at 8.2.2
                     (TAN-R-mor).</para>
               </warning>
            </revdescription>
         </revision>
      </revhistory>
   </info>
   <part xml:id="general_overview">
      <title>General Overview</title>
      <chapter>
         <title>Introduction</title>
         <sect1>
            <title>Definition and audience </title>
            <para>The Text Alignment Network (TAN) is a suite of XML encoding formats and associated
               rules and recommended practices, intended to serve anyone who wishes to encode,
               exchange, and study varieties of text reuse: translations, paraphrases, adaptations,
               summaries, quotations, and so forth. </para>
            <para>The XML encoding formats behind TAN have been designed to be maximally readable
               and editable by both humans and machines, to be useful independent of any programs or
               tools, and to be both syntactically and semantically interoperable. TAN files are
               suitable not only for importing and exporting but, in many cases, for direct use.
               Built upon stand-off annotation, the TAN format allows scholars to edit and study the
               same texts independently and collaboratively. </para>
            <para>TAN is meant primarily to support research in linguistics, translation studies,
               and the humanities—any scholarly field concerned with the interpretation of textual
               reuse or versions of texts, whether written as logosyllabaries (e.g., Han Chinese),
               abugidas (e.g., Tagalog), abjads (e.g., Syriac), or alphabets (e.g., English), and
               whether composed in antiquity, the recent past, or any time between (periods covered
               by, e.g., classics, Biblical studies, medieval studies, early modern studies, or
               twenty-first-century studies). Although expressive of scholarly nuance and
               complexity, TAN files are meant to benefit everyone, to be used in broad applications
               such as multilingual publishing, language learning, and machine translation.</para>
         </sect1>
         <sect1>
            <title>Rationale and purpose</title>
            <para>Translations, quotations, paraphrases, and so forth—all forms of text reuse—are
               important sources for scholars. Some texts have been lost in their original form and
               can be studied only through later translations, paraphrases, or quotations. And even
               when an original survives, these later versions are often worth study, revealing as
               they do something of the genius or idiosyncrasies of those who translated or quoted
               the original, which in turn sheds light on how words, concepts, and works were
               preserved or altered, shaped or combined across the generations and cultures who read
               and circulated the versions.</para>
            <para>The comparative study of versions of texts requires, as a foundation, some way to
               align words, sentences, paragraphs, and other text segments. Such alignment can be
               challenging. Identifying which words or phrases in a translation correspond to which
               words or phrases in the original might result in complex, overlapping sets. And even
               larger segments such as sentences and paragraphs may not line up well. Further, every
               version of a text is part of a much larger, complex history of text reuse, and proper
               study of that context requires not only multiple versions of multiple works, but
               collaboration across projects and fields of study.</para>
            <para>The Text Alignment Network aims to provide an XML encoding format that permits the
               exchange of detailed independent scholarship on versions of texts. TAN files adopt a
               syntax suitable for humans to read and edit, expressive enough to allow scholars to
               register doubt and nuance, and sufficiently structured to permit complex
               computer-based queries across independent datasets. The format is designed to allow a
               person to concentrate on a set of tasks associated with a specific activity (editing,
               grammatical analysis, word alignment, etc.) without having to worry about other types
               of analysis. The format compels editors to declare their views or assumptions about
               language and texts in a structured manner, so that other users of the data (both
               human and computer) can determine whether the data is suitable for their needs.
               Because nearly all TAN data must be expressed in both human- and computer-readable
               forms, the information can be used in semantic web applications.</para>
            <para>TAN has been designed to support specific research questions such as the
               following:</para>
            <para>
               <itemizedlist>
                  <listitem>
                     <para>How do I encode a text I wish to share in such a way that it is likely to
                        align with other versions of that text?</para>
                  </listitem>
                  <listitem>
                     <para>How do I encode quotations of one work in another such that the data
                        might apply to multiple versions of either work?</para>
                  </listitem>
                  <listitem>
                     <para>How do I share texts, alignments, or other linguistic data such that
                        anyone using the data will be aware when I make corrections or changes to
                        the material?</para>
                  </listitem>
                  <listitem>
                     <para>How do I align multiple versions of a single work when those versions may
                        not match very well, or when the reason for alignment may be vague or
                        ambiguous?</para>
                  </listitem>
                  <listitem>
                     <para>How do I make detailed alignments between a source and its translation,
                        when there may be messy many-to-many relationships, and where I might need
                        to express doubt or alternative possibilities of alignment?</para>
                  </listitem>
                  <listitem>
                     <para>How do I create a detailed alignment between a source and its translation
                        such that, once completed, the dataset can be interrogated to find out how a
                        certain class of words (roots, part of speech, etc.) gets translated in the
                        target language, and with what frequency?</para>
                  </listitem>
                  <listitem>
                     <para>How do I answer the above questions such that my data can be used
                        interoperably by others?</para>
                  </listitem>
               </itemizedlist>
            </para>
            <para>The last question is especially significant, because it is expected that as
               persons or projects share or publish their TAN-compliant texts, there will emerge a
               decentralized corpus of texts along with stylesheets, tools, and applications that
               use TAN texts. As this TAN-compliant corpus grows, its interoperability will allow
               the repertoire of research questions to expand beyond any single-project corpora, to
               allow scholars to fruitfully investigate broader, comparative questions such as:<itemizedlist>
                  <listitem>
                     <para>For classical Greek texts, how were words with the root -ιστημι ("stand")
                        translated into ancient Latin? In what specific ways did the vocabulary of
                        technical terms shift from pre-Christian translations into later, Christian
                        ones?</para>
                  </listitem>
                  <listitem>
                     <para>How do the reformed Chinese translation technique of Sanskrit Buddhist
                        texts, attested by Dao An (312-385 CE), compare to reforms in the seventh
                        and eighth centuries of Syriac translations of Greek texts?</para>
                  </listitem>
                  <listitem>
                     <para>How do Arabic translations of Greek texts from the Abbasid period differ
                        from those of Sanskrit?</para>
                  </listitem>
                  <listitem>
                     <para>Can an anonymous English translation of a modern French novel be
                        identified with known translators of French novels from the same
                        period?</para>
                  </listitem>
                  <listitem>
                     <para>How do present-day translations of official United Nations documents
                        differ across languages?</para>
                  </listitem>
               </itemizedlist></para>
            <para>These ambitions behind these questions should be tempered by cautions about what
               TAN is not intended to do:<itemizedlist>
                  <listitem>
                     <para>TAN is not a tool. It is a format. Just as other file formats, such as
                        JPEG, CSV, RTF, and so forth, TAN does not dictate what tools or
                        applications should be used to create, edit, or display TAN-compliant
                        files.</para>
                  </listitem>
                  <listitem>
                     <para>TAN does not create alignments or, on its own, answer research questions.
                        It merely lays the foundation for such questions to be investigated.
                        Separate applications, stylesheets, and other tools must be developed to use
                        the format for research.</para>
                  </listitem>
                  <listitem>
                     <para>TAN is not meant to support linguistic data beyond its scope (defined and
                        explained in these guidelines). That is, TAN is a supplement, not a
                        replacement, for other markup formats such as TEI, docbook, and so forth, or
                        other alignment formats such as XLIFF or TMX.</para>
                  </listitem>
                  <listitem>
                     <para>TAN is not meant to be the most computationally efficient format. XML by
                        its very nature sacrifices terseness—a cardinal virtue for computational
                        efficiency—in favor of human readability. TAN is meant, first and foremost,
                        to support lossless, interoperable exchange in a format transparent to human
                        editors and readers.</para>
                  </listitem>
               </itemizedlist></para>
         </sect1>
         <sect1 xml:id="design_principles">
            <title>Design Principles</title>
            <para>To facilitate the research questions mentioned above, the TAN encoding formats and
               this manual have been designed around a few core principles.</para>
            <para><emphasis><emphasis role="bold">Scholarly freedom: </emphasis>Scholars should be
                  able to create data within their sphere of inquiry simply, expressively,
                  independently, and with fidelity to their guiding lights.</emphasis></para>
            <para>
               <itemizedlist>
                  <listitem>
                     <para>Given two ways of expressing the same idea, simplicity is better than
                        complexity, expressiveness than silence. Simplicity and expressiveness
                        should be treated as complementary ideals. In cases where one must be chosen
                        over the other, simplicity is to be preferred. </para>
                  </listitem>
                  <listitem>
                     <para>Editors should not have to supply data that is redundant, irrelevant to
                        the immediate points of inquiry, or more reliably and authoritatively found
                        elsewhere.</para>
                  </listitem>
                  <listitem>
                     <para>Editors should be able to register doubt about claims. If in doubt about
                        an assertion, an editor should be able to state alternatives.</para>
                  </listitem>
                  <listitem>
                     <para>Editors should be able to work on the same material indepedently but
                        interoperably.</para>
                  </listitem>
                  <listitem>
                     <para>Editors should work freely within their theories, opinions, and
                        assumptions about language. They should declare those positions, not
                        suppress or alter them. </para>
                  </listitem>
               </itemizedlist>
            </para>
            <para><emphasis><emphasis role="bold">Scholarly responsibility: </emphasis>Scholars must
                  make their data uniquely citable, and responsibly describe how that data was
                  created.</emphasis></para>
            <para>
               <itemizedlist>
                  <listitem>
                     <para>Each TAN file should have an expressive, unique, persistent name that can
                        be cited and used independent of the file's location or availability.</para>
                  </listitem>
                  <listitem>
                     <para>Editors must supply, at the very minimum, the core statements of
                        responsibility that are expected in scholarly communication generally,
                        i.e.:</para>
                     <para>
                        <itemizedlist>
                           <listitem>
                              <para>What was done by whom, when.</para>
                           </listitem>
                           <listitem>
                              <para>What sources have been used.</para>
                           </listitem>
                           <listitem>
                              <para>Who holds rights over the data, and what reuse is
                                 permitted.</para>
                           </listitem>
                           <listitem>
                              <para>What editorial assumptions and decisions were made in creating
                                 the data.</para>
                           </listitem>
                        </itemizedlist>
                     </para>
                  </listitem>
               </itemizedlist>
            </para>
            <para><emphasis><emphasis role="bold">Utility to both computers and humans:
                  </emphasis>Computers should be able to import, process, and create human-friendly
                  data reliably, consistently, and interoperably.</emphasis>
            </para>
            <para>
               <itemizedlist>
                  <listitem>
                     <para>Each human-readable datum should have a computer-readable counterpart, to
                        make the material suitable for linked data (semantic web).</para>
                  </listitem>
                  <listitem>
                     <para>Given multiple methods of referring to textual units or linguistic
                        concepts, the most human readable method is to be preferred.</para>
                  </listitem>
                  <listitem>
                     <para>All classes and types of formats in the TAN suite should be structured
                        consistently and predictably.</para>
                  </listitem>
                  <listitem>
                     <para>Validation and recommended best practices should depend upon stable
                        technologies or standards.</para>
                  </listitem>
                  <listitem>
                     <para>Each TAN file should be integrally complete, independent of any
                        organization or third-party software such as text processors or version
                        control software. </para>
                  </listitem>
               </itemizedlist>
            </para>
         </sect1>
      </chapter>
      <chapter xml:id="gentle_guide">
         <title>Starting off with the TAN Format</title>
         <para>If you are new to markup languages, or if you are unfamiliar with technical terms and
            acronyms such as <emphasis role="italic">XML</emphasis>, <emphasis role="italic"
               >RDF</emphasis>, <emphasis role="italic">XPath</emphasis>, and so forth, you should
            start with this chapter, which uses a simple example to illustrate the steps typically
            taken to create and edit TAN files. By the end of this chapter, you be sufficiently
            oriented to create and edit a simple corpus of TAN transcriptions and alignments.</para>
         <para>The discussion touches on a number of concepts, some of which may be new. These
            concepts will be introduced, but only briefly. If you need more explanation, you should
            follow some of the suggestions for further reading.</para>
         <section>
            <title>Creating TAN Transcription and Alignment Data</title>
            <para>Let us take a simple example, that of aligning two English versions of the nursery
               rhyme <emphasis role="italic">Ring-a-ring-a-roses</emphasis>, sometimes known as
                  <emphasis role="italic">Ring around the Rosie</emphasis>. Our goal here is to
               publish two versions of the nursery rhyme in the TAN format so that they are most
               likely alignable with any other TAN version of the poem that might be
               published.</para>
            <para>We begin by finding the versions we want. In this case we use exemplars published
               in <link xlink:href="http://lccn.loc.gov/12032709">1881</link> and <link
                  xlink:href="http://lccn.loc.gov/87042504">1987</link>, the former from the UK the
               latter from the US. Each of these books have other rhymes, but we've already decided
               to focus upon one particular nursery rhyme, so we transcribe them and nothing
                  else:<table frame="all">
                  <title>Ring around the Rosie</title>
                  <tgroup cols="2">
                     <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                     <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                     <thead>
                        <row>
                           <entry>1881 (UK) version</entry>
                           <entry>1987 (US) version</entry>
                        </row>
                     </thead>
                     <tbody>
                        <row>
                           <entry>
                              <para>Ring-a-ring-a-roses,</para>
                              <para>A pocket full of posies;</para>
                              <para>Hush! Hush! Hush! Hush!</para>
                              <para>We're all tumbled down.</para>
                           </entry>
                           <entry>
                              <para>Ring-a-round the rosie,</para>
                              <para>A pocket full of posies,</para>
                              <para>Ashes! Ashes!</para>
                              <para>We all fall down.</para>
                           </entry>
                        </row>
                     </tbody>
                  </tgroup>
               </table></para>
            <para>We must be sure to save each of the two transcriptions as plain Unicode text,
               preferably with <code>.xml</code> at the end of each file name. If you use a word
               processor (Word, OpenOffice, Google Docs, and so forth) you must be certain to save
               the file as plain text, in Unicode encoding (not Western European or other
               encodings). But even then you have to beware, because these programs can be too
               sophisticated for our work and sometimes generate erroneous formats. Word processors
               are in fact a bit too powerful for our purposes. We will be working with raw text,
               and will not be altering colors, fonts, margins, and so forth. Much better for our
               work is a <link xlink:href="http://en.wikipedia.org/wiki/Text_editor">text
                  editor</link>. And even better still would be an <link
                  xlink:href="http://en.wikipedia.org/wiki/XML_editor">XML editor</link>, which does
               the same thing a text editor does, but does other things too, such as tell us when
               our XML file is invalid, or provide shortcuts that save much typing.<note>
                  <para>Software suitable for your needs comes in many styles and prices. In
                     addition to the links provided above, you may wish to visit the comparative
                     lists for both <link
                        xlink:href="http://en.wikipedia.org/wiki/Comparison_of_text_editors">text
                        editors</link> and <link
                        xlink:href="http://en.wikipedia.org/wiki/Comparison_of_XML_editors">XML
                        editors</link>. Some XML editors are so powerful they can be very confusing
                     to use at first. Be certain to take advantage of tutorials and documentation
                     associated with any XML editor you begin to use.</para>
               </note></para>
            <para>Our first task is to get these two versions into separate files with the
               appropriate markup. Each TAN transcription file has two major parts: a head and a
               body. For now, we focus on only the second part, the body, as well as a few the
               necessary preliminary lines that stand above both the head and the body. First, the
               1881 (UK) version:
               <programlisting><emphasis role="bold">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;?xml-model href="http://textalign.net/release/1/dev/schemas/TAN-T.rnc" type="application/relax-ng-compact-syntax"?>
&lt;?xml-model href="http://textalign.net/release/1/dev/schemas/TAN-T.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
&lt;TAN-T xmlns="tag:textalign.net,2015:ns" id="tag:parkj@textalign.net,2015:ring01">
    &lt;head>
    . . . . . . .
    &lt;/head>
    &lt;body xml:lang="eng" in-progress="false">
        &lt;div type="line" n="1"></emphasis>Ring-a-ring-a-roses,<emphasis role="bold">&lt;/div>
        &lt;div type="line" n="2"></emphasis>A pocket full of posies;<emphasis role="bold">&lt;/div>
        &lt;div type="line" n="3"></emphasis>Hush! Hush! Hush! Hush!<emphasis role="bold">&lt;/div>
        &lt;div type="line" n="4"></emphasis>We're all tumbled down.<emphasis role="bold">&lt;/div>
    &lt;/body>
&lt;/TAN-T></emphasis></programlisting>
               And now the 1987 (US) version:
               <programlisting><emphasis role="bold">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;?xml-model href="http://textalign.net/release/1/dev/schemas/TAN-T.rnc" type="application/relax-ng-compact-syntax"?>
&lt;?xml-model href="http://textalign.net/release/1/dev/schemas/TAN-T.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
&lt;TAN-T xmlns="tag:textalign.net,2015:ns" id="tag:parkj@textalign.net,2015:ring02">
   &lt;head>
   . . . . . . .
   &lt;/head>
   &lt;body xml:lang="eng" in-progress="false">
      &lt;div type="l" n="1"></emphasis>Ring-a-round the rosie,<emphasis role="bold">&lt;/div>
      &lt;div type="l" n="2"></emphasis>A pocket full of posies,<emphasis role="bold">&lt;/div>
      &lt;div type="l" n="3"></emphasis>Ashes! Ashes!<emphasis role="bold">&lt;/div>
      &lt;div type="l" n="4"></emphasis>We all fall down.<emphasis role="bold">&lt;/div>
   &lt;/body>
&lt;/TAN-T></emphasis></programlisting>
            </para>
            <para>These are standard eXtensible Markup Language (XML) files. (If you are already
               familiar with this format you may wish to skip ahead.) XML is rather simple. It
               provides a way to take a text or a collection of data and give it some structure
               through markup. In the examples above, the markup is in boldface.</para>
            <para>Each file begins with a prolog, marked by the lines that begin with
                  <code>&lt;?</code>. The first line in each prolog simply states that what follows
               is an XML document. The next two lines point to the files that will be used to check
               to see whether or not our data is valid. For now we will skip the specific details.
               These three lines will be identical, or nearly so, from one TAN transcription file to
               the next, and we can simply cut and paste when we want to start a new one.</para>
            <para>The fourth line is the opening tag of what is called the root element, here called
                  <code>&lt;TAN-T></code>. That opening tag, <code>&lt;TAN-T...></code> is answered
               by a closing tag, <code>&lt;/TAN-T></code>, the last line. The same thing happens
               with all the other elements in this example. <code>&lt;head></code> is answered by
                  <code>&lt;/head></code>, <code>&lt;body></code> by <code>&lt;/body></code> and
               each <code>&lt;div...></code> by <code>&lt;/div></code>. These elements nest within
               or alongside each other, but they never overlap. (The prohibition on overlapping
               elements is one of the cardinal rules of XML.) This relationship means that every XML
               file can be thought of as a tree, with the root at the trunk and the enveloped
               elements as branches, terminating in metaphorical leaves. It is helpful to use the
               tree metaphor when we describe the path we take, either toward the leaves or the
               root. In this manual, we may use the terms <emphasis role="italic"
                  >rootward</emphasis>, <emphasis role="italic">rootmost</emphasis>, <emphasis
                  role="italic">leafward</emphasis>, and <emphasis role="italic">leafmost</emphasis>
               when we want to trace movement within an XML document.</para>
            <para>An XML document is also profitably thought of as a family tree, a metaphor that
               provides terminology that will be very common. In our examples above,
                  <code>&lt;TAN-T></code> is the <emphasis role="italic">parent</emphasis> of
                  <code>&lt;body></code>, and <code>&lt;body></code> the parent of the four
                  <code>&lt;div></code> elements. Vice versa, each <code>&lt;div></code> is the
                  <emphasis role="italic">child</emphasis> of <code>&lt;body></code>, and
                  <code>&lt;body></code> is the child of <code>&lt;TAN-T></code>. Distant parental
               relationships can be described with the terms <emphasis role="italic"
                  >ancestor</emphasis> and <emphasis role="italic">descendant</emphasis>.
                  <code>&lt;TAN-T></code> is the ancestor of every element it encompasses, and every
               element encompassed by <code>&lt;TAN-T></code> is its descendant. Paratactic
               relationships are also important. <code>&lt;head></code> and <code>&lt;body></code>
               are <emphasis role="italic">siblings</emphasis> to each other, and every
                  <code>&lt;div></code> is a sibling to every other <code>&lt;div></code>.</para>
            <para>Inside of the opening tags for the <code>&lt;TAN-T></code>,
               <code>&lt;body></code>, and <code>&lt;div></code> elements are pairs of text joined
               by an equals sign. The left side of each pair is called an attribute, and on the
               right side, within the quotation marks, is the value. <code>&lt;TAN-T></code> has two
               attributes, <code>@xmlns</code> and <code>@id</code> (attributes are commonly
               referred to with @ before the name). We will skip <code>@xmlns</code> for now; this
               attribute specifies the namespace of the XML file, a somewhat advanced topic. </para>
            <para>The value of <code>@id</code>, however, is quite important and our first item of
               business. Every TAN file has an <code>@id</code> that uniquely and permanently
               identifies the file itself. It is quite similar to the name we give a file when we
               save it, and to the names we see when we browse through our files, except that it
               should not be changed. When we make corrections to our work, we will not change the
                  <code>@id</code> value. We simply note a change (to be discussed later) with the
               date of the change.</para>
            <para>The value of <code>@id</code> is always what is called a tag uniform resource name
               (tag URN). It always starts with <code>tag:</code>, followed by an email address or
               domain name that we owned on a given day. (It is okay to use an obsolete address.)
               After that email address or domain name comes a comma (no spaces) and a date on which
               we owned it, in the international standard format of year, month, and date, joined by
               hyphens, e.g., 2014-12-31. If we leave off a day value, it is assumed to be the first
               of the month; if we leave off the month value it is assumed to be January. In the
               examples above, <code>[USER@DOMAIN.NET],2014</code> indicates that the email address
               was owned on the stroke of midnight (Coordinated Universal Time) January 1, 2014.
               After that comes a colon, and then any name we wish to assign to the file. <note>
                  <para>Many if not most TAN files will be circulated under a liberal license,
                     encouraging people to modify and use the data freely, with attribution. If you
                     decide to modify someone else's TAN file, and you become responsible for
                     changes, not the original person or organization. Your first point of order
                     should be to change the email address or domain name at the heart of the tag
                     URN, substituting one that you own or owned. The element
                        <code>&lt;succeeds></code> in the <code>&lt;head></code> allows you to
                     credit the original. If you do not make this change, you are incorrectly
                     passing the work off as someone else's.</para>
               </note></para>
            <para>We have anticipated a simple collection of texts, so we've called the files
                  <code>ring01</code> and <code>ring02</code>. (If we run out of names, or want to
               restart, we can simply use a new email-date preface, e.g.,
                  <code>[USER@DOMAIN.NET],2014-01-02</code>.)</para>
            <para>The element <code>&lt;body></code> contains our transcription.
                  <code>@xml:lang</code>, required, specifies the principal language of the
               transcribed text. We use the standard 3-letter abbreviation for English. (See later
               in the guide for more complex language requirements.) By saying that
                  <code>@in-progress</code> is <code>&lt;false></code>, we indicate that we have
               finished our transcription and have no further plans to develop it. It doesn't mean
               that the file is error free. We will have the option to make corrections later. It
               just means that we have done all the work that we intended, and any further changes
               will be restricted to corrections of errors. This attribute is optional; if left off,
               the TAN file is assumed to be a work in progress.</para>
            <para>Our transcription has been divided into four <code>&lt;div></code> elements. How
               we divide up the work is entirely up to us. But we must make sure that every bit of
               text is enclode by a leafmost <code>&lt;div></code>. That is, every
                  <code>&lt;div></code> must be the parent of only other <code>&lt;div></code>s, or
               none at all. We cannot have a <code>&lt;div></code> that mixes any text or other
               elements with other <code>&lt;div></code>s. The values of <code>@type</code> and
                  <code>@n</code> indicate, respectively, the type of division and the name of the
               division. We have used <code>line</code> in the first example, but we could easily
               have also used <code>l</code> (as we did in the second) or <code>ln</code> or any
               other phrase that we think will make intuitive sense to other users (we will see why
               below). We have used arabic numerals for the values of <code>@n</code>, but the
               value, once again, could have been anything. But since other people may use our work,
               we have adopted the naming scheme that seems most common and expected.</para>
            <para>Aside from the <code>&lt;head></code> element (discussed later), that's all we
               need in the transcription. We can now move to alignment.</para>
            <para>There are two different types of alignment, one emphasizing breadth, the other,
               depth. The broad type of alignment, called TAN-A-div, allows us to specify TAN
               transcriptions of as many versions of as many works as we wish, and to fine-tune the
               alignment upon the basis of the <code>&lt;div></code> elements within the
               transcription. We do not specify why we wish to align the versions. We only declare
               our interest in doing so. The type of alignment emphasizing depth, called TAN-A-tok,
               allows us to take any two (and no more) TAN transcriptions and specify word-to-word
               (or better put, token-to-token) relationships, and specify what type of relationship
               holds between them. TAN-A-div is suitable for work that focuses on the general
               alignment of multiple versions of one or more works at a single time. TAN-A-tok is
               for highly detailed, precise alignment of two text versions.</para>
            <para>For our example, we start with a TAN-A-div file (once again suppressing
                  <code>&lt;head></code>):<programlisting>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;?xml-model href="http://textalign.net/release/1/dev/schemas/TAN-A-div.rnc" type="application/relax-ng-compact-syntax"?>
&lt;?xml-model href="http://textalign.net/release/1/dev/schemas/TAN-A-div.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
&lt;TAN-A-div xmlns="tag:textalign.net,2015:ns" id="tag:parkj@textalign.net,2015:ring-alignment">
    &lt;head>
    . . . . . . .
    &lt;/head>
    &lt;body/>
&lt;/TAN-A-div></programlisting></para>
            <para>In the prolog, the first line is identical to the first line of our transcription
               files. The second and third lines are identical, aside from pointing to the
               validation files for alignment. Even the fourth line looks like the transcription
               file, other than the new name for the root element, <code>&lt;TAN-A-div></code>, and
               the new value for <code>@id</code>.</para>
            <para>The penultimate line, <code>&lt;body/></code>, is what is called an empty element,
               and is equivalent to <code>&lt;body>&lt;/body></code>. Collapsing the opening and the
               closing tags of the element into a single tag provides a shorthand syntax for
               elements contains nothing. It will become apparent, when we discuss
                  <code>&lt;head></code> below, why our <code>&lt;body></code> can be empty.</para>
            <para>The other kind of alignment, TAN-A-tok, takes a bit more work, because we must
               first identify words that correspond with each other. Even before we do that, we need
               to decide what kind of relationship holds between the two texts. Let us pretend, for
               the sake of illustration, that the 1987 version is a direct descendant (and therefore
               variation) of the 1881 version. We therefore see our task as creating a map of how
               the older version became the newer one. There are different ways of approaching this
               task and deciding on the specifics is not as straightforward as some might think. We
               will also assume for this example that punctuation is both irrelevant and a marker
               between words, better termed in this context as <emphasis>tokens</emphasis>
                  (<emphasis role="italic">word</emphasis> is notoriously difficult to define, and
               the substitute <emphasis>token</emphasis> lacks many undesirable
               implications).</para>
            <para>We now create a TAN-A-tok
               file:<programlisting>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;?xml-model href="http://textalign.net/release/1/dev/schemas/TAN-A-tok.rnc" type="application/relax-ng-compact-syntax"?>
&lt;?xml-model href="http://textalign.net/release/1/dev/schemas/TAN-A-tok.sch" type="application/xml" schematypensrc="http://purl.oclc.org/dsdl/schematron"?>
&lt;TAN-A-tok xmlns="tag:textalign.net,2015:ns" id="tag:parkj@textalign.net,2015:TAN-A-tok,ring01+ring02">
    &lt;head>
    . . . . . . .
    &lt;/head>
    &lt;body bitext-relation="B-descends-from-A" reuse-type="adaptation" in-progress="false">
        &lt;!-- Examples of picking tokens by number -->
        &lt;align>
            &lt;tok src="ring1881" ref="line 1" ord="1"/>
            &lt;tok src="ring1987" ref="l 1" ord="1"/>
        &lt;/align>
        &lt;align>
            &lt;tok src="ring1881" ref="line 1" ord="2"/>
            &lt;tok src="ring1987" ref="l 1" ord="2"/>
        &lt;/align>
        &lt;align>
            &lt;tok src="ring1881" ref="line 1" ord="3"/>
            &lt;tok src="ring1987" ref="l 1" ord="3"/>
        &lt;/align>
        &lt;align>
            &lt;tok src="ring1881" ref="line 1" ord="4"/>
            &lt;tok src="ring1987" ref="l 1" ord="4"/>
        &lt;/align>
        &lt;align>
            &lt;tok src="ring1881" ref="line 1" ord="5"/>
            &lt;tok src="ring1987" ref="l 1" ord="5"/>
        &lt;/align>
        &lt;!-- Examples of picking tokens by value -->
        &lt;align>
            &lt;tok src="ring1881" ref="line 2" val="A"/>
            &lt;tok src="ring1987" ref="l 2" val="A"/>
        &lt;/align>
        &lt;align>
            &lt;tok src="ring1881" ref="line 2" val="pocket"/>
            &lt;tok src="ring1987" ref="l 2" val="pocket"/>
        &lt;/align>
        &lt;align>
            &lt;tok src="ring1881" ref="line 2" val="full"/>
            &lt;tok src="ring1987" ref="l 2" val="full"/>
        &lt;/align>
        &lt;align>
            &lt;tok src="ring1881" ref="line 2" val="of"/>
            &lt;tok src="ring1987" ref="l 2" val="of"/>
        &lt;/align>
        &lt;align>
            &lt;tok src="ring1881" ref="line 2" val="posies"/>
            &lt;tok src="ring1987" ref="l 2" val="posies"/>
        &lt;/align>
        &lt;!-- Examples of picking tokens by number with commas, hyphens, and 'last' -->
        &lt;align>
            &lt;tok src="ring1881" ref="line 3" ord="1, 2"/>
            &lt;tok src="ring1987" ref="l 3" ord="1"/>
        &lt;/align>
        &lt;align>
            &lt;tok src="ring1881" ref="line 3" ord="3 - 4"/>
            &lt;tok src="ring1987" ref="l 3" ord="2"/>
        &lt;/align>
        &lt;align>
            &lt;tok src="ring1881" ref="line 4" ord="1"/>
            &lt;tok src="ring1987" ref="l 4" ord="1"/>
        &lt;/align>
        &lt;align>
            &lt;tok src="ring1881" ref="line 4" ord="2"/>
        &lt;/align>
        &lt;align>
            &lt;tok src="ring1881" ref="line 4" ord="3"/>
            &lt;tok src="ring1987" ref="l 4" ord="2"/>
        &lt;/align>
        &lt;align>
            &lt;tok src="ring1881" ref="line 4" ord="last-1"/>
            &lt;tok src="ring1987" ref="l 4" ord="last-1"/>
        &lt;/align>
        &lt;align>
            &lt;tok src="ring1881" ref="line 4" ord="last"/>
            &lt;tok src="ring1987" ref="l 4" ord="last"/>
        &lt;/align>
    &lt;/body>
&lt;/TAN-A-tok></programlisting></para>
            <para>Once again, the first four lines, the prolog and root element, should look
               familiar, with the only significant changes being the names of the validation files,
               the name of the root element (<code>&lt;TAN-A-tok></code>) and the value of
                  <code>@id</code>.</para>
            <para>The heart of the data is <code>&lt;body></code>, which has, in addition to
                  <code>@in-progress</code>, two more attributes, <code>@reuse-type</code>, which
               specifies the default type of relationship between the two sources, and
                  <code>@bitext-relation</code>, which specifies how the versions relate to each
               other. Our two values, <code>B-descends-from-A</code> and <code>adaptation</code>,
               are arbitrary names that we define in the <code>&lt;head></code> (discussed later). </para>
            <para><code>&lt;body></code> is the parent of one or more <code>&lt;align></code>
               elements, each of which correlates a set of tokens in the two texts through its
                  <code>&lt;tok></code> children. Each <code>&lt;tok></code> has, in this example,
               three attributes. <code>@src</code> takes a nickname (an <code>@id</code> reference)
               that points to one of the two transcriptions; we have used <code>ring1881</code> and
                  <code>ring1987</code> but we could have just as easily used anything else such as
                  <code>uk</code> and <code>us</code>. <code>@ref</code> has a value that points to
               a specific <code>&lt;div></code> in the source transcription; and <code>@ord</code>
               or <code>@val</code> specify which token is intended, either by word number
                  (<code>@ord</code>) or text of the actual word (<code>@val</code>). Either
               technique is fine, and can be mixed, as in the example. You may also notice that the
               comma and hyphen can be used in <code>@ord</code> to point to multiple words within
               the same <code>&lt;div></code>, and that <code>last</code> and <code>last-X</code>
               (where <code>X</code> is a digit) can be used to point to a word token relative to
               the last one in a <code>&lt;div></code>.</para>
            <para>Each <code>&lt;align></code> can establish one-to-one, one-to-many, many-to-one,
               or many-to-many relationships between the two texts. It is perfectly fine to have the
               same word represented in multiple <code>&lt;align></code> elements. And if an
                  <code>&lt;align></code> has <code>&lt;tok></code> elements belonging to only one
               source, such as in the fourth-to-last <code>&lt;align></code> above, we have what is
               called, in these guidelines, a <emphasis>half-null alignment</emphasis>. That is to
               say, using our example, that we have stated that the second word of line four of the
               1881 version is excluded from the act that we have called <code>adaptation</code>
               (which is, as we shall see, defined in the <code>&lt;head></code>). If this were a
               translation, it would be as if we were saying that this word was excluded from the
               translation. (If this was a half-null alignment for the later source, we would say
               that it was a word that the translator added.) A half-null alignment is not to be
               confused with our own silence. If we nowhere mention a token in our TAN-A-tok file,
               and if we specify through <code>@in-progress</code> that our work is finished, then
               we are saying only that we have nothing to say about it.</para>
            <para>We could have aligned the two texts in different ways. Perhaps further study will
               reveal that we were in error to associate the second "ring" with "round" is line 1.
               We can make corrections, even after publication, and signal the change to users of
               our data. There are also ways to express doubt or alterative opinions. We can even
               correlate fragments of tokens (letters, prefixes, infixes, or suffixes). All these
               more advanced uses are discussed in later chapters of these guidelines.</para>
            <para>For now, we have finished everything for two TAN transcriptions and two alignment
               files, except for the <code>&lt;head></code>. Before getting into details, we need
               first to discuss (1) the principles behind the TAN <code>&lt;head></code> and (2) how
               to ensure that the data in <code>&lt;head></code> is both human readable and computer
               readable.</para>
         </section>
         <section>
            <title>The Principles of TAN Metadata (<code>&lt;head></code>)</title>
            <para>Unlike <code>&lt;body></code>, which carries the raw data, <code>&lt;head></code>
               contains what is oftentimes called metadata. That is, <code>&lt;head></code> takes
               data that describes the data. Because the TAN format is intended primarily to serve
               scholars, some metadata requirements are stricter than those in other formats.
               Scholars who use our data really need to know some essential things before
               thoughtfully studying and handling the data we produce. For example, what are the
               sources we have used? Who produced the data? When? What key assumptions have been
               made in producing the data? What rights do other people have to use the data? The
               questions are not difficult to answer, but they are critical.</para>
            <para>Some of these questions are specific to certain types of data, and others can be
               applied universally, no matter what kind of data. We have seen that the TAN
               transcription <code>&lt;body></code>s look quite different from those in the two
               alignment files. And there are other kinds of TAN files that cover other types of
               data, such as lexicomorphology and tokenization rules. And TAN may grow to cover
               other kinds of information. So <code>&lt;head></code> has been concisely and
               predictably structured so it can apply across all TAN formats. This reduces potential
               confusion and makes it easier for other people using our data to find the information
               they want.</para>
            <para>The rigorous scholarly requirements for TAN metadata are offset somewhat by
               another principle that was adopted in the design of TAN, namely, that each format's
                  <code>&lt;head></code> should focus upon describing the data in
                  <code>&lt;body></code> and not other things. That is to say, for the two
               transcriptions in our example above, we should definitely indicate what our sources
               are. But we should not do what librarians do so much better and try to write a
               catalog entry describing the books we have used. Anyone who really wants that
               information should go elsewhere. We need merely point to those other places. The TAN
               format does not forbid us from providing this information. But the
                  <code>&lt;head></code> is designed so that we can stay focused on the task and
               data at hand.</para>
            <para>TAN was also designed with the assumption that all metadata should be useful to
               both humans and computers. For our example above, we must describe the work we have
               chosen in such a way that <emphasis role="italic">Ring around the Rosie</emphasis> is
               comprehensible not just to the reader but to the computer, using syntax that a
               computer can act upon.</para>
            <para>Take for example the 1881 book we have used for our first transcription. For the
               human reader we can say simply something like "Kate Greenaway, <emphasis>Mother
                  Goose</emphasis>, New York, G. Routledge and sons [1881]". But computers need a
               more controlled, predictable syntax before they can be directed to the correct
               edition of <emphasis>Mother Goose.</emphasis> The human-readable string is too
               complex, and syntactically opaque. Perhaps a better identifier for a computer would
               be international standard book numbers (ISBNs), which not only distinguish the 1984
               version illustrated by Kayoko Okumura Cussler's novel from the 1984 version
               illustrated by William Joyce but can be used to distinguish the various types of
               editions: hardback, paper, electronic, and so forth. The ISBNs for the Okumura
               version, 0671493159, and for Joyce's, 0394865340, can be converted into a
               machine-actionable string called universal resource names (URNs), in this case
                  <code>urn:isbn:0-671493159</code> and <code>urn:isbn:0-394865340</code>. (Our 1881
               version was published before the ISBN program was introduced, but we will see below
               other ways to name it.)</para>
            <para>URNs are formalized naming schemes that are regulated by a central body (Internet
               Assigned Numbers Authority, IANA) to ensure that people and organizations can
               legitimately coin and use permanent, persistent, unique names for various types of
               things. Ther are URN schemes for journals (by means of ISSNs), articles (DOIs), and
               movies (ISANs), thereby allowing one to refer to them with a unique string that a
               computer can process.</para>
            <para>All URNs are simply names. They don't tell you where an object is, just what its
               name is. To provide a unique <emphasis role="italic">location</emphasis>, however, we
               have universal resource locators (URLs), which might be much more familiar from daily
               use of the Internet, e.g., <code>http://academia.edu</code>. Like URNs, URLs are also
               centrally regulated, with individuals or organizations buying the rights to domain
               names from a central registry (usually through a third-party vendor).</para>
            <para>Both URNs and URLs can be thought of as the same type of thing, namely, a
               universal resource identifier (URI), sometimes called an international resource
               identifier (IRI) to make clear that any alphabet in Unicode, not just Latin, may be
               used. URIs/IRIs are, in essence, nothing more than the set of all URNs and URLs.
               These four acronyms can be easily confused, and it is best to disambiguate them by
               thinking of the last letter in each. URIs/IRIs <emphasis role="bold"
               >I</emphasis>ncorporate both <emphasis role="bold">L</emphasis>ocators and <emphasis
                  role="bold">N</emphasis>ames.</para>
            <para>IRIs are essential to a system frequently called the semantic web or linked (open)
               data, an agreed way of writing and processing data that relies upon IRIs and a simple
               data model to connect them. The semantic web allows independent parties to make
               assertions about things, and if they happen to use the same IRI vocabulary to
               describe those things, computers can make associations between disparate,
               heterogenous datasets. This allows computers to make connections that humans might
               not make on their own. For example, a computer could be used to plot the geographical
               distribution of specific books in different library systems, if it has access to
               published IRIs in different online library catalogs.</para>
            <para>TAN has been designed to be linked-data friendly, and so requires in its head
               almost all data to be representable not just in a human readable form but also as an
               IRI, so computers can act upon the data. (It is this requirement that makes possible
               another principle mentioned earlier, that we should provide metadata about our data
               and not about other things.)</para>
            <para>Our first task, then, in writing the <code>&lt;head></code> sections of our four
               TAN files is to look for IRI vocabulary that will be familiar to the community of
               practice most likely to use our files. In trying to find suitable IRIs, we will find
               that the persons, things, and concepts we want to describe will be range from
               generally familiar to generally unfamiliar.</para>
            <para><emphasis role="italic">Generally familiar</emphasis>: The two books that provide
               the basis of our transcription are well catalogued and generally known. A number of
               services provided by librarians provide a controlled IRI vocabulary that can be used
               by anyone to describe uniquely a particular version of a book. <link
                  xlink:href="http://www.worldcat.org">WorldCat</link> (run by OCLC) and the <link
                  xlink:href="http://catalog.loc.gov">Library of Congress</link> are good examples.
               In our case, we have found accurate Library of Congress IRIs for both editions of
                  <emphasis>Mother Goose</emphasis>: <code>http://lccn.loc.gov/12032709</code> and
                  <code>http://lccn.loc.gov/87042504</code>. Observe that these two IRIs are, more
               specifically, URLs. If we paste these strings into our browser, we retrieve a record
               that describes the book. But this locator has not taken us to the book per se, only
               to information <emphasis role="italic">about</emphasis> the book. That is because,
               under the principles of linked data, a person or entity who owns a domain name can
               mint URLs based on that domain name <emphasis role="italic">also as names for
                  objects</emphasis>. This subtle point can sometimes be confusing to those who are
               new to the semantic web, because URLs conflate locations and names. Much of the
               motivation for this decision is convenience: by giving an object a name that is also
               a URL, you can then set up a server to tell a computer or a human more information
               about the object that is given that URL's name.</para>
            <para>Let's now find an IRI to name the work we have chosen, <emphasis role="italic"
                  >Ring around the Rosie</emphasis>. The work is widely known, and even has a <link
                  xlink:href="http://en.wikipedia.org/wiki/Ring_a_Ring_o%27_Roses">Wikipedia
                  entry</link>. That Wikipedia entry is fortuitous. The Universities of Leipzig and
               Mannheim and Openlink Software have collaborated on a project called <link
                  xlink:href="http://wiki.dbpedia.org/About">DBPedia</link>, which is committed to
               providing a unique URN for every Wikipedia entry in the major languages. The DBPedia
               URN for the work we have chosen is
                  <code>http://dbpedia.org/resource/Ring_a_Ring_o%27_Roses</code>. Once again, this
               is both a name and a locator. It names a specific intangible object, namely a nursery
               rhyme that we've called <emphasis>Ring around the Rosie</emphasis>, no matter what
               specific version. But if you put that name into your browser, you will get back more
               information about that named object.</para>
            <para><emphasis role="italic">Familiar, but only in small circles</emphasis>: We will
               need to have names for some of the people who edited the file. Most people who
               contribute to the creation of the data file will not be well-known, public figures.
               If they are, and if they are famous enough to have a Wikipedia entry, then a DBPedia
               IRI could be used. Or if some of the contributors are also published authors, there
               is a good chance that they are listed in the databases of either <link
                  xlink:href="http://viaf.org">VIAF</link> or <link xlink:href="http://isni.org"
                  >ISNI</link>, both of which publish unique IRIs for persons. If we find in those
               systems an IRI for someone who created or helped edit the file, we can use it.</para>
            <para>There is a good chance, however, that many contributors will not be listed in
               these general databases. In these cases, we can assign our own IRI to name these
               participants. We have already done something like this by assigning tag URNs to our
               four transcriptions (the value of <code>@id</code> in the rootmost element). We can
               do the same for our editors. If a student Robin Smith has been helping with
               proofreading, we can take an email address for Robin (even one that doesn't work any
               more) and a date when the email was sed and construct a tag URN such as
                  <code>tag:smith.robin@example.com,2012:self</code>. This has a slight drawback in
               that we cannot type this string into our browser to find out more about the Robin,
               but it at least allows us to assign a name that will not be confused as the Robin
               Smith identified by ISNI as <code>http://isni.org/isni/0000000043306406</code>. If we
               wish to go a step further, we could mint a URN from a domain name that we own, and
               set up a linked data service that offers more information, human- and
               computer-readable, about Robin, but this is not required. </para>
            <para>Another example of field-specific IRIs is the concept of relationship between two
               text-bearing objects. We are assuming for the sake of illustration that the version
               published in the 1987 <emphasis>Mother Goose</emphasis> is a direct descendant of the
               1881 version. Our assumption is important to declare, because if we had a different
               view on how one related to the other, it would probably affect the specifics of our
               word-for-word alignments. Because no suitable IRI vocabulary yet exists for such
               concepts, TAN has coined an IRI that can be used by anyone wishing to declare that
               the second of two sources descends from the first through an unknown number of
               intermediaries: <code>tag:textalign.net,2015:bitext-relation:a/x+/b</code>.</para>
            <para>We face a similar issue when thinking about text reuse. We generally consider the
               1987 version to be an adaptation of the 1881 version. And there are not stable,
               well-published IRI vocabularies for text reuse. So we adopt a TAN-coined IRI,
                  <code>tag:textalign.net,2015:reuse-type:adaptation:general</code>.</para>
            <para>For other examples of IRIs coined by TAN, see <link xlink:href="iris.xml"
               />.</para>
            <para><emphasis role="italic">Generally unfamiliar</emphasis>: Some things or concepts
               will be unknown to very few people, perhaps only to us. If we plan to refer to that
               thing or concept often, it is preferable to coin a tag URN, as described above. But
               in some cases, we might find that a tag URN we minted for some concept or thing was,
               in hindsight, misleading or poorly constructed, because we hadn't taken into account
               other things that should be named. So if we wish to avoid these kinds of situations,
               we can assign a random IRI called a universally unique identifier (UUID), e.g.,
                  <code>urn:uuid:3fd9cece-b246-4556-b229-48f22a5ae2e0</code>. These uuid URNs, which
               are generated by computers through randomizing functions, are very useful. The
               likelihood that a randomly generated uuid will be identical to any other uuid is
               astronomically improbable, making them reliable, uniquely names for anything (barring
               someone copying and reusing that uuid URN to name some other object or concept).
               Numerous free UUID generators exist, and can be found through Intenet
               searches.</para>
            <para>To humans, a UUID on its own is meaningless, and rather ugly. But it is a good
               start. We always have the option, later, of adding an IRI. It's perfectly fine to
               give one object or concept multiple IRIs. But the reverse is never true. One should
               never use the same IRI to identify more than one object or concept.</para>
         </section>
         <section>
            <title>Creating TAN Metadata (<code>&lt;head></code>)</title>
            <para>Now that we have explored various IRI vocabularies for concepts around our
               versions of <emphasis>Ring-a-ring-a-roses</emphasis>, we can now complete the
               metadata in our four TAN files. Let us start with the TAN-T file of the 1881
               version:<programlisting>    &lt;head>
        &lt;name>TAN transcription of Ring a Ring o' Roses&lt;/name>
        &lt;master-location>ring-o-roses.eng.1881.xml&lt;/master-location>
        &lt;rights-excluding-sources rights-holder="park">
            &lt;IRI>http://creativecommons.org/licenses/by/4.0/deed.en_US&lt;/IRI>
            &lt;name>This data file is licensed under a Creative Commons Attribution 4.0 International
                License. The license is granted independent of any rights and licenses that may be 
                associated with the source. &lt;/name>
        &lt;/rights-excluding-sources>
        &lt;source>
            &lt;IRI>http://lccn.loc.gov/12032709&lt;/IRI>
            &lt;name>Kate Greenaway, Mother Goose, New York, G. Routledge and sons [1881]&lt;/name>
        &lt;/source>
        &lt;declarations>
            &lt;work>
                &lt;IRI>http://dbpedia.org/resource/Ring_a_Ring_o%27_Roses&lt;/IRI>
                &lt;name>"Ring a Ring o' Roses" or "Ring Around the Rosie"&lt;/name>
            &lt;/work>
            &lt;div-type xml:id="line">
                &lt;IRI>http://dbpedia.org/resource/Line_(poetry)&lt;/IRI>
                &lt;name>line of poetry&lt;/name>
            &lt;/div-type>
            &lt;recommended-tokenization which="general-1"/>
        &lt;/declarations>
        &lt;agent xml:id="park" roles="creator">
            &lt;IRI>tag:parkj@textalign.net,2015:self&lt;/IRI>
            &lt;name>Jenny Park&lt;/name>
        &lt;/agent>
        &lt;role xml:id="creator">
            &lt;IRI>http://schema.org/creator&lt;/IRI>
            &lt;name xml:lang="eng">creator&lt;/name>
        &lt;/role>
        &lt;change when="2014-08-13" who="park">Started file&lt;/change>
    &lt;/head></programlisting></para>
            <para>The <code>&lt;head></code> element is the parent of eight children, all but one
               required in every TAN-T file.</para>
            <para><code>&lt;name></code> is the human readable form of the <code>@id</code> that is
               inside the root element, <code>&lt;TAN-T></code>. It can be anything. And we can
               supply more than one <code>&lt;name></code>, in case we wish to provide it in
               different languages or variations.</para>
            <para><code>&lt;master-location></code> is mandatory only if we have claimed through
                  <code>@in-progress</code> that the file is no longer in progress. One or more of
               these elements provide URLs where master versions of the file are kept (and updated).
               They may be absolute URLs, such as an address on the Internet, or it may be a
               relative URL, in case we are working exclusively on our local computer. During
               validation, if a file does not match the one in the master version, a warning is
               returned. This allows us to publish a file, make corrections, and notify other users
               without having to keep track of who may be using the file. Similarly, if we are
               working with a copy of a file and it doesn't match the version in the master
               location, a warning will be returned, along with a message or a location of the
               elements that were last changed.</para>
            <para><code>&lt;rights-excluding-sources></code> contains information about rights to
               the data we are releasing. This element has nothing to do with the copyright of the
               source we have used (although, having been published in 1881, the book is clearly in
               the public domain). This once again gets to the TAN metadata principle of describing
               our data and not other things. We have the option to describe the license of the
               source we have used (see the rest of the guidelines for guidance), but we absolutely
               must declare whether we have placed additional scrictures on the dataset we have
               created. In this example, we have released the data under a creative commons license.
               The child element <code>&lt;IRI></code> specifies the IRI assigned by Creative
               Commons, and <code>&lt;desc></code> describes it in human-readable format.</para>
            <para>The conjunction of <code>&lt;IRI></code> and <code>&lt;desc></code>, the
                  <emphasis>IRI + name pattern</emphasis>, is a recurrent feature of TAN files. We
               may include any number of <code>&lt;IRI></code> or <code>&lt;desc></code> elements in
               an IRI + name pattern. But if we do so, we are stating that they all name the same
               thing, not different things.</para>
            <para><code>&lt;source></code> points, through its IRI + name pattern, to a computer-
               and human-readable description of the book we have chosen. </para>
            <para><code>&lt;declarations></code> contains data that is specific to the type of TAN
               file in hand, to declare the assumptions we have made in creating the data. In this
               case, because we are working with transcriptions, we have three major components:
                  <code>&lt;work></code>, <code>&lt;div-type></code>, and
                  <code>&lt;recommended-tokenization></code>. </para>
            <para><code>&lt;work></code> uses the IRI + name pattern to name the work we have chosen
               to transcribe. <code>&lt;div-type></code> specifies the type of divisions we have
               chosen to use to segment the transcription. In a more complex text, there would be
               several <code>&lt;div-type></code>s. Each one has an <code>@xml:id</code>, which
               takes as a value some nickname that we wish to use for <code>@type</code> values of
                  <code>&lt;div></code>s. <code>&lt;recommended-tokenization></code> specifies a
               pattern recommended for changing the text into word tokens. In the example above, the
                  <code>&lt;recommended-tokenization></code> is empty, and specifies through
                  <code>@which</code> that a general tokenization pattern should be used, which
               means that word tokens should be created by dividing according to space, and each
               point of punctuation should be treated as a word. Other general options for
                  <code>@which</code> include <code>general-words-only-1</code> (all punctuation is
               suppressed) and <code>precise-1</code> (tokens should be formed only from spaces or
               U+200B, ZERO WIDTH SPACE). Tokenization also allows the IRI + pattern for customized
               TAN tokenization files (TAN-R-tok), discussed elsewhere in these guidelines.</para>
            <para>The IRI + name pattern is also used for <code>&lt;agent></code>, which describes
               who was involved in creating the data, and <code>&lt;role></code>. Any number of
                  <code>&lt;agent></code> and <code>&lt;role></code> elements may be included and
               combined as we wish. The <code>agent</code> in this case, Jenny Park, has been given
               a tag URI. The <code>&lt;IRI></code> value of <code>&lt;role></code> comes from the
               vocabulary of <link xlink:href="http://schema.org">schema.org</link>, which is
               maintained by Bing, Google, and Yahoo! in conjunction with the W3C (the nonprofit
               organization dedicated to universal Internet standards), but we could have used
               Dublin Core or some other IRI vocabulary describing behaviors, responsibilities, and
               roles.</para>
            <para>Remember that <code>&lt;head></code> is focused on the data, not its sources, so
               the claim that Jenny Park is the creator pertains only to the data. No inference
               should be made about who created the source. If someone wants that information, or
               anything else about the source, they should pursue the identifier we have provided
               under <code>&lt;source></code>.</para>
            <para><code>&lt;change></code> has attributes <code>@when</code> and <code>@who</code>
               that specify who made the change/comment and when. The value of <code>@when</code> is
               always a date plus optional time formatted according to the standard
                  <code>YYYY-MM-DD</code> + time (optional).<note>
                  <para>If you are working with an XML editor that supports Schematron Quick Fixes
                     then whenever you are at a <code>@when</code> or any other attribute that
                     requires an ISO date and the value is malformed you will be given a prompt to
                     insert today's date or date and time in a conformant manner. Using this feature
                     will save you time and effort.</para>
               </note>
               <code>@who</code> always carries a value that refers to an
               <code>agent/@xml:id</code>. Both <code>&lt;change></code> (as well as
                  <code>&lt;comment></code>, missing here) lack any IRIs, mainly because the
               likelihood that the data would ever be reused, repeated, or linked to is altogether
               too remote to be make a mandated <code>&lt;IRI></code> useful.</para>
            <para>The other transcription file looks
               similar:<programlisting>    &lt;head>
      &lt;name>TAN transcription of Ring around the Rosie&lt;/name>
      &lt;master-location>ring-o-roses.eng.1987.xml&lt;/master-location>
      &lt;rights-excluding-sources rights-holder="park">
         &lt;IRI>http://creativecommons.org/licenses/by/4.0/deed.en_US&lt;/IRI>
         &lt;name>Creative Commons Attribution 4.0 International License&lt;/name>
         &lt;desc>This data file is licensed under a Creative Commons Attribution 4.0 International
            License. The license is granted independent of rights and licenses associated with the
            source. &lt;/desc>
      &lt;/rights-excluding-sources>
      &lt;source>
         &lt;IRI>http://lccn.loc.gov/87042504&lt;/IRI>
         &lt;name>Mother Goose, from nursery to literature / by Gloria T. Delama, 1987.&lt;/name>
      &lt;/source>
      &lt;declarations>
         &lt;work>
            &lt;IRI>http://dbpedia.org/resource/Ring_a_Ring_o%27_Roses&lt;/IRI>
            &lt;name>Ring around the Rosie&lt;/name>
         &lt;/work>
         &lt;div-type xml:id="l">
            &lt;IRI>http://dbpedia.org/resource/Line_(poetry)&lt;/IRI>
            &lt;name>line&lt;/name>
         &lt;/div-type>
         &lt;recommended-tokenization which="general-words-only-1"/>
         &lt;filter>
            &lt;normalization>
               &lt;IRI>tag:textalign.net,2015:normalization:hyphens-discretionary-removed&lt;/IRI>
               &lt;name>discretionary hyphens suppressed&lt;/name>
            &lt;/normalization>
         &lt;/filter>
      &lt;/declarations>
      &lt;agent xml:id="park" roles="creator">
         &lt;IRI>tag:parkj@textalign.net,2015:self&lt;/IRI>
         &lt;name xml:lang="eng">Jenny Park&lt;/name>
      &lt;/agent>
      &lt;role xml:id="creator">
         &lt;IRI>http://schema.org/creator&lt;/IRI>
         &lt;name xml:lang="eng">creator&lt;/name>
      &lt;/role>
      &lt;change when="2014-10-24" who="park">Started file&lt;/change>
      &lt;comment when="2014-10-24" who="park">See p. 39 of source.&lt;/comment>
   &lt;/head></programlisting></para>
            <para>One significant difference is that <code>&lt;declarations></code> has a new child,
                  <code>&lt;filter></code>, which contains a <code>&lt;normalization></code>
               statement that declares, in both a description and an IRI, that we have opted to
               remove word-break line-end hyphenation. This provides a cautionary note to users of
               our data who might value line-end hyphenation. Any number of
                  <code>&lt;normalization></code>s can be used to describe any alterations we might
               have made in our transcription. In other transcriptions we could use this feature to
               declare other suppressions, such as editorial comments or footnote signals.</para>
            <para>Note that the value of <code>div-type/@xml:id</code> here, the letter
                  <code>l</code>, differs from our previous transcription file, <code>line</code>.
               Even though we have adopted a different nickname, they are treated as equivalent
               because in each file we have defined <code>l</code> or <code>line</code> with the
               same IRI, <code>http://dbpedia.org/resource/Line_(poetry)</code>. A computer that
               later aligns these two files will not worry so much about <code>l</code> and
                  <code>line</code>, but will look at the underlying IRI that defines these terms.
               This exemplifies how linked data (see above) can support our work. We are free to use
               abbreviations that make sense to us, yet tie those abbreviations into the larger
               infrastructure by means of IRIs. It also means that our transcriptions can be
               assigned divisions that may be generally rare and unfamiliar or common but only to a
               specific field (e.g., sections of a legal document).</para>
            <para>Our alignment <code>&lt;head></code>s will look slightly different. We start with
               the TAN-A-div alignment
               file:<programlisting>    &lt;head>
       &lt;name>div-based alignment of multiple versions of Ring o Roses&lt;/name>
       &lt;master-location>ringoroses.div.1.xml&lt;/master-location>
       &lt;rights-excluding-sources rights-holder="park">
          &lt;IRI>http://creativecommons.org/licenses/by/4.0/deed.en_US&lt;/IRI>
          &lt;name>Creative Commons Attribution 4.0 International License&lt;/name>
          &lt;desc>This data file is licensed under a Creative Commons Attribution 4.0 International
             License. The license is granted independent of rights and licenses associated with the
             source. &lt;/desc>
       &lt;/rights-excluding-sources>
       &lt;source xml:id="eng-uk">
          &lt;IRI>tag:parkj@textalign.net,2015:ring01&lt;/IRI>
          &lt;name>Transcription of ring around the roses in English (UK)&lt;/name>
          &lt;location when-accessed="2015-03-10">../TAN-T/ring-o-roses.eng.1881.xml&lt;/location>
       &lt;/source>
       &lt;source xml:id="eng-us">
          &lt;IRI>tag:parkj@textalign.net,2015:ring02&lt;/IRI>
          &lt;name>Transcription of ring around the roses in English (US)&lt;/name>
          &lt;location when-accessed="2014-08-13">../TAN-T/ring-o-roses.eng.1987.xml&lt;/location>
       &lt;/source>
       &lt;declarations/>
       &lt;agent xml:id="park" roles="creator">
          &lt;IRI>tag:parkj@textalign.net,2015:self&lt;/IRI>
          &lt;name xml:lang="eng">Jenny Park&lt;/name>
       &lt;/agent>
       &lt;role xml:id="creator">
          &lt;IRI>http://schema.org/creator&lt;/IRI>
          &lt;name xml:lang="eng">creator&lt;/name>
       &lt;/role>
       &lt;change when="2014-08-14" who="park">Started file&lt;/change>
    &lt;/head></programlisting></para>
            <para>Much of this will look similar to the previous two examples. Every alignment file
               has only one kind of source, namely TAN transcription files, nothing else. Therefore
                  <code>&lt;source></code>'s <code>&lt;IRI></code> always takes the <code>@id</code>
               value in the TAN transcription file. <code>&lt;name></code> may replicate exactly the
               title found in the transcription file, or it may be modified, perhaps to harmonize
               better with the descriptions of the other texts aligned in the file.
                  <code>&lt;source></code> also has an child element not seen in the earlier two
               examples, <code>&lt;location></code>, which specifies where the digital file was
               accessed and when (through <code>@when-accessed</code>). We may include as many of
               these <code>&lt;location></code> elements as we wish (starting with a preferred or
               reliable location). The <code>@when-accessed</code> value is important, because if
               the owner of the file later edits it, and provides a date for the change, the
               validator will be able to detect that our alignment file depends upon an older
               version and return a warning with details about the latest change. We can then
               explore the source and see if the alterations merit any changes on our part.</para>
            <para>Our TAN-A-div file could have any number of <code>&lt;source></code>s, and not
               necessarily for the same work. It also does not matter in which order we put the
                  <code>&lt;source></code>s. By putting the 1987 or the 1881 version first, we are
               not implying that one is the source of the other. The most important consequence is
               that most processes that use our alignment file will treat the first-listed source as
               the basis from which to compare other sources.</para>
            <para><code>&lt;declarations></code> is empty, mainly because we have, in this case, no
               working assumptions to declare. In more advanced uses, this element would not be
               empty.</para>
            <para>This <code>&lt;head></code> explains why the <code>&lt;body></code> of our
               TAN-A-div file could be empty. In the <code>&lt;head></code> we have already
               specified the texts that would need to be aligned and where they are to be found. All
               TAN-A-div files assume, by default, that every source should be aligned with each
               other upon the basis of <code>&lt;div></code>s, especially leaf
               <code>&lt;div></code>s. That is, the TAN-A-div format assumes all alignments are to
               be made implicitly unless otherwise specified. </para>
            <para>In fact, a TAN-A-div file is in this case technically unnecessary. The two files
               are already predictably structured and aligned, and the works and division types are
               defined identically. But we will see that the options available in a TAN-A-div's
                  <code>&lt;declarations></code> and <code>&lt;body></code> will allow us not only
               to deal with inconsistencies in source transcriptions but to create interesting
               alignments that go well beyond the automatic alignment afforded by identically
               structured transcriptions.</para>
            <para>Meanwhile we turn to our fourth file, the TAN-A-tok alignment, whose
                  <code>&lt;head></code> looks like
               this:<programlisting>    &lt;head>
        &lt;name>token-based alignment of two versions of Ring o Roses&lt;/name>
        &lt;master-location>ringoroses.01+02.token.1.xml&lt;/master-location>
        &lt;rights-excluding-sources rights-holder="park">
            &lt;IRI>http://creativecommons.org/licenses/by/4.0/deed.en_US&lt;/IRI>
            &lt;name>Creative Commons Attribution 4.0 International License&lt;/name>
            &lt;desc>This data file is licensed under a Creative Commons Attribution 4.0 International
               License. The license is granted independent of rights and licenses associated with the
               source. &lt;/desc>
        &lt;/rights-excluding-sources>
         &lt;source xml:id="ring1881">
            &lt;IRI>tag:parkj@textalign.net,2015:ring01&lt;/IRI>
            &lt;name>Ring o roses 1881&lt;/name>
            &lt;location when-accessed="2015-01-17">../TAN-T/ring-o-roses.eng.1881.xml&lt;/location>
        &lt;/source>
        &lt;source xml:id="ring1987">
            &lt;IRI>tag:parkj@textalign.net,2015:ring02&lt;/IRI>
            &lt;name>Ring o roses 1987&lt;/name>
            &lt;location when-accessed="2015-01-17">../TAN-T/ring-o-roses.eng.1987.xml&lt;/location>
        &lt;/source>
        &lt;declarations>
            &lt;bitext-relation xml:id="B-descends-from-A">
                &lt;IRI>tag:textalign.net,2015:bitext-relation:a/x+/b&lt;/IRI>
                &lt;name>B descends directly from A, unknown number of intermediaries&lt;/name>
                &lt;desc>The 1987 versions is hypothesized to descend somehow from the 
                    1881 version, mainly for the sake of illustration.&lt;/desc>
            &lt;/bitext-relation>
            &lt;reuse-type xml:id="adaptationGeneral">
                &lt;IRI>tag:textalign.net,2015:reuse-type:adaptation:general&lt;/IRI>
                &lt;name>general adaptation&lt;/name>
            &lt;/reuse-type>
            &lt;tokenization src="ring1881 ring1987" which="general-1"/>
        &lt;/declarations>
        &lt;agent xml:id="park" roles="creator">
            &lt;IRI>tag:parkj@textalign.net,2015:self&lt;/IRI>
            &lt;name xml:lang="eng">Jenny Park&lt;/name>
        &lt;/agent>
        &lt;role xml:id="creator">
            &lt;IRI>http://schema.org/creator&lt;/IRI>
            &lt;name xml:lang="eng">creator&lt;/name>
        &lt;/role>
        &lt;change when="2015-01-20" who="park">Started file&lt;/change>
    &lt;/head></programlisting></para>
            <para>The TAN-A-tok <code>&lt;head></code> looks similar to the previous examples,
               except that <code>&lt;declarations></code> has three children.</para>
            <para><code>&lt;bitext-relation></code> states through an IRI + name pattern the
               stemmatic relationship we think holds between the two sources. (Stemmatics is the
               study of the chain of transmission by which the versions written by authors made
               their way into the copies, versions, and editions that are extant; it frequently
               involves the creation of genealogical-like tree to depict how text-bearing objects
               with different copies of the same text derive from or relate to each other.)</para>
            <para>One or more <code>&lt;reuse-type></code>s specify how one text has reused another.
               The IRI we have used shows that we suspect that the text reuse is general adaptation.
               If this were a translation or a quotation or some other kind of text reuse, we would
               have used a different IRI value.</para>
            <para>A third declaration, <code>&lt;tokenization></code>, specifies the tokenization
               pattern we have adopted to define our word tokens. It is much like the
                  <code>&lt;recommended-tokenization></code>s that feature in TAN-T files. Note,
               however, that <code>@src</code> may take more than one value, to specify that the
               same tokenization rule should be applied to both sources. We could have applied
               different tokenization patterns had we wanted to, either to customized TAN-R-tok
               files or to one of the <code>&lt;recommended-tokenization></code> patterns in the
               source.</para>
         </section>
         <section>
            <title>Aligning across Projects</title>
            <para>We expand our example now and imagine what it might be like to extend the
               alignment outside our project. Let us assume that we have found in the library of
               another project a TAN transcription of a work that looks quite similar to our
               own:<programlisting>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;?xml-model href="http://textalign.net/release/1/dev/schemas/TAN-T.rnc" type="application/relax-ng-compact-syntax"?>
&lt;?xml-model href="http://textalign.net/release/1/dev/schemas/TAN-T.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
&lt;TAN-T xmlns="tag:textalign.net,2015:ns" id="tag:hans@beispiel.com,2014:ringel">
   &lt;head>
      &lt;name>TAN Transkription, Ringelreihen mit Riederfallen&lt;/name>
      &lt;master-location>http://beispiel.com/TAN-T/ringel.xml&lt;/master-location>
      &lt;rights-excluding-sources rights-holder="schmidt">
         &lt;IRI>http://creativecommons.org/licenses/by/4.0/&lt;/IRI>
         &lt;name>Creative Commons Namensnennung 4.0 International Lizenz.&lt;/name>
         &lt;desc>Dieses Werk ist lizenziert unter einer Creative Commons 
            Namensnennung 4.0 International Lizenz.&lt;/desc>
      &lt;/rights-excluding-sources>
      &lt;source>
         &lt;IRI>http://www.worldcat.org/oclc/4574384&lt;/IRI>
         &lt;name>Franz Magnus Böhme, Deutsches Kinderlied und Kinderspiel: Volksüberlieferungen aus
            allen Landen deutscher Zunge, gesammelt, geordnet und mit Angabe der Quellen. Leipzig,
            1897.&lt;/name>
      &lt;/source>
      &lt;declarations>
         &lt;work>
            &lt;IRI>tag:beispiel.com,2014:texte:holderbusch&lt;/IRI>
            &lt;name>"Die Kinder auf dem Holderbusch"&lt;/name>
         &lt;/work>
         &lt;version>
            &lt;IRI>urn:uuid:31648039-3dbb-49b9-b66e-9bd2cd11630e&lt;/IRI>
            &lt;name>zweite Version&lt;/name>
         &lt;/version>
         &lt;div-type xml:id="Zeile">
            &lt;IRI>http://dbpedia.org/resource/Gedichtzeile&lt;/IRI>
            &lt;name>Gedichtzeile&lt;/name>
         &lt;/div-type>
         &lt;recommended-tokenization which="general-1"/>
         &lt;filter>
            &lt;normalization>
               &lt;IRI>tag:kalvesmaki@gmail.com,2014:normalization:hyphens-discretionary-off&lt;/IRI>
               &lt;name>Keine Bindestriche&lt;/name>
            &lt;/normalization>
         &lt;/filter>
      &lt;/declarations>
      &lt;agent xml:id="schmidt" roles="Produzent">
         &lt;IRI>tag:hans@beispiel.com,2014:selbst&lt;/IRI>
         &lt;name xml:lang="eng">Hans Schmidt&lt;/name>
      &lt;/agent>
      &lt;role xml:id="Produzent">
         &lt;IRI>http://schema.org/producer&lt;/IRI>
         &lt;name xml:lang="eng">Produzent&lt;/name>
      &lt;/role>
      &lt;change when="2014-08-13" who="schmidt">Anfang&lt;/change>
      &lt;comment when="2014-08-13" who="schmidt">unten auf der Z. 438, recht&lt;/comment>
   &lt;/head>
   &lt;body xml:lang="deu" in-progress="false">
      &lt;div type="Zeile" n="a">Ringel, Ringel, Reihe!&lt;/div>
      &lt;div type="Zeile" n="b">Sind der Kinder dreie,&lt;/div>
      &lt;div type="Zeile" n="c">Sitzen auf dem Holderbuch,&lt;/div>
      &lt;div type="Zeile" n="e">Schreien alle: husch, husch, husch!&lt;/div>
   &lt;/body>
&lt;/TAN-T></programlisting></para>
            <para>It seems clear to us that this 19th-century German version is quite similar to our
               two English versions. We have some alignment options open to us. Two more sets of
               word-for-word alignments would be interesting, but remember, just because we find a
               text that nicely aligns with others does not mean that we <emphasis role="italic"
                  >must</emphasis> align them. In this case, we choose not to worry about word-for
               word alignments, and we focus here only on the TAN-A-div alignment, so that, for
               example, we can later generate an HTML report that will allow us to more conducively
               read the three versions in parallel and study their relationships.</para>
            <para>To that end, we first observe some differences between this transcription and our
               other two. First, the value of <code>&lt;work></code> is not the one we have given
               our two versions. Second, the <code>&lt;div-type></code> is defined as
                  <code>http://dbpedia.org/resource/Gedichtzeile</code>. Third, the lines have been
               lettered instead of numbered. And last, the editor seems to have made a typographical
               error, making the last line <code>n="e"</code> instead of <code>n="d"</code>). These
               four differences typify some of the inconsistencies that are found as people work
               independently on similar texts.<note>
                  <para>There are a few other differences in this third transcription that do not
                     affect our alignment. <code>&lt;version></code> is used to distinguish
                     different version of the same work found on the same text-bearing object.
                     Notice that the <code>&lt;IRI></code> value is a uuid, in this case because the
                     editor was not prepared to deploy a formal IRI naming scheme (perhaps using a
                     tag URN) that would be satisfactory for work-versions.</para>
               </note></para>
            <para>These are points we can easily reconcile in our TAN-A-div file, which we now
               expand to include the German version. We make the following adjustments (in
               boldface):<programlisting>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;?xml-model href="http://textalign.net/release/1/dev/schemas/TAN-A-div.rnc" type="application/relax-ng-compact-syntax"?>
&lt;?xml-model href="http://textalign.net/release/1/dev/schemas/TAN-A-div.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
&lt;TAN-A-div xmlns="tag:textalign.net,2015:ns" id="tag:parkj@textalign.net,2015:ring-alignment">
    &lt;head>
       &lt;name>div-based alignment of multiple versions of Ring o Roses&lt;/name>
       &lt;master-location>ringoroses.div.1.xml&lt;/master-location>
       &lt;rights-excluding-sources rights-holder="park">
          &lt;IRI>http://creativecommons.org/licenses/by/4.0/deed.en_US&lt;/IRI>
          &lt;name>Creative Commons Attribution 4.0 International License&lt;/name>
          &lt;desc>This data file is licensed under a Creative Commons Attribution 4.0 International
             License. The license is granted independent of rights and licenses associated with the
             source. &lt;/desc>
       &lt;/rights-excluding-sources>
       &lt;source xml:id="eng-uk">
          &lt;IRI>tag:parkj@textalign.net,2015:ring01&lt;/IRI>
          &lt;name>Transcription of ring around the roses in English (UK)&lt;/name>
          &lt;location when-accessed="2015-03-10">../TAN-T/ring-o-roses.eng.1881.xml&lt;/location>
       &lt;/source>
       &lt;source xml:id="eng-us">
          &lt;IRI>tag:parkj@textalign.net,2015:ring02&lt;/IRI>
          &lt;name>Transcription of ring around the roses in English (US)&lt;/name>
          &lt;location when-accessed="2014-08-13">../TAN-T/ring-o-roses.eng.1987.xml&lt;/location>
       &lt;/source>
       <emphasis role="bold">&lt;source xml:id="ger">
          &lt;IRI>tag:beispiel.com,2014:ringel&lt;/IRI>
          &lt;name>Transcription of an ancestor of Ring around the roses in German&lt;/name>
          &lt;location when-accessed="2014-08-22">http://beispiel.com/TAN-T/ringel.xml&lt;/location>
          &lt;location when-accessed="2014-08-22">../TAN-T/ring-o-roses.deu.1897.xml&lt;/location>
       &lt;/source></emphasis>
       &lt;declarations/>
       &lt;agent xml:id="park" roles="creator">
          &lt;IRI>tag:parkj@textalign.net,2015:self&lt;/IRI>
          &lt;name xml:lang="eng">Jenny Park&lt;/name>
       &lt;/agent>
       &lt;role xml:id="creator">
          &lt;IRI>http://schema.org/creator&lt;/IRI>
          &lt;name xml:lang="eng">creator&lt;/name>
       &lt;/role>
       &lt;change when="2014-08-14" who="park">Started file&lt;/change>
       <emphasis role="bold">&lt;change when="2014-08-22" who="park">Added German version.&lt;/change></emphasis>
    &lt;/head>
    &lt;body>
       <emphasis role="bold">&lt;equate-works sources="eng-uk ger"/>
       &lt;equate-div-types>
          &lt;div-type-ref src="ger" div-type-ref="Zeile"/>
          &lt;div-type-ref src="eng-uk" div-type-ref="line"/>
       &lt;/equate-div-types>
       &lt;realign>
          &lt;anchor-div-ref source="ger" ref="Zeile e"/>
          &lt;div-ref source="eng-us" ref="l 4"/>
       &lt;/realign></emphasis>
    &lt;/body>
&lt;/TAN-A-div></programlisting></para>
            <para>The first major change is the insertion of a new <code>&lt;source></code>,
               identifying the name and location of the third example. Note that two locations have
               been provided, one for the original location and another for the copy saved locally
               into our project folder. Validation will occur at the first document available, so if
               we wanted to work primarily off our local copy, we would have put it first. By
               placing it second, we indicate that we want to have our local copy as a backup, in
               case the first is not available.</para>
            <para>The second major insertion is a new <code>&lt;change></code>, documenting when we
               made the alterations. The value of <code>@when</code> effectively alters the version
               number of our TAN-A-div file.</para>
            <para>The third major change populates the <code>&lt;body></code> with elements that
               calibrate the new version to the other two. <code>&lt;equate-works></code> says that,
               for the sake of this alignment, the works defined in the UK version and the German
               version to be considered equivalent. We did not mention the US version because we do
               not need to. As was mentioned above, anyone using a TAN-A-div should assume that all
               alignments are transitive unless otherwise specified. That includes specifications
               like this. If A and B are already defined to be the same work, and we specify that A
               and C are also the same work, then it must be inferred that B and C are as well.
               Note, we are not committing ourselves to the proposition that they are in reality the
               same work. We are making this statement only provisionally, to facilitate the
               alignment.</para>
            <para><code>&lt;equate-div-types></code> declares that what the German version calls
               Zeile is, for the sake of this alignment, equivalent to what the UK version calls
               line. Transitivity means that Zeile is inferred to be equivalent to what the US
               version calls <code>l</code>.</para>
            <para>A <code>&lt;realign></code> takes care of the apparent typographical error, this
               time using the US version as the main way to correlate the division references. Any
                  <code>&lt;div-ref></code> in a <code>&lt;realign></code> is wrested from automatic
               alignment. If there is an <code>&lt;anchor-div-ref></code> then it will be realigned
               with that reference and, by the law of transitivity, anything that aligns to it, in
               this case the UK version.</para>
            <para>We do not need to reconcile the <code>@n</code> values of <code>a</code>,
                  <code>b</code>, and <code>c</code> in the German version. The TAN format allows
               four numeration systems other than Arabic numerals: Roman numerals (uppercase or
               lowercase), alphabetic numerals (a, b, c, ..., z, aa, bb, ....), and digit-alphabet
               combinations (e.g., 1a, 1e, 4g) or alphabet-digit combinations (e.g., a4, a5, b5).
               All these will be treated as their numerical equivalent.</para>
            <para>With these changes, the new version is completely synchronized with the other two.
               Our work may have been simplified if we had just modified the German version ourself.
               But then we would not have been able to connect our work to other TAN files that may
               be depending upon this version. Perhaps we should have gotten in touch with Hans
               Schmidt, the producer of the German version, and suggest that he modify the version
               to make it align better. In the case of <code>&lt;div-type></code>, he need merely
               add another line:
                  <code>&lt;IRI>http://dbpedia.org/resource/Line_(poetry)&lt;/IRI></code>. This
               line, in addition to the preexisting <code>&lt;IRI></code>, specifies that the two
               IRIs are equivalent. Perhaps he has reasons for labeling the lines with letters, and
               perhaps he is reluctant to explicitly identify this poem with <emphasis role="italic"
                  >Ring around the Rosie</emphasis>. That is within his rights. (Remember, TAN is
               meant to provide a framework within which opinions can be registered, even against
               popular opinion.) But the conversation might lead to our pointing out that
                  <code>n="e"</code> should probably be <code>n="d"</code> and that there is an
               apparent discrepancy in the last line (the original, printed book has the poem twice
               on page 438, one with "Holderbuch," the other, "Holderbusch"). In correcting the
               original transcription and providing a record of the change through
                  <code>&lt;change></code>, he tacitly notifies anyone else using the file that
               corrections have been made.</para>
            <para>There is much more to TAN, of course. The rest of these guidelines provide full
               documentation. In addition, other examples in the TAN repository provide ideas on how
               to develop your other alignments, perhaps more complex. The data files in that
               repository are open for modification, copying, reuse, and so forth. Just remember, if
               you do that, be certain to change the tag URN of each TAN file's <code>@id</code> so
               that it points to an email address or domain name that you own(ed).</para>
         </section>
      </chapter>
      <chapter>
         <title>Intermediate Use of the TAN Format</title>
         <para>This chapter expands upon the previous one by building upon the
               <emphasis>Ring-a-ring-a-roses</emphasis> example to explore more advanced uses of the
            format. Unlike the previous chapter, very few concepts are introduced because the level
            of discussion is now at a point where the technical descriptions become elaborate and
            are best reserved for the next part of this manual. Instead, the focus is on considering
            common desiderata and on providing examples to illustrate solutions.</para>
         <section>
            <title>Making TEI Transcriptions TAN-Compliant</title>
            <para>Text pending.</para>
         </section>
         <section>
            <title>Simplifying References and Identifying Quotations</title>
            <para>Text pending.</para>
         </section>
         <section>
            <title>Aligning Multiple Versions of Multiple Works</title>
            <para>Text pending.</para>
         </section>
         <section>
            <title>Creating Tokenization Rules</title>
            <para>Text pending.</para>
         </section>
         <section>
            <title>Analyzing Words (Morphology / Part of Speech)</title>
            <para>Text pending.</para>
         </section>
      </chapter>
   </part>
   <part xml:id="detailed_description">
      <title>Detailed Description</title>
      <partintro>
         <para>This part of the guidelines provides a detailed description of the Text Alignment
            Network formats. The rules for each encoding format are discussed in depth, interspersed
            with explanations and practical examples. This narrative, which is intended to be
            thorough and authoritative, is addressed primarily to those wish to read the theoretical
            and technical details that undergird the format. Much of this section is intended to be
            consulted, not read through, and it assumes that you have already read the previous part
               (<xref linkend="general_overview"/>).</para>
         <para>Because readers of this section include specialists from different backgrounds, all
            acronyms, abbreviations, and concepts are defined and explained, even if only tersely.
            Specialized concepts or technologies are discussed only insofar as they affect the use
            of TAN; suggestions for further reading are provided. </para>
         <para>The material in this part is organized from general to specific, then according to
            logical sequence (class, format, XML tree hierarchy). Much of the content follows the
            structure of the validation files, so both can be read in tandem.</para>
      </partintro>
      <chapter xml:id="concepts_common">
         <title>General Underpinnings</title>
         <para>This chapter retains something of the introductory spirit of the previous one by
            providing an overview of the fundamental principles and technologies behind TAN. The
            overall goal of this chapter is to summarize the theoretical and technological
            underpinnings that run throughout all TAN formats and to note definitions, assumptions,
            and other matters that broadly affect anyone working with TAN files. Although this
            chapter assumes no prior knowledge on your part of a particular technology, it is also
            not meant to be a tutorial. Links to further reading in this chapter will take you to
            introductory material that will provide thorough instruction or list it.</para>
         <section>
            <title>The Big Picture</title>
            <para>The Text Alignment Network is a suite of XML encoding formats. Each TAN format is
               designed for a specific type of textual data, organized in three classes: segmented
               representations of textual works (class 1), annotations of specific texts (class 2),
               and rules for linguistic concepts (Class 3). The number of classes may grow in the
               future to cover claims about text-bearing objects, for example codicology or
               stemmatics (the study of how manuscripts and other versions of a work relate to each
               other).</para>
            <para><emphasis role="bold">Class 1</emphasis>, representations of textual objects,
               consists solely of transcription files. Each transcription file contains the text of
               a single work from a single text-bearing object, whether physical or digital (TAN
               regards digital files as objects). There are two types of transcription file, a
               standard generic format and another for TEI XML files. These two types are
               differentiated by the name of the rootmost element in the file,
                  <code>&lt;TAN-T></code> and <code>&lt;TEI></code> respectively. In the future,
               class 1 may expand to include formats intended to segment (and therefore align)
               visual, audio, or audiovisual files; it may also expand to include a customized form
               of HTML.</para>
            <para><emphasis role="bold">Class 2</emphasis>, annotations of textual representations,
               consists of alignment files and lexico-morphology files. There are two types of
               alignment, one for broad, general alignments and another that focuses on detailed
               specificity. The former, identified by the name <code>&lt;TAN-A-div></code> in the
               rootmost element, aligns any number (one or more) of class 1 files. The latter,
                  <code>&lt;TAN-A-tok></code>, aligns only pairs of class 1 files. Lexico-morphology
               files, <code>&lt;TAN-LM></code>, are used to encode the lexical and morphological (or
               part of speech) forms of individual words in a given class 1 file. In the future,
               class 2 may expand to include syntax (treebanking).</para>
            <para><emphasis role="bold">Class 3</emphasis>, rules for linguistic concepts, consists
               of tokenization patterns and morphological patterns. The first of these,
                  <code>&lt;TAN-R-tok></code>, declares a pattern to be used to transform a string
               of text into a sequence of word tokens for linguistic analysis. The second type,
                  <code>&lt;TAN-R-mor></code>, is used to declare the grammatical categories or
               features of a given language and to stipulate rules for classifying words. Class 3
               file may expand in the future to include transliteration, lexicography, and syntax. </para>
            <para><emphasis role="italic">Dependence and reference</emphasis>: Class 1 files depend
               exclusively upon a single source—some text-bearing object (print or digital); they
               also refer to TAN-R-tok files. Class 2 files alone depend exclusively upon one or
               more class 1 files for their sources. They may also refer to class 3 files. Class 3
               files neither depend upon nor make reference to any other class of TAN file.</para>
            <para>Below is a visualization of each TAN format type and the types of TAN files referenced.<inlinemediaobject>
                  <imageobject>
                     <imagedata fileref="img/TAN%20formats%20class%201.jpeg"/>
                  </imageobject>
               </inlinemediaobject><inlinemediaobject>
                  <imageobject>
                     <imagedata fileref="img/TAN%20formats%20class%202.jpeg"/>
                  </imageobject>
               </inlinemediaobject><inlinemediaobject>
                  <imageobject>
                     <imagedata fileref="img/TAN%20formats%20class%203.jpeg"/>
                  </imageobject>
               </inlinemediaobject></para>
            <para>TAN files that refer to or are referred to by other TAN files form a kind of
               network. Alignment files become the principal point of connection. Below is an
               illustration of a small network of TAN files.</para>
            <para><inlinemediaobject>
                  <imageobject>
                     <imagedata fileref="img/TAN%20example%20suite%202015-03.jpeg"/>
                  </imageobject>
               </inlinemediaobject></para>
            <para>This approach to text markup adopts what is sometimes called <emphasis
                  role="italic">stand-off annotation</emphasis> (or <emphasis role="italic"
                  >stand-off markup</emphasis>). It is to be contrasted with <emphasis role="italic"
                  >in-line annotation</emphasis>, in which alignments, morphology, and so forth are
               built into the transcriptions themselves. Most TEI and HTML files exhibit in-line
               annotation. Stand-off annotation has been adopted so as to capitalize upon a number
               of benefits: <itemizedlist>
                  <listitem>
                     <para>An editor can work on a file with minimal distraction, focusing on a
                        limited set of closely related questions.</para>
                  </listitem>
                  <listitem>
                     <para>Alignments can be made concurrent to any others that may already exist,
                        allowing for rich, complex, or alternative alignments. </para>
                  </listitem>
                  <listitem>
                     <para>After a dataset is published, any other datasets it refers to, or any
                        datasets referring to it, can be aggregated into much larger and more
                        complex datasets, which can then be queried to answer questions otherwise
                        impossible to answer.</para>
                  </listitem>
                  <listitem>
                     <para>Editorial labor can be done without central coordination, as individuals
                        work at their own pace, independently, on separate files.</para>
                  </listitem>
                  <listitem>
                     <para>Errors can be corrected in a single master file. Anyone depending upon
                        that master file as a source will be able to detect changes that have been
                        made and deal with them accordingly.</para>
                  </listitem>
                  <listitem>
                     <para>Any data file can be released, circulated, and used independent of any
                        other that points to it, or to which it points.</para>
                  </listitem>
                  <listitem>
                     <para>The TAN suite can be expanded to allow other types of linguistic data,
                        thereby expanding the complexity of questions that could be answered.</para>
                  </listitem>
               </itemizedlist></para>
            <para>Stand-off annotation is not without its liabilities. Dependent files might be
               altered or altogether deleted. Files might contain erroneous or misleading
               information. It can be sometimes inconvenient not to have the annotated text in the
               same file and place as the annotation. These liabilities mean that TAN files should
               not be seen as replacements for in-line annotation formats, especially those that set
               out to serve activities TAN was not designed to support. </para>
         </section>
         <section>
            <title>Assumptions in the Creation of TAN Data</title>
            <para>All creators and users of TAN files are expected to share few basic
               assumptions.</para>
            <para>First, all TAN-compliant data is to be understood as largely
                  <emphasis>derivative</emphasis>. That is, data files have no originality or
               creativity independent of their sources (but see below about interpretation).
               TAN-compliant data is to be created with intent of adhering as closely as possible to
               some model or archetype. For example, a transcription should replicate faithfully
               some earlier digital edition or text-bearing material object (e.g., stone, papyrus,
               manuscript, printed book for written text; audiovisual media for oral or performative
               texts). Morphological files and alignment files should describe as clearly and as
               reliably as possible their source transcriptions. <emphasis>In creating and
                  publishing a TAN file you claim to have offered a good-faith representation or
                  description of one or more source texts or linguistic concepts; in using a TAN
                  file, you hold the creator to that expectation.</emphasis></para>
            <para>Second, all core TAN files are <emphasis>interpretive</emphasis>. That is, they
               are permeated by editorial assumptions and opinions that might not be shared by
               everyone. If there is any originality or creativity in a TAN file, it is vested in
               the interpretation of the sources. For example, if you edit a transcription file you
               must decide how to handle unusual letterforms and other visible marks. Your decisions
               will be informed by what you think about the original text, its native writing
               system, and how you interpret and use Unicode. If you write an alignment file, you
               must make decisions about what factors caused one text to be transformed into
               another. Lexicomorphological files require you to commit to one or more grammars and
               dictionaries, and you must discern how best to handle cases of vagueness and
               ambiguity. As a general rule, class 2 files have a greater interpretive dimension
               than do class 1 files, and class 3 than class 2. But no matter the degree, no TAN
               data file ever stands completely outside the interpretive act. <emphasis>In creating
                  and publishing a TAN file you claim to have disclosed the principles behind your
                  interpretive outlook; in using a TAN file, you hold the creator to that
                  expectation.</emphasis></para>
            <para>Third, all core TAN files are <emphasis>useful</emphasis>. That is, the
               interpretive impluse is assumed to be coupled with an equally strong desire to make
               the data as useful to as wide a group of users as possible, even those who may not
               share your assumptions or interpretation. For example, a creator of a transcription
               file should normalize and segment texts with a minimum of idiosyncracies, adopting
               when possible reference systems that are widely known so as to optimize the alignment
               process. Morphological files should depend whenever possible upon grammars and lexica
               that are broadly used. Alignment files should work with comprehensible categories of
               text reuse. No TAN file will always be useful to everyone, but it should be as useful
               to as many as possible, as frequently as possible. <emphasis>In creating a TAN file
                  you claim to use common, shared conventions whenever possible, and to note any
                  departures; in using a TAN file, you hold the creator to that
                  expectation.</emphasis></para>
            <para>There are other important assumptions that can and should be declared in a TAN
               file, and they are addressed in later chapters of these guidelines.</para>
         </section>
         <section>
            <title>Core Technology</title>
            <para>TAN depends upon a core set of basic, relatively stable technologies, discussed
               below. The technology and associated key acronyms or terms are very briefly defined
               and explained, to orient you to the concept, terminology, and conventions. References
               to further reading will lead you to better and more thorough introductions. The
               central goal of this section is to document and explain how certain aspects of each
               technology have affected the design of TAN, and therefore may significantly affect
               creating or processing TAN-compliant data.</para>
            <section xml:id="unicode">
               <title>Unicode</title>
               <para>Unicode is the worldwide standard for the consistent encoding, representation,
                  and exchange of digital texts. The standard, stable but still growing, is intended
                  to represent all the world's writing systems, living and historical. Maintained by
                  a nonprofit organization, Unicode is the basis upon which we can create and edit
                  text in mixed alphabets and reliably share that data with other people,
                  independent of specific fonts. Any Unicode-compliant text is (in general)
                  semantically interoperable on the character level and can be exchanged between
                  users and systems, no matter what font might be used to display the text. If some
                  software tries to display some Unicode-compliant text in a particular font that
                  does not support a particular alphabet, and ends up displaying boxes, the
                  underlying data is still intact and valid. Styling the text with a font that does
                  support the alphabet will reveal this to be the case.</para>
               <para>With more than 110,000 characters, Unicode is almost as complex as human
                  writing itself, and so has required a system of organization. The entire sequence
                  of characters is divided into Unicode blocks, each one reserved, more or less, for
                  a particular alphabet. Within each block, the various characters may be grouped
                  further. Each character is assigned a single codepoint.</para>
               <para>Because computers work on the binary system, it was considered ideal to number
                  the characters or glyphs in Unicode with a related numeration system. Codepoints
                  are therefore numbered according to a hexadecimal system (base 16), which is
                  larger than our most common system, the decimal (base 10). The hexadecimal system
                  uses the digits 0 through 9 and the letters A through F. (The number 10 in decimal
                  is A in hexadecimal; decimal 11 = hex B; decimal 17 = hex 10; decimal 79 = hex
                  4F.) To find Unicode codepoint values is therefore helpful to think of the corpus
                  of glyphs as a very long ribbon sixteen squares wide. This is illustrated nicely
                     <link
                     xlink:href="http://en.wikibooks.org/wiki/Unicode/Character_reference/0000-0FFF"
                     >in this article</link>. Each position along the width is labeled with a
                  hexadecimal number (0-9, A-F) that always identifies the last digit of a
                  character's code point value.</para>
               <para>It is common to refer to Unicode characters by their value or their name. The
                  value customarily starts "U+" and continues with the hexadecimal value, usually at
                  least four digits. The official Unicode name is usually given fully in uppercase.
                  Examples:</para>
               <para>
                  <table frame="all">
                     <title>Unicode characters</title>
                     <tgroup cols="3">
                        <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                        <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                        <colspec colname="c3" colnum="3" colwidth="1.0*"/>
                        <thead>
                           <row>
                              <entry>Character</entry>
                              <entry>Unicode value</entry>
                              <entry>Unicode name</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry>" " (space)</entry>
                              <entry>U+0020</entry>
                              <entry>SPACE</entry>
                           </row>
                           <row>
                              <entry>®</entry>
                              <entry>U+00AE</entry>
                              <entry>REGISTERED SIGN</entry>
                           </row>
                           <row>
                              <entry>ю</entry>
                              <entry>U+044E</entry>
                              <entry>CYRILLIC SMALL LETTER YU</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table>
               </para>
               <para>Further reading:<itemizedlist>
                     <listitem>
                        <para><link xlink:href="http://unicode.org">Unicode Consortium</link></para>
                     </listitem>
                     <listitem>
                        <para><link xlink:href="http://en.wikipedia.org/wiki/Unicode">Unicode</link>
                           (Wikipedia)</para>
                     </listitem>
                  </itemizedlist></para>
               <para>
                  <note xml:id="normalization">
                     <title>Normalization</title>
                     <para>TAN requires all data to be normalized according to the Unicode NFC
                        algorithm. Any text in a TAN body that does not comply will be marked as
                        invalid. Validation engines that support Schematron Quick Fixes should
                        provide an option to allow users to easily convert non-normalized to
                        normalized Unicode.</para>
                  </note>
                  <note xml:id="combining_characters">
                     <title>Combining characters</title>
                     <para>At the core level of conformance, Unicode does not dictate whether
                        combining characters (accents, modifying symbols) should be counted
                        independently or as part of a base character. This affects regular
                        expressions and XPath expressions. Any class 1 TAN file that takes a
                        modifying letter will have a warning returned whenever it is validated. Any
                        class 2 TAN file that attempts to count characters in a string of text that
                        includes combining characters will be marked as invalid.</para>
                  </note>
               </para>
            </section>
            <section xml:id="xml">
               <title>eXtensible Markup Language (XML)</title>
               <para>The eXtensible Markup Language (XML) is a machine-actionable markup language
                  that facilitates human readability. Defined by the W3C, XML has two versions, 1.0
                  and 1.1. &lt;<emphasis role="bold">Q: should version 1.1 be allowed or
                     mandated?</emphasis>></para>
               <para>At its heart, XML is rather simple. It begins with an opening line that
                  declares that what otherwise would look just like plain text is an XML file. It
                  then proceeds to the data, which must marked by one or more pairs of tags. An
                  opening tag looks like <code>&lt;tag></code> and a closing like
                     <code>&lt;/tag></code> (or if the tags contain no data, this can be collapsed
                  into one: <code>&lt;tag/></code>). Each pair of tags is called an element.
                  Elements must nest within each other. They cannot overlap. For
                  example:<programlisting>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;p>A paragraph about 
    &lt;name>&lt;first>Mary&lt;/first> 
        &lt;last>Lee&lt;/last>&lt;/name>.&lt;/p></programlisting></para>
               <para>This nesting relationship of elements means that an XML document can be thought
                  of as a tree or genealogy, which serves as the basis of technical vocabulary that
                  describes the relationship between elements: root, parent, child, sibling,
                  ancestor, and descendant. In the example above, the root element
                     <code>&lt;p></code> is the parent of <code>&lt;name></code> and the ancestor of
                     <code>&lt;name></code>, <code>&lt;first></code>, and <code>&lt;last></code>.
                  The element <code>&lt;first></code> is a child of <code>&lt;name></code> and a
                  descendant of both &lt;name> and <code>&lt;p></code>. <code>&lt;first></code> and
                     <code>&lt;last></code> are siblings to each other.</para>
               <para>The opening tag of an element might have additional nodes called attributes,
                  recognized by a word, an equals sign, and then some text within quotation marks
                  (single or double). An element may have many attributes, and those attributes can
                  appear in any order. Attributes can be thought of as leaves on an XML tree. They
                  are intended to carry simple data (usually metadata about the data contained by
                  the element), because they cannot govern a hierarchy.</para>
               <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;p n="1" id="example">A paragraph about &lt;name>&lt;first>Mary&lt;/first> &lt;last>Lee&lt;/last>&lt;/name>.&lt;/p></programlisting>
               <para>The two examples above provide the same text with different line breaks, but
                  they are functionally equivalent. That is because in most XML projects extra
                  lines, spaces, and indentation are allowed so that a document's layout can show
                  more clearly, through indented space, how elements nest within each other.
                  Continuous strings of multiple spaces, tabs, and newline/carriage return are to be
                  treated as a single space. (This behavior can be overridden in XML, but TAN files
                  always assume that a string and its space-normalized form are equivalent.)</para>
               <para>XML allows for other rules to be added, if an individual or group so wishes.
                  These rules, called schemas, can allow great flexibility or be very strict. The
                  TAN schemas tend to the latter. This is true also of its customization of the TEI
                  schemas. For more about the strictures placed upon the TEI All schema see <xref
                     linkend="tan-tei"/>. See also <xref linkend="class_common"/> and <xref
                     linkend="class_1"/>.</para>
               <para>TAN-TEI schemas are generated on the basis of the official TEI All schema that
                  is available at the time of release. </para>
               <para>Further reading:<itemizedlist>
                     <listitem>
                        <para><link xlink:href="http://www.tei-c.org/">Text Encoding
                              Initiative</link></para>
                     </listitem>
                  </itemizedlist></para>
               <para>
                  <note xml:id="whitespace">
                     <title>TAN and white space</title>
                     <para>&lt;Stuff about space normalization and text nodes with nothing but blank
                        space. The default: all whitespace text nodes will be taken as real, but
                        will also be subject to the same kind of normalization as one gets in
                           <code>fn:normalize-space()</code>. All leaf <code>&lt;div></code>s will
                        have their space normalized. This will be applied to the concatenation of
                        all text() descendants. Important for TEI users to know, since whitespace
                        text nodes will be treated as a single space, and if white space appears at
                        the beginning or end of a text node that is a descendant of a leaf
                           <code>&lt;div></code>, it will not necessarily be stripped out.></para>
                     <para>Every leaf <code>&lt;div></code> separated from another leaf
                           <code>&lt;div></code> by one or more spacing characters is assumed to be
                        separated by only one, but no specification is made as to whether that
                        spacing character should be a word space (U+0020 or the XML entity
                        &amp;#x20;) or one of the other three possible characters (line feed,
                        carriage return, tab). Users are expected to consult the relevant
                           <code>&lt;div-type></code> to interpret the behavior. TAN is not intended
                        to replicate the appearance of a text-bearing object. Any project that has
                        this as a requirement should not use the TAN format.</para>
                  </note><note xml:id="tei_and_id_validation">
                     <para>Some validation engines that process a valid TAN-compliant TEI file may
                        return an error something like <code>conflicting ID-types for attribute
                           "who" of element "comment" from namespace
                           "tag:textalign.net,2015:ns"</code>. Such a message alerts you to the fact
                        that by mixing the TEI and TAN namespaces, you open yourself up to the
                        possibility of conflicting <code>xml:id</code> values. It is your
                        responsibility to ensure that you have not assigned duplicate identifiers.
                        Very often, it is possible for you to configure an XML editor to ignore this
                        discrepancy. (In &lt;oXygen/> XML editor go to Options > Preferences... >
                        XML > XML Parser > RELAX NG and uncheck the box check ID/IDREF.)</para>
                  </note>
               </para>
            </section>
            <section xml:id="namespace">
               <title>Namespace</title>
               <para>XML allow users to develop vocabularies of elements as they wish. One person
                  may wish to use <code>&lt;bank></code> to refer to a financial institution,
                  another to a river. XML was designed to allow users to mix vocabularies, even when
                  those vocabularies use synonymous element names. This means that anyone using
                     <code>&lt;bank></code> as an element name must be able to specify exactly whose
                  vocabulary of <code>&lt;bank></code> is intended. Disambiguation is accomplished
                  by associating IRIs (see <xref linkend="IRIs_and_linked_data"/> below) with the
                  element names. The actual full name of an element is the joined IRI and element
                  name, e.g., <code>http://example1.com/terms/bank</code> and
                     <code>http://example2.com/terms/bank</code>. </para>
               <para>This approach to disambiguation is effective but it requires some way to
                  associate the element name with its base IRI. If only one vocabulary is in play,
                  then the base IRI can be declared to be the default
                  <emphasis>namespace</emphasis>, which means that any subsequent element should be
                  treated as being the <emphasis>local name</emphasis> of an element that is part of
                  that namespace. The namespace is much like a surname (family name) and the local
                  name, a given name of a person in that family. If a simple, small genealogical
                  tree is said to belong to the Smith family, then the name "Smith" need appear only
                  at the head, not at every person named on that tree.</para>
               <para>But just as genalogical trees that involve other families require
                  disambiguation, so too do XML files that mix vocabularies. But where a
                  genealogical tree can simply add the family names at every node, XML has opted for
                  a different mechanism, that of the <emphasis>prefix</emphasis>, a short string
                  that is associated with the namespace, and is then attached to the element name. </para>
               <para>For example, the TAN namespace is <emphasis role="bold"
                        ><code>tag:textalign.net,2015:ns</code></emphasis>. The recommended prefix
                  is <emphasis role="bold"><emphasis>tan</emphasis></emphasis>. It is customary,
                  then, when TAN elements are mixed with other elements such as TEI, to use the
                  prefix to disambiguate them, e.g., <code>&lt;tan:div></code> versus
                     <code>&lt;tei:div></code>. The fully qualified name of
                     <code>&lt;tei:div></code> is properly
                     <code>http://www.tei-c.org/ns/1.0/div</code>, whereas <code>&lt;tan:div></code>
                  is <code>tag:textalign.net,2015:ns/div</code>. </para>
               <para>Any XML element may take a special attribute (actually a pseudo-attribute,
                  since it is technically not an attribute), <code>@xmlns</code>, sometimes on its
                  own and sometimes followed by a colon and a prefix. The first case is used to
                  declare the default namespace (and therefore sidestep the need to use a prefix).
                  The second case is used to bind a namespace to a prefix. These definitions apply
                  not only to the element that contains the <code>@xmlns</code> attribute but to all
                  descendants, unless overridden. </para>
               <para>
                  <caution>
                     <para>There are no plans to change the namespace. But if, in the future
                        development of the network, it becomes clear that one or more elements must
                        be redefined in manner incompatible with previous definitions, then the
                        namespace will be changed as well. Such a change will coincide with a major
                        version update of the schemas (see <xref linkend="schemas_and_validation"
                        />).</para>
                  </caution>
               </para>
               <para>The examples and the validation files illustrate the use of the TAN namespace.
                  See especially those files pertaining to class 1 and TAN-TEI files, where the TEI
                  and TAN vocabularies mix.</para>
               <para>The TAN namespace uses a tag URN instead of an <code>http://</code> IRI for
                  several reasons: (1) http namespaces rarely resolve as a URL to anything useful;
                  (2) tag URN reinforces the lesson that the namespace is a name and not a location;
                  (3) tag URNs are naturally constructed to allow versioning (see note above); (4)
                  should the domain name <code>textalign.net</code> come under the ownership of
                  someone else, the namespace will still remain valid because it is tied to a date
                  when that domain was owned; http-prefixed namespaces are in jeopardy of being
                  rendered invalid when a domain name changes ownership.</para>
            </section>
            <section xml:id="schemas_and_validation">
               <title>Schemas and Validation</title>
               <para>XML files admit of a process called <emphasis role="italic"
                     >validation</emphasis>, which checks to see if all the declared rules have been
                  followed. These validation rules are kept in files called <emphasis role="italic"
                     >schemas</emphasis>, plain-text files that state the rules according to one of
                  the accepted schema languages. Each TAN file is validated by two types of schema
                  files, one dealing with major rules concerning structure and data type (written in
                  RELAX-NG) the other with very detailed rules (written in Schematron).</para>
               <para>Schema files are provided in major or minor updates. An update is minor if the
                  changes introduced do not render files valid under previous minor updates invalid.
                  (But new warnings might be produced.) Otherwise the update will be treated as
                  major.</para>
               <para>
                  <table frame="all">
                     <title>Locations of master schemas</title>
                     <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="2.86*"/>
                        <colspec colname="c2" colnum="2" colwidth="1.99*"/>
                        <thead>
                           <row>
                              <entry>Schema path</entry>
                              <entry>Schema files accessed</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry><code>http://textalign.net/release/1/dev/schemas/</code></entry>
                              <entry>Major version 1, developmental version</entry>
                           </row>
                           <row>
                              <entry><code>http://textalign.net/release/1/schemas</code></entry>
                              <entry>Major version 1, latest minor version</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table>
               </para>
            </section>
            <section xml:id="data_types">
               <title>Data types</title>
               <para>&lt;Stuff about data types></para>
               <para>Data types regularly used: boolean, string, integer, IRI, date, dateTime</para>
               <para>New paragraph introducing <code>@xml:lang</code> / xsd:language<note
                     xml:id="language">
                     <title>xsd:language</title>
                     <para>TAN adopts for language identification Best Common Practices (BCP) 47,
                        which standardizes with high precision how languages are identified. For
                        most users of TAN, this will be a simple three-letter abbreviation,
                        sometimes supplemented with a hyphen and a script or regional subtag. For
                        example, <code>&lt;eng></code>, <code>&lt;eng-UK></code>, and
                           <code>&lt;eng-UK-Cyrl></code> refer, respectively, to English generally,
                        English from the United Kingdom, and English from the United Kingdom written
                        in the Cyrillic script. As a general rule, values of this type should begin
                        with a three-letter language code, preferably lowercase.</para>
                     <para>ISO codes for human languages appear in <code>@xml:lang</code> and
                           <code>&lt;for-lang></code>. The first, an attribute, indicates the
                        principal language of the text enclosed by the element and its descendants.
                        But the second, an element, provides a way to make a statement about a
                        language. For example, <code>&lt;for-lang></code> in the context of a
                        TAN-R-tok file indicates languages for which a tokenization rule is
                        appropriate.</para>
                     <para>More reading:<itemizedlist>
                           <listitem>
                              <para>BCP 47 <link xlink:href="http://tools.ietf.org/rfc/bcp/bcp47"
                                    >official specifications</link></para>
                           </listitem>
                           <listitem>
                              <para>BPC 47 <link
                                    xlink:href="http://www.w3.org/TR/xmlschema11-2/#language"
                                    >technical details</link></para>
                           </listitem>
                        </itemizedlist></para>
                  </note></para>
               <para>&lt;New paragraph introducing dates and times><note xml:id="date_and_datetime">
                     <title>xsd:date, xsd:dateTime</title>
                     <para>TAN adopts the standardized ISO form of dates and times, which begins
                        with the largest unit and moves to the smallest. A simple date takes this
                        form: <code>&lt;YYYY-MM-DD></code>. A time is specified by continuing the
                        string, first with a <code>&lt;T></code> (for time) then with &lt;NEEDS TO
                        BE WRITTEN>. Examples: &lt;PENDING>.</para>
                     <para>The normalized value of <code>@when</code> that is most recent in a TAN
                        document differentiates the version of a documents that share the same IRI
                        name (see <xref linkend="uri_name"/>).</para>
                     <para>Future dates are not allowed in TAN files. (This is checked against the
                        clock settings on individual computers.)</para>
                     <para>More reading:<itemizedlist>
                           <listitem>
                              <para>ISO dates</para>
                           </listitem>
                        </itemizedlist></para>
                  </note></para>
            </section>
            <section xml:id="IRIs_and_linked_data">
               <title>International Resource Identifiers and Linked Data</title>
               <para><emphasis role="bold">&lt;NOT YET WRITTEN></emphasis></para>
               <para>&lt;Stuff about URNs and related terms <emphasis>URI</emphasis>,
                     <emphasis>IRI</emphasis>, <emphasis>URN</emphasis>,
                  <emphasis>UUID</emphasis>></para>
               <para>The network regularly depends upon three types of legally defined IRIs:</para>
               <para>
                  <itemizedlist>
                     <listitem>
                        <para>IRI generally: https://tools.ietf.org/html/rfc3986</para>
                     </listitem>
                     <listitem>
                        <para>UUID</para>
                     </listitem>
                     <listitem>
                        <para>HTTP</para>
                     </listitem>
                     <listitem>
                        <para>tag URNs: </para>
                     </listitem>
                     <listitem>
                        <para>OID</para>
                     </listitem>
                  </itemizedlist>
               </para>
               <para>&lt;xml:id can't take colons; thus the IRI for TAN files has been given another
                  attribute name, to ensure that tag URNs are always constructed validly. See
                  below.></para>
               <para><emphasis role="bold">Resource Description Framework (RDF) and Linked Open
                     Data</emphasis>. The recommended way to prepare data for the semantic web is to
                  coin and use URN names that take the form of URLs. The URL then allows one both to
                  uniquely name an object and to indicate how a human or computer can get more
                  information about it. The TAN encoding format has chosen tag URNs over URLs for
                  several reasons:</para>
               <para>
                  <itemizedlist>
                     <listitem>
                        <para><emphasis role="bold">Permanence.</emphasis> Authors of TAN data are
                           creating files that are meant to be relevant for decades and centuries in
                           the future, well after specific domain names have changed ownership or
                           fallen into obsolesence, and well after the creators are dead. To mint
                           names according to URLs is inadequate for long-term use, since it has no
                           built-in mechanism to identify who owned the domain name in question when
                           the name was minted. </para>
                     </listitem>
                     <listitem>
                        <para><emphasis role="bold">Hassle-free URN naming</emphasis>. Many
                           potential TAN authors never have owned a domain name, and never will.
                           Further, many of those who do own domain names cannot or do not wish to
                           configure and maintain servers to create the referral mechanisms upon
                           which the semantic web depends. The majority of potential TAN file
                           editors would be happy to mint names that could be later adapted for
                           semantic web applications, but would not want to take on the extra hassle
                           involved in writing and publishing more complicated data descriptions,
                           e.g., RDFa.</para>
                     </listitem>
                     <listitem>
                        <para><emphasis role="bold">Disambiguation of name and location</emphasis>.
                           In the semantic web, conflation of name with a location to resolve it is
                           considered a virtue because a single string answers two questions: what
                           is the resource and where can I find out more about it. But this
                           conflation is unhelpful for those who use the TAN formats, who are
                           encouraged to distribute their TAN files widely, and not rely upon a
                           single location. And URLs are in common parlance interpreted as locations
                           for data, not as names for things. TAN-compliant tag URLs ensure that the
                           names of concepts and objects do not look like locations, maintaining a
                           distinction that has always been a foundational principle in scholarly
                           citation, namely, that one should always distinguish the name of a
                           resource from where it might be found.</para>
                     </listitem>
                  </itemizedlist>
               </para>
               <para>&lt;New paragraph.></para>
               <para>
                  <note>
                     <para>&lt;Internationalization behind IRIs></para>
                     <para>TAN does not constrain IRI values. Anything conforming to xsd:anyURI can
                        be used, including formulations that have not been approved by IANA. This
                        manual restricts itself to only approved URN schemes. &lt;link></para>
                     <para>IRI: http://www.ietf.org/rfc/rfc3987.txt</para>
                  </note>
               </para>
               <para>
                  <note xml:id="tag_urn">
                     <title>Tag URNs</title>
                     <para>TAN files make extensive use of the tag URN scheme. A <link
                           xlink:href="http://www.taguri.org">tag URN</link> is a composite of (1) a
                        namespace, an identifier of the authority of the TAN file and (2) a name, a
                        string unique relative to the namespace. Those two parts, more
                        specificially, are:</para>
                     <para>
                        <orderedlist>
                           <listitem>
                              <para><emphasis role="bold">Namespace.</emphasis>
                                 <code>tag:</code> + an e-mail address or domain name owned by the
                                 person or organization that has authorized the creation of the TAN
                                 file + <code>,</code> + an arbitrary day on which that address or
                                 domain name was owned. The day is expressed in the form
                                    <code>&lt;YYYY-MM-DD></code>, <code>&lt;YYYY-MM></code>, or
                                    <code>&lt;YYYY></code>. A missing <code>&lt;MM></code> or
                                    <code>&lt;DD></code> is implicitly assigned the value of
                                    <code>&lt;01></code>.</para>
                           </listitem>
                           <listitem>
                              <para><emphasis role="bold">Name of the TAN file.</emphasis>
                                 <code>:</code> + an arbitrary string (unique to the namespace
                                 chosen) chosen by the namespace owner as a label for the entire
                                 file and related versions. It need not be the same as the filename
                                 stored on a local directory. You should pick a name that is at
                                 least somewhat intelligible to human readers.</para>
                           </listitem>
                        </orderedlist>
                     </para>
                     <para>
                        <example>
                           <title>TAN IRI names</title>
                           <programlisting>tag:jan@example.com,1999-01-31:TAN-T001
tag:example.com,2001-04:hamlet-tan-t
tag:evagriusponticus.net,2014:tan-lm:Evagrius_Praktikos_grc_Guillaumonts
tag:bbrb@example.org,1995-04-01:pos-grc</programlisting>
                           <para>The first example comes from someone who owned the email address
                                 <code>jan@example.com</code> on January 31, 1999 (at the stroke of
                              midnight, Universal Coordinated Time). The other examples follow a
                              similar logic. The namespace of the second and third examples are tied
                              to the owners of specific domain names, not those of email addresses.
                              The <code>2014</code> in the fourth example is shorthand for the first
                              second of January 1, 2014.</para>
                        </example>
                     </para>
                     <para>Further reading:<itemizedlist>
                           <listitem>
                              <para><link xlink:href="https://tools.ietf.org/html/rfc4151">RFC
                                    4151</link>, the official definition of tag URNs</para>
                           </listitem>
                        </itemizedlist></para>
                  </note>
               </para>
            </section>
            <section xml:id="regular_expressions">
               <title>Regular Expressions</title>
               <para>Regular expressions are patterns for searching text. The term <emphasis
                     role="italic">regular</emphasis> here does not mean ordinary. Rather, it refers
                  to rules (Latin <emphasis role="italic">regula</emphasis>), and points to a
                  rule-based syntax that provides regular expressions with great power. Because
                  regular expressions come in different flavors, and because the topic is rather
                  complex, these guidelines are restricted to a synopsis that conforms to the
                  definition of regular expressions found in the <link
                     xlink:href="http://www.w3.org/TR/xslt-30/#regular-expressions">recommendation
                     of XSLT 3.0</link> (XML Schema Datatypes plus some extensions), and outlined in
                     <link xlink:href="http://www.w3.org/TR/xpath-functions-30/#regex-syntax">XPath
                     Fuctions 3.0</link>. </para>
               <para>A regular expression search pattern is treated just like a conventional search
                  pattern until the computer reaches a special escape character: <code>^ $ ( [ | . {
                     + * ? \</code></para>
               <para>Here are a number of the special characters that are used in regular
                  expressions, and what they mean. These tables, which are here mainly for quick
                  reference, are not self-sufficient to ground you in regular expressions.</para>
               <para>
                  <table frame="all">
                     <title>Special characters</title>
                     <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1*"/>
                        <colspec colname="c2" colnum="2" colwidth="12.33*"/>
                        <thead>
                           <row>
                              <entry>Symbol</entry>
                              <entry>Meaning</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry>^</entry>
                              <entry>start of line</entry>
                           </row>
                           <row>
                              <entry>$</entry>
                              <entry>end of line</entry>
                           </row>
                           <row>
                              <entry>.</entry>
                              <entry>any character</entry>
                           </row>
                           <row>
                              <entry>|</entry>
                              <entry>or (union)</entry>
                           </row>
                           <row>
                              <entry>[ad]</entry>
                              <entry>a or d</entry>
                           </row>
                           <row>
                              <entry>[a-d]</entry>
                              <entry>a, b, c, or d</entry>
                           </row>
                           <row>
                              <entry>[^ad]</entry>
                              <entry>anything except a or d</entry>
                           </row>
                           <row>
                              <entry>(ad)</entry>
                              <entry>when ad is found treat it as a capture group (used only in a
                                 search pattern)</entry>
                           </row>
                           <row>
                              <entry>$1</entry>
                              <entry>first capture group (used only in a replacement pattern, and
                                 corresponds to the sequence of capture groups in the search
                                 pattern)</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table>
               </para>
               <para>
                  <table frame="all">
                     <title>Backslash special characters</title>
                     <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1*"/>
                        <colspec colname="c2" colnum="2" colwidth="12.33*"/>
                        <thead>
                           <row>
                              <entry>Symbol</entry>
                              <entry>Meaning</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry>\w</entry>
                              <entry>any word character</entry>
                           </row>
                           <row>
                              <entry>\W</entry>
                              <entry>any nonword character</entry>
                           </row>
                           <row>
                              <entry>\s</entry>
                              <entry>any of the four standard spacing characters: space (U+0020),
                                 tab (U+0009), newline (U+000A), carriage return (U+000D)</entry>
                           </row>
                           <row>
                              <entry>\S</entry>
                              <entry>anything not a spacing character</entry>
                           </row>
                           <row>
                              <entry>\d</entry>
                              <entry>any digit (0-9)</entry>
                           </row>
                           <row>
                              <entry>\D</entry>
                              <entry>anything not a digit</entry>
                           </row>
                           <row>
                              <entry>\x{hhh..}</entry>
                              <entry>character with the Unicode code point hhh..</entry>
                           </row>
                           <row>
                              <entry>\p{IsGujarati}</entry>
                              <entry>any character from the Unicode block named Gujarati</entry>
                           </row>
                           <row>
                              <entry>\\</entry>
                              <entry>backslash (the backslash alone suggests that the next character
                                 is a special character)</entry>
                           </row>
                           <row>
                              <entry>\$</entry>
                              <entry>dollar sign</entry>
                           </row>
                           <row>
                              <entry>\(</entry>
                              <entry>opening parenthesis</entry>
                           </row>
                           <row>
                              <entry>\[</entry>
                              <entry>opening square bracket</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table></para>
               <para>
                  <table frame="all" xml:id="quantifiers">
                     <title>Quantifiers</title>
                     <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1*"/>
                        <colspec colname="c2" colnum="2" colwidth="12.33*"/>
                        <thead>
                           <row>
                              <entry>Symbol</entry>
                              <entry>Meaning</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry>?</entry>
                              <entry>zero or one</entry>
                           </row>
                           <row>
                              <entry>*</entry>
                              <entry>zero or more</entry>
                           </row>
                           <row>
                              <entry>+</entry>
                              <entry>one or more</entry>
                           </row>
                           <row>
                              <entry>{n}</entry>
                              <entry>n times</entry>
                           </row>
                           <row>
                              <entry>{n,m}</entry>
                              <entry>from n to m times</entry>
                           </row>
                           <row>
                              <entry>{n,}</entry>
                              <entry>n times or more</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table>
               </para>
               <para>Some examples:</para>
               <table frame="all">
                  <title>Examples of Regular Expressions</title>
                  <tgroup cols="3">
                     <colspec colname="newCol1" colnum="1" colwidth="1*"/>
                     <colspec colname="c1" colnum="2" colwidth="1.48*"/>
                     <colspec colname="c2" colnum="3" colwidth="6.59*"/>
                     <thead>
                        <row>
                           <entry>Expression</entry>
                           <entry>Meaning</entry>
                           <entry>Result when applied to "Wi-fi, good. A_hem* isn't!"</entry>
                        </row>
                     </thead>
                     <tbody>
                        <row>
                           <entry><code>.i</code></entry>
                           <entry>any letter followed by i.</entry>
                           <entry>"Wi", "fi", " i"</entry>
                        </row>
                        <row>
                           <entry><code>[t*].</code></entry>
                           <entry>any t or * and the following character</entry>
                           <entry>"* ", "t!"</entry>
                        </row>
                        <row>
                           <entry><code>\s+</code></entry>
                           <entry>match one or more space characters</entry>
                           <entry>" ", " ", " "</entry>
                        </row>
                        <row>
                           <entry><code>\w+</code></entry>
                           <entry>match one or more word characters</entry>
                           <entry>"Wi", "fi", "good", "A_hem", "isn", "t"</entry>
                        </row>
                        <row>
                           <entry><code>\W+</code></entry>
                           <entry>match one or more nonword characters</entry>
                           <entry>"-", ", ", ". ", "* ", "'", "!"</entry>
                        </row>
                        <row>
                           <entry><code>[^q]+</code></entry>
                           <entry>one or more characters that are not a q</entry>
                           <entry>"Wi-fi, good. A_hem* isn't!"</entry>
                        </row>
                     </tbody>
                  </tgroup>
               </table>
               <para>These short examples provide a taste of how regular expressions are constructed
                  and read. For further examples especially relevant to TAN see <xref
                     linkend="filter_examples"/>. </para>
               <warning xml:id="reg_exp_and_comb_chars">
                  <title>Regular Expressions and Combining Characters</title>
                  <para>Regular expressions come in many different flavors, and each one deals with
                     some of the more complex issues in Unicode in their own manners. This ambiguity
                     will be most keenly felt in the use of combining characters in Unicode. Given a
                     string <code>&amp;#x61;&amp;#x301;&amp;#x62;</code> = áb, a search pattern
                        <code>a.</code> will in some search engines include the b and others will
                     not.</para>
                  <para>Unicode has differentiated three levels of support for regular expressions
                     (see <link xlink:href="http://www.unicode.org/reports/tr18/">official
                        report</link>). Only level one conformance in TAN is guaranteed. If you find
                     the need to count characters, and you are working with a language that uses
                     combining characters, you should use token values, not numerals pointing to
                     ordinal sequence. There is no guarantee that combining characters these will be
                     treated uniformly. See <xref linkend="combining_characters"/>.</para>
               </warning>
               <para>Further reading:<itemizedlist>
                     <listitem>
                        <para>Various <link
                              xlink:href="http://www.google.com/search?q=tutorial+regular+expressions"
                              >tutorials on Regular Expressions</link></para>
                     </listitem>
                     <listitem>
                        <para>Wikipedia, <link
                              xlink:href="http://en.wikipedia.org/wiki/Regular_expression">Regular
                              Expressions</link></para>
                     </listitem>
                     <listitem>
                        <para><link xlink:href="http://www.w3.org/TR/xslt-30/#regular-expressions"
                              >Regular Expressions in XSLT 3.0</link></para>
                     </listitem>
                     <listitem>
                        <para><link xlink:href="http://www.unicode.org/reports/tr18/">Unicode and
                              Regular Expressions</link></para>
                        <para>http://www.w3.org/TR/xmlschema-2/#regexs</para>
                     </listitem>
                  </itemizedlist></para>
            </section>
            <section xml:id="xpath">
               <title>XPath</title>
               <para><emphasis role="bold">&lt;NOT YET WRITTEN></emphasis></para>
               <para>&lt;Stuff about XPath.></para>
               <para>&lt;Examples.></para>
               <para>&lt;Commonly used XPath expressions in TAN.></para>
               <para>&lt;Further reading.></para>
               <para>
                  <note>
                     <para>TAN adopts as its standard XPath 3.0.</para>
                  </note>
               </para>
            </section>
         </section>
      </chapter>
      <chapter xml:id="class_common">
         <title>Patterns and Structures Common to All TAN Encoding Formats</title>
         <section xml:id="patterns">
            <title>Common Patterns</title>
            <section xml:id="iri_and_name">
               <title>IRI + name Pattern</title>
               <para>Both humans and computers will need to read and write TAN metadata. Very often
                  what is readable to humans is unreadable to computers, and vice versa. So the TAN
                  format requires that all metadata be provided in both forms. Although this rule
                  may appear to introduce redundancy and therefore new opportunities for error, the
                  clarity is critical. It is the only way at present to ensure that anyone who
                  approaches the data--computer or human--can parse and use it. And, in reality,
                  doubly expressed metadata provides a safeguard much like a checksum: the human-
                  and computer-readable descriptions should correspond. Any discrepancy is a signal
                  that an error should be diagnosed and fixed.</para>
               <para>Some metadata, such as comments, are neither easily nor profitably translated
                  into a computer-actionable string. In such cases only the human-readable form is
                  required. Other metadata use regular expressions or ISO-compliant dates, both of
                  which are well formed and usually human-legible. In those cases the human- and
                  computer-readable components are not separated. In cases where a datum is not
                  understandable to humans, such as a complex regular expression, a
                     <code>&lt;comment></code> may be provided.</para>
               <para>Those exceptions aside, all other metadata takes what is called the <emphasis
                     role="italic">IRI + name </emphasis>pattern. (For IRI + name patterns applied
                  to digital objects see <xref linkend="digital_entity_metadata"/>.)</para>
               <para>
                  <table frame="all">
                     <title>Synopsis of <code>&lt;IRI></code>, <code>&lt;name></code>,
                           <code>&lt;desc></code></title>
                     <tgroup cols="7">
                        <colspec colname="c1" colnum="1" colwidth="1.59*"/>
                        <colspec colname="c3" colnum="2" colwidth="1*"/>
                        <colspec colname="c4" colnum="3" colwidth="1.44*"/>
                        <colspec colname="c5" colnum="4" colwidth="1.75*"/>
                        <colspec colname="newCol7" colnum="5" colwidth="2.77*"/>
                        <colspec colname="newCol6" colnum="6" colwidth="3.05*"/>
                        <colspec colname="c6" colnum="7" colwidth="7.14*"/>
                        <thead>
                           <row>
                              <entry>name</entry>
                              <entry>req?</entry>
                              <entry>qty</entry>
                              <entry>parent</entry>
                              <entry>attributes</entry>
                              <entry>children</entry>
                              <entry>purpose</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry><code>&lt;IRI></code></entry>
                              <entry>yes</entry>
                              <entry>one or more</entry>
                              <entry>varies</entry>
                              <entry><xref linkend="edit_stamp"/></entry>
                              <entry>data (xsd:URI)</entry>
                              <entry>Declare permanent, unique IRI as a name for a concept or
                                 entity</entry>
                           </row>
                           <row>
                              <entry><code>&lt;name></code></entry>
                              <entry>yes</entry>
                              <entry>one or more</entry>
                              <entry>varies</entry>
                              <entry><code>@xml:lang</code>?, <xref linkend="edit_stamp"/></entry>
                              <entry>data (xsd:string)</entry>
                              <entry>Provide human-readable name of a concept or entity</entry>
                           </row>
                           <row>
                              <entry><code>&lt;desc></code></entry>
                              <entry>no</entry>
                              <entry>one or more</entry>
                              <entry>varies</entry>
                              <entry><code>@xml:lang</code>?, <xref linkend="edit_stamp"/></entry>
                              <entry>data (xsd:string)</entry>
                              <entry>Provide human-readable description of a concept or
                                 entity</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table>
                  <note xml:id="synoptic_tables_of_elements">
                     <title>Synoptic tables</title>
                     <para>The table above is the first of many that synoptically describe the
                        elements (or sometimes attributes) under discussion. The first column
                        contains element names, and assumes the TAN namespace unless otherwise
                        specified (e.g., <code>tei:body</code> would refer to the
                           <code>&lt;body></code> element defined by the TEI in its namespace). The
                        second column indicates whether the element is required by its parent. (If
                        its parent is optional and missing then it will be missing as well.) The
                        third column shows how many instances of the element are allowed or
                        required. The fourth column states the element's parent and the fifth, which
                        attributes it takes. The sixth column states what children elements or data
                        it takes (if data, the datatype is specified in parentheses). The last
                        column summarizes the purpose of the element. For the meaning of ?, *, etc.
                        see <xref linkend="quantifiers"/>.</para>
                     <para>Each of these tables is meant to give a short, rough overview of the
                        elements under discussion. For an authoritative explanation of the rules and
                        best practices, see the corresponding master schema or the prose description
                        that follows each table.</para>
                     <para>Because <code>&lt;comment></code> is allowed to appear virtually
                        everywhere, it has been dropped from the synoptic tables. For specific
                        details on where this element is not allowed, see <xref linkend="comment"
                        />.</para>
                  </note>
               </para>
               <para>One or more <code>&lt;IRI></code>s supply a permanent computer-readable IRI
                  that uniquely names a concept, person, or thing. Multiple <code>&lt;IRI></code>
                  values are to be treated as names for the same thing, not as names of different
                  things. In cases where the thing named is a TAN file, only one
                     <code>&lt;IRI></code> is allowed.</para>
               <para>Sibling <code>&lt;IRI></code>s cannot be taken to be synonymous (but they must
                  be poecilonymic). (For those familiar with the <link
                     xlink:href="http://www.w3.org/TR/owl-ref/">Web Ontology Language</link>, this
                  means that sibling <code>&lt;IRI></code>s <emphasis>cannot</emphasis> be assumed
                  to share the relationship <code>owl:sameAs</code>.) This is because you may need
                  the freedom to use IRIs from different vocabularies, which may define their
                  concepts with slight differences. For example, if you wish to define the job of
                  editor in a <code>&lt;role></code>, you might deliberate between Schema.org's URL
                  and that of the Library of congress, where the former,
                     <code>http://schema.org/editor</code>, is defined as "the Person who edited the
                  CreativeWork" and the latter,
                     <code>http://id.loc.gov/vocabulary/relators/edt</code>, as "a person, family,
                  or organization contributing to a resource by revising or elucidating the content,
                  e.g., adding an introduction, notes, or other critical matter. An editor may also
                  prepare a resource for production, publication, or distribution." These may or may
                  not be equivalent. But may include both, if we feel that either satisfactorily
                  covers what we mean, we may include them both. A TAN element defined with multiple
                     <code>&lt;IRI></code>s is to be understood as being within the intersection of
                  those definitions.<warning>
                     <para>[The previous paragraph has an important conceptual problem that will be
                        addressed in future versions. That problem is, in sum, whether multiple IRIs
                        should be taken to indicatethe union or the intersection of those IRIs. This
                        has tremendous ramifications for inferences that can be made when comparing
                        IRIs across independently written files.]</para>
                  </warning></para>
               <para>The element is named IRI instead of URI to encourage internationalization.
                  Alphabets other than the Latin are welcome to be used in the construction of IRIs.
                  For names of well-known resources, a URL identifier might be preferred
                     (<code>http://...</code>), to facilitate linked data (see <xref
                     linkend="IRIs_and_linked_data"/>). If an entity/resource lacks a suitable
                  URL-type name, you may use or coin any other valid IRI, such as a UUID, a tag URN,
                  or an OID. </para>
               <para>One or more mandatory <code>&lt;name></code>s furnish human-readable names of
                  the entity identified in <code>&lt;IRI></code>. Because TAN files may need to be
                  shared across language communities, this data can be stated any number of times in
                  any language, in any Unicode-compliant script. Each human-readable datum may be
                  given the attribute <code>@xml:lang</code>, which must take the value of a
                  standard ISO language code (see <xref linkend="language"/>). Declaring the
                  language that is used is a courtesy to users who may wish to extract explanations
                  written in a specific language. If you provide a comment in multiple languages, it
                  best to make sure that each version says roughly the same thing.</para>
               <para>One or more optional <code>&lt;desc></code>s provide a human-readable
                  description of the entity named in <code>&lt;IRI></code>. <code>&lt;desc></code>,
                  which may also take an <code>@xml:lang</code> that specifies the language of the
                  description, is in effect merely a <code>&lt;comment></code> that describes the
                  entity.</para>
               <para>All three elements above may take an edit stamp (see <xref linkend="edit_stamp"
                  />) to specify which <code>&lt;agent></code> was responsible for creating or
                  editing the data, and when. <note>
                     <para>Values for <code>&lt;IRI></code> do not state where a source is, even
                        though some of them may look like they do. If the value looks like a web
                        page address (e.g., <code>http://...</code>), beware—it might be simply a
                        name that looks like a URL, but really isn't where you will find the source.
                        Vice versa, any <code>&lt;location></code> that happens fall in an IRI +
                        name Pattern indicates only where the digital file was found; it is not to
                        be interpreted by anyone using linked open data as the name of an entity.
                        See <xref linkend="IRIs_and_linked_data"/> and <xref
                           linkend="digital_entity_metadata"/>.</para>
                  </note></para>
               <para>
                  <example>
                     <title>IRI + name pattern: <code>&lt;role></code></title>
                     <programlisting>      ...........
   &lt;role xml:id="editor">
      &lt;IRI>http://schema.org/editor&lt;/IRI>
      &lt;name xml:lang="eng">editor&lt;/name>
   &lt;/role>
      ...........</programlisting>
                  </example>
                  <example>
                     <title>IRI + name pattern: <code>&lt;rights-excluding-sources></code></title>
                     <programlisting>      ...........
   &lt;rights-excluding-sources rights-holder="cheh">
      &lt;IRI>http://creativecommons.org/licenses/by/4.0/deed.en_US&lt;/IRI>
      &lt;name xml:lang="eng">Creative Commons Attribution 4.0 International License.&lt;/name>
      &lt;desc xml:lang="eng">License granted exclusive of rights held and licenses 
        held by rightsholders of the source or sources.&lt;/desc>
   &lt;/rights-excluding-sources>
      ...........</programlisting>
                  </example>
               </para>
            </section>
            <section xml:id="digital_entity_metadata">
               <title>Digital Entity Metadata Pattern</title>
               <para>Some entities identified by the <xref linkend="iri_and_name"/> will be digital
                  resources. In those cases, the IRI + name Pattern is extended in two different
                  ways, according to whether the entity is a TAN file or not. If the entity is a TAN
                  file, then <code>&lt;IRI></code> must be a valid tag URN that matches the
                     <code>@id</code> value of the TAN file being referred to. If the entity is not
                  a TAN file, then any IRI may be used. If you choose to use the URL of where the
                  digital resource is as its name (as well as its location; see below), then it will
                  be inferred that you mean to identify the digital resource that appeared at that
                  URL at the date or time you accessed it.</para>
               <para>Digital entities take the following extensions, in addition to their IRI + name
                  pattern:</para>
               <para>
                  <table frame="all">
                     <title>Synopsis of <code>&lt;checksum></code>, <code>&lt;location></code>,
                           <code>&lt;value></code>, </title>
                     <tgroup cols="7">
                        <colspec colname="c1" colnum="1" colwidth="1.59*"/>
                        <colspec colname="c3" colnum="2" colwidth="1*"/>
                        <colspec colname="c4" colnum="3" colwidth="1.44*"/>
                        <colspec colname="c5" colnum="4" colwidth="1.75*"/>
                        <colspec colname="newCol7" colnum="5" colwidth="2.77*"/>
                        <colspec colname="newCol6" colnum="6" colwidth="3.05*"/>
                        <colspec colname="c6" colnum="7" colwidth="7.14*"/>
                        <thead>
                           <row>
                              <entry>name</entry>
                              <entry>req?</entry>
                              <entry>qty</entry>
                              <entry>parent</entry>
                              <entry>attributes</entry>
                              <entry>children</entry>
                              <entry>purpose</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry><code>&lt;checksum></code></entry>
                              <entry>no</entry>
                              <entry>one or more</entry>
                              <entry>varies</entry>
                              <entry><xref linkend="edit_stamp"/></entry>
                              <entry><xref linkend="iri_and_name"/>, <code>&lt;value></code></entry>
                              <entry>provide the checksum of a digital entity that has been
                                 used</entry>
                           </row>
                           <row>
                              <entry><code>&lt;location></code></entry>
                              <entry>yes</entry>
                              <entry>one or more</entry>
                              <entry>varies</entry>
                              <entry><xref linkend="edit_stamp"/>,
                                 <code>@when-accessed</code></entry>
                              <entry><xref linkend="iri_and_name"/></entry>
                              <entry>provide a location of a digital entity</entry>
                           </row>
                           <row>
                              <entry><code>&lt;value></code></entry>
                              <entry>yes</entry>
                              <entry>one</entry>
                              <entry><code>&lt;checksum></code></entry>
                              <entry><xref linkend="edit_stamp"/></entry>
                              <entry>data (xsd:string)</entry>
                              <entry>provide a checksum value</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table>
               </para>
               <para>The optional <code>&lt;checksum></code> specifies some string hash function
                  that can be used to confirm the identity of a digital file believed to be the
                  source. The type of hash is defined in a required <xref linkend="iri_and_name"/>,
                  and the mandatory <code>&lt;value></code> provides the value of the checksum. The
                  checksum will not be generated, checked, or validated by TAN schemas. Validation
                  must be provided by an external tool.</para>
               <para>One or more <code>&lt;location></code> elements provide URLs for where the
                  resource can be found. Each <code>&lt;location></code> element must carry a
                     <code>@when-accessed</code> value that indicates the date when the file at the
                  URL was last consulted. If there are multiple <code>&lt;location></code>s,
                  validation will be checked only against the first one available to the validator.
                  Any <code>&lt;location></code> pointing to a document that is not available will
                  marked with a warning. If no documents are available, an error message will be
                  reported.</para>
               <para>Note, if the digital file being referred to is a TAN file, it may have no more
                  than one <code>&lt;IRI></code> in its IRI + name Pattern.</para>
               <example>
                  <title>Digital entity metadata pattern of a TAN file</title>
                  <programlisting>      ...........
   &lt;source xml:id="grc">
      &lt;IRI>tag:parkj@textalign.net,2014:Evagrius_Praktikos_grc_Guillaumonts.TAN-TEI.001&lt;/IRI>
      &lt;name>Transcription of Greek edition by the Guillaumonts&lt;/name>
      &lt;location when-accessed="2014-10-15"
          >../TAN-T/cpg2430.grc.guillaumonts.tei.xml&lt;/location>
   &lt;/source>
      ...........</programlisting>
               </example>
               <example>
                  <title>Digital entity metadata pattern of a non-TAN file</title>
                  <programlisting>      ...........
   &lt;source>
     &lt;IRI>tag:textalign.net,2015:source:digital:http://insaph.kcl.ac.uk/iaph2007/xml/iAph010001.xml&lt;/IRI>
     &lt;name>TEI transcription of boundary marker, set up by C. Julius Zoilos&lt;/name>
     &lt;checksum>
        &lt;IRI>http://dbpedia.org/resource/Sha-1&lt;/IRI>
        &lt;name>SHA-1&lt;/name>
        &lt;value>8ac1146c86e06071f352bf3cb89614c0a0f0c7ee&lt;/value>
     &lt;/checksum>
     &lt;location when-accessed="2015-05-07"
       >http://insaph.kcl.ac.uk/iaph2007/xml/iAph010001.xml&lt;/location>
   &lt;/source>
      ...........</programlisting>
               </example>
            </section>
            <section xml:id="edit_stamp">
               <title>Edit Stamp</title>
               <para>
                  <table frame="all">
                     <title>Synopsis of <code>@ed-who</code>, <code>@ed-when</code></title>
                     <tgroup cols="6">
                        <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                        <colspec colname="c3" colnum="2" colwidth="1*"/>
                        <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                        <colspec colname="c5" colnum="4" colwidth="1.53*"/>
                        <colspec colname="newCol6" colnum="5" colwidth="2.55*"/>
                        <colspec colname="c6" colnum="6" colwidth="4.73*"/>
                        <thead>
                           <row>
                              <entry>name</entry>
                              <entry>req?</entry>
                              <entry>qty</entry>
                              <entry>parent</entry>
                              <entry>contains</entry>
                              <entry>purpose</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry><code>@ed-who</code></entry>
                              <entry>yes</entry>
                              <entry>one</entry>
                              <entry>varies</entry>
                              <entry><code>d:IDREFS</code></entry>
                              <entry>Indicate who is responsible for edits</entry>
                           </row>
                           <row>
                              <entry><code>@ed-when</code></entry>
                              <entry>yes</entry>
                              <entry>one</entry>
                              <entry>varies</entry>
                              <entry><xref linkend="date_and_datetime"/>.</entry>
                              <entry>Indicate when edits occured</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table>
               </para>
               <para>Most TAN elements allow for an optional edit stamp, an <code>@ed-who</code> and
                  an <code>@ed-when</code> stating who created or edited the enclosed data and when.
                  Neither attribute is allowed without the other. The value of <code>@when</code>
                  must always conform to an ISO date or dateTime pattern. See <xref
                     linkend="date_and_datetime"/>.</para>
               <para><code>@ed-when</code>, along with <code>@when</code> (see <xref
                     linkend="change"/> and <xref linkend="comment"/>), are the criterion by which a
                  TAN file's version is calculated. </para>
               <para>An edit stamp performs the same function as <code>&lt;change></code>, except
                  that no description can be provided and it points precisely to the element where a
                  change has been made. If a description of the alteration is necessary,
                     <code>&lt;change></code> should be used.</para>
               <para><emphasis role="italic">Inheritability</emphasis>. If without an edit stamp, an
                  element inherits the edit stamp of its closest ancestor.</para>
               <para>
                  <example>
                     <title>Edit stamp: <code>&lt;role></code></title>
                     <programlisting>      ...........
   &lt;role xml:id="creator" ed-when="2015-01-29" ed-who="smith">
      &lt;IRI>http://schema.org/creator&lt;/IRI>
      &lt;name ed-when="2015-01-31" ed-who="cheh">creator&lt;/name>
   &lt;/role>
      ...........</programlisting>
                     <caption>
                        <para>In this example, the Edit stamp in <code>&lt;role></code> applies to
                              <code>&lt;role></code>, <code>&lt;IRI></code>, and their contents, but
                              <code>&lt;name></code> has its own Edit Stamp.</para>
                     </caption>
                  </example>
                  <example>
                     <title>Edit stamp: <code>&lt;change></code></title>
                     <programlisting>      ...........
   &lt;change when="2015-02-04" who="cheh" ed-when="2015-02-28" ed-who="smith">Cheh corrected all
      xml:lang values&lt;/change>
      ...........</programlisting>
                     <caption>
                        <para>In this example, <code>&lt;change></code> ascribes an alteration to
                           Cheh, but the edit stamp credits Smith with last changing the
                              <code>&lt;change></code>.</para>
                     </caption>
                  </example>
               </para>
            </section>
            <section xml:id="languages">
               <title>Languages</title>
               <table frame="all">
                  <title>Synopsis of <code>@xml:lang</code>, <code>&lt;for-lang></code></title>
                  <tgroup cols="7">
                     <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                     <colspec colname="c3" colnum="2" colwidth="1*"/>
                     <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                     <colspec colname="c5" colnum="4" colwidth="1.53*"/>
                     <colspec colname="newCol7" colnum="5" colwidth="2.21*"/>
                     <colspec colname="newCol6" colnum="6" colwidth="2.55*"/>
                     <colspec colname="c6" colnum="7" colwidth="4.73*"/>
                     <thead>
                        <row>
                           <entry>name</entry>
                           <entry>req?</entry>
                           <entry>qty</entry>
                           <entry>parent</entry>
                           <entry>attributes</entry>
                           <entry>children</entry>
                           <entry>purpose</entry>
                        </row>
                     </thead>
                     <tbody>
                        <row>
                           <entry><code>@xml:lang</code></entry>
                           <entry>varies</entry>
                           <entry>only one</entry>
                           <entry>varies</entry>
                           <entry>----</entry>
                           <entry>---</entry>
                           <entry>Identify the language in which enclosed data is written</entry>
                        </row>
                        <row>
                           <entry><code>&lt;for-lang></code></entry>
                           <entry>varies</entry>
                           <entry>varies</entry>
                           <entry>varies</entry>
                           <entry><xref linkend="edit_stamp"/></entry>
                           <entry>data (xsd:language)</entry>
                           <entry>Make a statement about a language</entry>
                        </row>
                     </tbody>
                  </tgroup>
               </table>
               <para>Languages are frequently named throughout TAN files, and always with standard
                  ISO codes (see <xref linkend="language"/>). A strong distinction is made within
                  the TAN format between a language code used to label content versus a language
                  code used to make a statement about the language itself. The former always occurs
                  as an attribute, the latter as an element.</para>
               <example>
                  <title><code>@xml:lang</code></title>
                  <programlisting>...........
   &lt;body xml:lang="eng">
      ...........
   &lt;/body>
...........</programlisting>
               </example>
               <example>
                  <title><code>&lt;for-lang></code></title>
                  <programlisting>&lt;TAN-R-tok ... >
   ...........
      &lt;declarations>
         &lt;for-lang>grc&lt;/for-lang>
      &lt;/declarations>
   ...........
&lt;/TAN-R-tok></programlisting>
               </example>
            </section>
         </section>
         <section xml:id="structure">
            <title>Overall Structure (root)</title>
            <para><table frame="all">
                  <title>Synopsis of rootmost element (<code>&lt;TAN-*></code>,
                        <code>&lt;TEI></code>), <code>@id</code>,
                        <code>@TAN-version</code>,<code>&lt;head></code>, and
                     <code>&lt;body></code></title>
                  <tgroup cols="7">
                     <colspec colname="c1" colnum="1" colwidth="1.59*"/>
                     <colspec colname="c3" colnum="2" colwidth="1*"/>
                     <colspec colname="c4" colnum="3" colwidth="1*"/>
                     <colspec colname="c5" colnum="4" colwidth="2.13*"/>
                     <colspec colname="newCol7" colnum="5" colwidth="2.77*"/>
                     <colspec colname="newCol6" colnum="6" colwidth="6.44*"/>
                     <colspec colname="c6" colnum="7" colwidth="3.78*"/>
                     <thead>
                        <row>
                           <entry>name</entry>
                           <entry>req?</entry>
                           <entry>qty</entry>
                           <entry>parent</entry>
                           <entry>attributes</entry>
                           <entry>children</entry>
                           <entry>purpose</entry>
                        </row>
                     </thead>
                     <tbody>
                        <row>
                           <entry><code>&lt;TAN-*></code></entry>
                           <entry>yes</entry>
                           <entry>one</entry>
                           <entry>document</entry>
                           <entry><code>@id</code>, <code>@TAN-version</code>, <xref
                                 linkend="edit_stamp"/>?</entry>
                           <entry><code>&lt;head></code>, <code>&lt;body></code></entry>
                           <entry>Indicate type of TAN format</entry>
                        </row>
                        <row>
                           <entry><code>&lt;tei:TEI></code></entry>
                           <entry>yes</entry>
                           <entry>one</entry>
                           <entry>document</entry>
                           <entry><code>@id</code>, etc.*</entry>
                           <entry><code>&lt;tei:teiHeader></code>, <code>&lt;head></code>,
                                 <code>&lt;tei:body></code></entry>
                           <entry>Indicate TAN-TEI format</entry>
                        </row>
                        <row>
                           <entry><code>/*/@id</code></entry>
                           <entry>yes</entry>
                           <entry>only one</entry>
                           <entry>rootmost element</entry>
                           <entry>----</entry>
                           <entry>data (tag URN)</entry>
                           <entry>Provide permanent, unique name for a TAN file</entry>
                        </row>
                        <row>
                           <entry><code>/*/@TAN-version</code></entry>
                           <entry>yes</entry>
                           <entry>only one</entry>
                           <entry>rootmost element</entry>
                           <entry>----</entry>
                           <entry>data (xsd:string)</entry>
                           <entry>Name the version of validation files used</entry>
                        </row>
                        <row>
                           <entry><code>&lt;head></code></entry>
                           <entry>yes</entry>
                           <entry>one</entry>
                           <entry><code>/*</code></entry>
                           <entry><code>xml:lang</code>?, <xref linkend="edit_stamp"/>?</entry>
                           <entry><code>&lt;name></code>+, <code>&lt;desc></code>*,
                                 <code>&lt;master-location></code>+,
                                 <code>&lt;rights-excluding-sources></code>,
                                 <code>&lt;source></code>+, <code>&lt;see-also></code>*,
                                 <code>&lt;declarations></code>, <code>&lt;agent></code>+,
                                 <code>&lt;role></code>+, <code>&lt;change></code>+,
                                 <code>&lt;comment></code>*</entry>
                           <entry>Contains metadata</entry>
                        </row>
                        <row>
                           <entry><code>&lt;body></code></entry>
                           <entry>yes</entry>
                           <entry>one</entry>
                           <entry><code>/*</code></entry>
                           <entry>varies</entry>
                           <entry>varies</entry>
                           <entry>Contains data</entry>
                        </row>
                     </tbody>
                  </tgroup>
               </table>All TAN-compliant files, no matter the type or class, follow a common basic
               structure: (1) at least three processing instruction nodes, (2) a namespace node, and
               (3) a rootmost element that has only two children: <code>&lt;head></code> and
                  <code>&lt;body></code> (with one exception, noted below).</para>
            <para><emphasis role="italic">Processing instruction nodes</emphasis>: The first of
               three required processing nodes is the standard declaration made in every XML file's
               prolog: <code>&lt;?xml version="1.0" encoding="UTF-8"?></code> After that come two
               more processing instruction nodes specifying the two schema files required for validation<itemizedlist>
                  <listitem>
                     <para><code>&lt;?xml-model href="[PATH]/[ROOTMOST-ELEMENT-NAME].rnc"
                           type="application/relax-ng-compact-syntax"?></code></para>
                  </listitem>
                  <listitem>
                     <para><code>&lt;?xml-model href="[PATH]/[ROOTMOST-ELEMENT-NAME].sch"
                           type="application/xml"
                           schematypens="http://purl.oclc.org/dsdl/schematron"?></code></para>
                  </listitem>
               </itemizedlist></para>
            <para>The first processing instruction node points to the RELAX-NG schema that declares
               the major rules of the chosen TAN format; the second points to the finely tuned
               rules, written in Schematron. Both processing instructions are required.
                  <code>[PATH]</code> represents the pathname to the schema file, whether local or
               in the master location (see <xref linkend="schemas_and_validation"/>) and
                  <code>[ROOTMOST-ELEMENT-NAME]</code> stands for the name of the rootmost element.
               Master files are housed at the TAN website, and these files may be cached, saved,
               served, and used anywhere. Other processing instruction nodes may be included, but
               conflicts may result.<note>
                  <para>Of each pair of validating schema files, the first is written in RELAX-NG
                     (compact syntax), the second in Schematron. The one semi-exception is the
                     TAN-TEI format, which has at its core a special format developed by the TEI for
                     customization called ODD ("One Document Does" it all; for details see <xref
                        linkend="tan-tei"/>). TAN uses an ODD file that constrains the latest
                     version of TEI All to the requirements of the TAN-T format.</para>
                  <para>Under the license under which materials are released, these schema files may
                     be freely modified and reused. Bear in mind that any alterations run the risk
                     of producing files that are not interoperable with TAN-compliant files.</para>
               </note></para>
            <para><emphasis role="italic">Namespace node</emphasis>: All TAN elements take the
               namespace <code>tag:textalign.net,2015:ns</code> (subject to change; see <xref
                  linkend="namespace"/>). In most cases, this value is placed in the rootmost
               element. (The only exception are TAN-TEI transcription files, which take as a default
               namespace <code>http://www.tei-c.org/ns/1.0</code> everywhere but in
                  <code>/TEI/head</code>, which takes the TAN namespace.) For more about namespaces,
               see <xref linkend="schemas_and_validation"/>.</para>
            <para><emphasis role="italic">Rootmost element</emphasis>: The name of the rootmost
               element identifies the type of TAN file:<table frame="all">
                  <title>Rootmost TAN elements</title>
                  <tgroup cols="3">
                     <colspec colname="c1" colnum="1" colwidth="1.19*"/>
                     <colspec colname="c2" colnum="2" colwidth="1.19*"/>
                     <colspec colname="newCol3" colnum="3" colwidth="1*"/>
                     <thead>
                        <row>
                           <entry>Rootmost element name</entry>
                           <entry>Type of data</entry>
                           <entry>TAN class</entry>
                        </row>
                     </thead>
                     <tbody>
                        <row>
                           <entry><code>&lt;TAN-T></code></entry>
                           <entry>plain text transcriptions</entry>
                           <entry>1</entry>
                        </row>
                        <row>
                           <entry><code>&lt;TEI></code></entry>
                           <entry>TEI transcriptions</entry>
                           <entry>1</entry>
                        </row>
                        <row>
                           <entry><code>&lt;TAN-A-tok></code></entry>
                           <entry>token-based alignments</entry>
                           <entry>2</entry>
                        </row>
                        <row>
                           <entry><code>&lt;TAN-A-div></code></entry>
                           <entry>division-based alignments</entry>
                           <entry>2</entry>
                        </row>
                        <row>
                           <entry><code>&lt;TAN-LM></code></entry>
                           <entry>lexico-morphological analysis</entry>
                           <entry>2</entry>
                        </row>
                        <row>
                           <entry><code>&lt;TAN-R-mor></code></entry>
                           <entry>part of speech / morphology patterns</entry>
                           <entry>3</entry>
                        </row>
                        <row>
                           <entry><code>&lt;TAN-R-tok></code></entry>
                           <entry>tokenization patterns</entry>
                           <entry>3</entry>
                        </row>
                     </tbody>
                  </tgroup>
               </table></para>
            <para>Each rootmost element takes a mandatory <code>@id</code> and
                  <code>@TAN-version</code>. </para>
            <para>The value of <code>@id</code>, termed the <emphasis>IRI name</emphasis>, is a tag
               URN (no other IRI schemes are allowed; see <xref linkend="tag_urn"/> for syntax).<note>
                  <para>Tag URNs are used as the IRI name for TAN files for a number of reasons,
                     foremost of which are their suitability for enduring naming schemes. That is,
                     they will remain valid centuries from now, long after the death of the owner of
                     a domain names or email address. It is essential to familiarize yourself with
                     this simple but powerful IRI system. See <xref linkend="tag_urn"/>.</para>
               </note> The IRI name, which is valid independent of wherever the data may be found,
               is the primary way TAN files will refer to it. The namespace of the IRI name must
               match at least one namespace in one <code>&lt;agent></code>'s <code>&lt;IRI></code>
               value. This helps to tie the ownership of the TAN file to at least one person. </para>
            <para>Great care must be taken in choosing the IRI name, because you are the sole
               guarantor of its uniqueness. <emphasis role="italic">It is permissible for something
                  to have multiple IRIs, but never acceptable for a IRI to name more than one
                  thing.</emphasis> It is a good practice to keep a master checklist of IRI names
               you have created. If you find yourself forgetting, or think you run the risk of
               creating duplicate IRI names, you should start afresh by creating a new namespace for
               your tag URNs. That is, if <code>tag:textalign.net,2015:...</code> seems to be overly
               cluttered, you may start a new set of names with something else, e.g.,
                  <code>tag:textalign.net,2015-01-02:...</code>.</para>
            <para>In choosing a value of <code>@id</code> you might borrow the filename (the name
               one sees when one lists files in a directory), but you do not have to. Indeed, it may
               not be a good idea. One often needs to have the flexibility to rename files. That
               renaming should rarely if ever happen with TAN files that have been shared or
               published, because others will be citing it by the IRI name. There may be good
               reasons on occasion in the course of revision to create a new IRI name. Discernment
               is required. If you think it important dissociate a file with previous versions, only
               then should you change it. If you take someone else's data and alter it then you
                  <emphasis role="italic">must</emphasis> change at least the namespace of the IRI
               name. If you do not, you falsely suggest that the owner of that namespace is
               responsible for the revised file. In these cases, you should supply a
                  <code>&lt;see-also></code> element in the &lt;head> indicating that you are
               providing an alternative or new edition. See <xref linkend="source_and_see-also"/>
               below.</para>
            <para>The IRI name points to an edition but not a version. The specific version of a TAN
               file is identified by the <code>@when</code> or <code>@ed-when</code> that has the
               latest date. It is important, therefore, whenever you change a TAN file that has
               already been published to provide at least an edit stamp (<xref linkend="edit_stamp"
               />) in the part of the file you changed or in a <code>&lt;comment></code> or
                  <code>&lt;change></code>. In so doing, when anyone editing a TAN file dependent
               upon yours validates the file, they will get a warning that changes have been made.
               The user may then either continue to process the file (if the changes are minor,
               there may be no problem) or investigate the changes before deciding what to do. </para>
            <para>Because the entire IRI name is a single string, it is suitable for encoding
               formats outside of TAN (e.g., RDFa, JSON-LD, linked open data; see above, <xref
                  linkend="IRIs_and_linked_data"/>).</para>
            <para>The IRI name kept at <code>@id</code> is the only metadatum positioned outside the
                  <code>&lt;head></code> element. It is placed as rootward in the document as
               possible to emphasize that it is the name for the entire document tree, not a
               specific branch.</para>
            <para><code>@TAN-version</code> must be the digit <code>1</code>, indicating the major
               version, optionally followed by the minor version number. If the minor version is
               missing, the latest version is assumed. These version numbers must match the schemas
               invoked in the prolog or the file well be rendered invalid. For versions of schemas,
               see <xref linkend="schemas_and_validation"/>.</para>
            <para>The rootmost element takes only two children: <code>&lt;head></code> and
                  <code>&lt;body></code>, the latter containing data and the former, metadata (data
               about the data). The only exception to this rule are TAN-TEI files, which take three
               children: <code>&lt;teiHeader></code>, <code>&lt;head></code>, and
                  <code>&lt;text></code>. (See <xref linkend="class_1"/>.) Thus, most every TAN file
               generally looks something like this:</para>
            <para>
               <example>
                  <title>Common Structure of a TAN file </title>
                  <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;?xml-model href="http://textalign.net/release/1/dev/schemas/TAN-A.rnc" type="application/relax-ng-compact-syntax"?>
&lt;?xml-model href="http://textalign.net/release/1/dev/schemas/TAN-A.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
&lt;TAN-A-div xmlns="tag:textalign.net,2015:ns" TAN-version="1" id="tag:parkj@textalign.net,2015:example:tan-a-div1">
   &lt;head>
      ...........
   &lt;/head>
   &lt;body>
      ...........
   &lt;/body>
&lt;/TAN-A>               </programlisting>
               </example>
            </para>
         </section>
         <section xml:id="metadata_head">
            <title>Metadata (<code>&lt;head></code>)</title>
            <para>No matter how much one TAN format differs from another, the metadata are quite
               similar. Anyone getting a TAN file, no matter its class or type, is assumed to want
               to know, and therefore find easily and predictably, the following:<orderedlist>
                  <listitem>
                     <para>the name;</para>
                  </listitem>
                  <listitem>
                     <para>the version;</para>
                  </listitem>
                  <listitem>
                     <para>the sources;</para>
                  </listitem>
                  <listitem>
                     <para>other files that have an important relationship;</para>
                  </listitem>
                  <listitem>
                     <para>the most significant parts of the editorial history;</para>
                  </listitem>
                  <listitem>
                     <para>the linguistic or scholarly conventions that have been adopted in
                        creating the data;</para>
                  </listitem>
                  <listitem>
                     <para>the license, i.e., who holds what rights to the data, and what kind of
                        reuse is allowed.</para>
                  </listitem>
                  <listitem>
                     <para>the persons, organizations, or entities that helped create the data, and
                        the roles played by each.</para>
                  </listitem>
               </orderedlist></para>
            <para>To answer these questions completely, consistently, and predictably across all TAN
               formats, the <code>&lt;head></code>, a mandatory child of the rootmost element, takes
               a common pattern, thus allowing anyone (people or computers) to work easily and
               predictably across large numbers and types of TAN files. The TAN
                  <code>&lt;head></code>, intended to be concise and focused, compels you to provide
               metadata for the data that is governed by <code>&lt;body></code>, but it does not
               require metadata for the metadata. That is, your metadata should focus on the data
               itself and not other things. For example, <code>&lt;head></code> requires you name
               the people who helped create or edit the data, but you are not expected to give those
               person's birthdays, nationality, etc. You merely refer through <code>&lt;IRI></code>
               to other authoritative sources that can provide more information about that
               person.</para>
            <section xml:id="uri_name">
               <title>Core name, location metadata</title>
               <para>
                  <table frame="all">
                     <title>Synopsis of <code>&lt;name></code>, <code>&lt;desc></code>,
                           <code>&lt;master-location></code></title>
                     <tgroup cols="7">
                        <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                        <colspec colname="c3" colnum="2" colwidth="1*"/>
                        <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                        <colspec colname="c5" colnum="4" colwidth="1.53*"/>
                        <colspec colname="newCol7" colnum="5" colwidth="2.21*"/>
                        <colspec colname="newCol6" colnum="6" colwidth="2.55*"/>
                        <colspec colname="c6" colnum="7" colwidth="4.73*"/>
                        <thead>
                           <row>
                              <entry>name</entry>
                              <entry>req?</entry>
                              <entry>qty</entry>
                              <entry>parent</entry>
                              <entry>attributes</entry>
                              <entry>children</entry>
                              <entry>purpose</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry><code>&lt;name></code></entry>
                              <entry>yes</entry>
                              <entry>one or more</entry>
                              <entry><code>&lt;head></code></entry>
                              <entry><code>xml:lang</code>?</entry>
                              <entry>data (xsd:string)</entry>
                              <entry>Provide human-readable name of a TAN file</entry>
                           </row>
                           <row>
                              <entry><code>&lt;desc></code></entry>
                              <entry>no</entry>
                              <entry>one or more</entry>
                              <entry><code>&lt;head></code></entry>
                              <entry><code>xml:lang</code>?</entry>
                              <entry>data (xsd:string)</entry>
                              <entry>Provide human-readable description of a TAN file</entry>
                           </row>
                           <row>
                              <entry><code>&lt;master-location></code></entry>
                              <entry>yes</entry>
                              <entry>one or more</entry>
                              <entry><code>&lt;head></code></entry>
                              <entry>----</entry>
                              <entry>data (xsd:anyURI)</entry>
                              <entry>Provide location of where a master of a TAN file can be
                                 found</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table>
               </para>
               <para>As was mentioned above (see <xref linkend="structure"/>) the computer-readable
                  form of the name is kept at <code>@id</code> in the rootmost element. The
                  human-readable counterpart is one or more <code>&lt;name></code>s, the first child
                  of <code>&lt;head></code>. <code>&lt;name></code> can contain any string. Some
                  editors may wish to use the filename; others, a descriptive phrase. The decision
                  is left entirely to you. An <code>@xml:lang</code> may be used to hold the value
                  of the language of the content of <code>&lt;name></code>. Multiple
                     <code>&lt;name></code> elements are to be treated as synonyms.</para>
               <para>One or more optional <code>&lt;desc></code> elements may be provided, to
                  describe the TAN file more fully.</para>
               <para>One or more <code>&lt;master-location></code>s may be provided, to indicate
                  where master versions of the file is to be found. It takes as a value any URI, and
                  may be absolute (e.g., <code>http://...</code>) or relative. Any relative URI will
                  be resolved according to the parent directory of the current TAN document. If a
                  document in a <code>&lt;master-location></code> cannot be found, a warning will be
                  returned. All copies of a TAN file found through <code>&lt;master-location></code>
                  should have the same version; if they are not, a warning will be returned from the
                  validation process. </para>
               <para>When you use <code>&lt;master-location></code> you commit yourself to updating
                  the TAN file in those locations. Similarly, if you have completed work on a TAN
                  file, you must commit yourself to a <code>&lt;master-location></code>. If
                     <code>@in-progress</code> (see <xref linkend="in_progress"/>) is false and
                  there is no <code>&lt;master-location></code> the document will be reported as
                  invalid.</para>
               <example>
                  <title>Name metadata</title>
                  <programlisting>&lt;TAN-T xmlns="tag:textalign.net,2015:ns"
   id="tag:jan@example.com,1999-01-31:TAN-T001" TAN-version="1">
   &lt;head>
      &lt;name>Smith poem 1&lt;/name>
      &lt;desc xml:lang="eng">J. Smith's poem no. 1, TAN-compliant.&lt;/desc>
      &lt;master-location>smithpoem1.xml&lt;/location>
      ...........
   &lt;/head>
   ...........
&lt;/TAN-T></programlisting>
               </example>
            </section>
            <section xml:id="license">
               <title>Rights and Licenses</title>
               <table frame="all">
                  <title>Synopsis of <code>&lt;rights-excluding-sources></code></title>
                  <tgroup cols="7">
                     <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                     <colspec colname="c3" colnum="2" colwidth="1*"/>
                     <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                     <colspec colname="c5" colnum="4" colwidth="1.53*"/>
                     <colspec colname="newCol7" colnum="5" colwidth="2.21*"/>
                     <colspec colname="newCol6" colnum="6" colwidth="2.55*"/>
                     <colspec colname="c6" colnum="7" colwidth="4.73*"/>
                     <thead>
                        <row>
                           <entry>name</entry>
                           <entry>req?</entry>
                           <entry>qty</entry>
                           <entry>parent</entry>
                           <entry>attributes</entry>
                           <entry>children</entry>
                           <entry>purpose</entry>
                        </row>
                     </thead>
                     <tbody>
                        <row>
                           <entry><code>&lt;rights-excluding-sources></code></entry>
                           <entry>yes</entry>
                           <entry>one</entry>
                           <entry><code>&lt;head></code></entry>
                           <entry><xref linkend="edit_stamp"/>?, <code>@rights-holder</code></entry>
                           <entry><xref linkend="iri_and_name"/></entry>
                           <entry>declare intellectual property rights associated with data,
                              exclusive of the rights held over the sources</entry>
                        </row>
                     </tbody>
                  </tgroup>
               </table>
               <para>Under <code>&lt;rights-excluding-sources></code>, a mandatory child element of
                     <code>&lt;head></code>, you indicate the license under which the data is
                  released. The value of <code>@rights-holder</code> (required) points to one or
                  more <code>&lt;agent></code>s (see <xref linkend="agent"/>) who hold the rights
                  over the data, <emphasis role="italic">exclusive</emphasis> of any rights held
                  over the sources. This element contains the <xref linkend="iri_and_name"/>.</para>
               <para>To reduce confusion on the parts of users of your TAN data, you may not use
                  more than one license (that is, there must be one and only one instance of
                     <code>&lt;rights-excluding-sources></code>). If parts of your TAN data fall
                  under two or more licenses, you should (1) split the file (one for each license),
                  (2) find a license that sythesizes the desired licenses, or (3) release the entire
                  file under the most restrictive of the possible licenses.</para>
               <para>Diligently check to ensure that the license you have claimed respects the
                  rights of your sources' rightsholders. It is recommended that you license your
                  data under a license that is similar to or slightly more liberal than the one
                  under which your sources have been released.</para>
               <para>Whereas <code>&lt;rights-excluding-sources></code> is mandatory in every TAN
                  file, <code>&lt;rights-source-only></code> is not (see below). It is never allowed
                  in class 2 files, because the sources are always TAN files, and the rights
                  information can be drawn from those sources. For class 1 and class 3 files,
                  declaring the rightsholders of your source(s) may be more difficult, perhaps even
                  risky, and is therefore optional.</para>
               <para>As an editor, you are strongly encouraged in the <code>&lt;desc></code> element
                  of <code>&lt;rights-excluding-sources></code> to emphasize the distinction between
                  the rights you have over your data and the rights held by others over your source.
                  A statement something like this is recommended: <code>&lt;desc>The data in this
                     file, only insofar as it constitutes an independent work, is licensed exclusive
                     of any licenses held by parties over the source or sources listed
                     below.&lt;/desc></code></para>
               <note xml:id="license_discrepancies">
                  <title>License Discrepancies</title>
                  <para>If you find a discrepancy between the two licenses--that of a TAN file and
                     that of its sources--the more restrictive license should be respected. In using
                     a TAN file, it is your responsibility to investigate the entire chain of
                     rights. If a TAN user declares a very liberal, open license for the data, this
                     does not necessarily mean that the material upon which it depends is in the
                     public domain. The source may be under tightly regulated rights.</para>
               </note>
               <example>
                  <title>License metadata: data only</title>
                  <programlisting>      ...........
   &lt;rights-excluding-sources rights-holder="park">
      &lt;IRI>http://creativecommons.org/licenses/by/4.0/deed.en_US&lt;/IRI>
      &lt;name>Creative Commons Attribution 4.0 International License&lt;/name>
      &lt;desc>Exclusive of rights held and licenses offered by rightsholders of the source or
         sources listed below, this data file, only insofar as it constitutes an independent 
         work, is licensed under a Creative Commons Attribution 4.0 International License.&lt;/desc>
   &lt;/rights-excluding-sources>
      ...........</programlisting>
               </example>
            </section>
            <section xml:id="source_and_see-also">
               <title>Sources and related files</title>
               <para><table frame="all">
                     <title>Synopsis of <code>&lt;source></code>,
                           <code>&lt;rights-source-only></code>, <code>&lt;see-also></code>,
                           <code>&lt;relationship></code></title>
                     <tgroup cols="7">
                        <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                        <colspec colname="c3" colnum="2" colwidth="1*"/>
                        <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                        <colspec colname="c5" colnum="4" colwidth="2.4*"/>
                        <colspec colname="newCol7" colnum="5" colwidth="2.15*"/>
                        <colspec colname="newCol6" colnum="6" colwidth="2.7*"/>
                        <colspec colname="c6" colnum="7" colwidth="4.21*"/>
                        <thead>
                           <row>
                              <entry>name</entry>
                              <entry>req?</entry>
                              <entry>qty</entry>
                              <entry>parent</entry>
                              <entry>attributes</entry>
                              <entry>children</entry>
                              <entry>purpose</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry><code>&lt;source></code></entry>
                              <entry>yes</entry>
                              <entry>varies*</entry>
                              <entry><code>&lt;head></code></entry>
                              <entry><xref linkend="edit_stamp"/>?, <code>@xml:id</code>?</entry>
                              <entry><xref linkend="iri_and_name"/>, <xref
                                    linkend="digital_entity_metadata"/>?**,
                                    <code>&lt;rights-source-only></code>*</entry>
                              <entry>state name of source(s) upon which the data depends</entry>
                           </row>
                           <row>
                              <entry><code>&lt;rights-source-only></code></entry>
                              <entry>no</entry>
                              <entry>one</entry>
                              <entry><code>&lt;source></code></entry>
                              <entry><xref linkend="edit_stamp"/>?, <code>@src</code>?,
                                    <code>@rights-holder</code>?</entry>
                              <entry><xref linkend="iri_and_name"/></entry>
                              <entry>declare intellectual property rights over a source</entry>
                           </row>
                           <row>
                              <entry><code>&lt;see-also></code></entry>
                              <entry>no</entry>
                              <entry>one or more</entry>
                              <entry><code>&lt;head></code></entry>
                              <entry><xref linkend="edit_stamp"/>?</entry>
                              <entry><xref linkend="iri_and_name"/>, <xref
                                    linkend="digital_entity_metadata"/>?,
                                 <code>&lt;type></code></entry>
                              <entry>identify digital file that relates somehow to the current
                                 file</entry>
                           </row>
                           <row>
                              <entry><code>&lt;relationship></code></entry>
                              <entry>yes</entry>
                              <entry>one</entry>
                              <entry><code>&lt;auxiliary></code></entry>
                              <entry><xref linkend="edit_stamp"/>?</entry>
                              <entry>keyword: <code>old version</code>, <code>new version</code>,
                                    <code>parent edition</code>, <code>child edition</code>,
                                    <code>ancestor edition</code>, <code>descendant edition</code>,
                                    <code>cousin edition</code>, <code>alternatively divided
                                    edition</code>, <code>alternatively normalized edition</code>,
                                    <code>dependent</code>, <code>auxiliary</code> or <xref
                                    linkend="iri_and_name"/>
                              </entry>
                              <entry>indicate what relationship the referred file holds to the
                                 context file</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table><note>
                     <para>* <code>&lt;source></code> quantity is either exactly one (TAN-T,
                        TAN-TEI, TAN-LM), exactly two (TAN-A-tok), two or more (TAN-A-div), or one
                        or more (TAN-R-mor).</para>
                     <para>** Digital Entity Metadata is required of all class 2 files, and of all
                        TAN files that depend upon a digital source.</para>
                  </note>The mandatory <code>&lt;source></code> names the item or items upon which
                  the TAN data depends. This element contains the pattern IRI + name (see <xref
                     linkend="iri_and_name"/>). It allows <code>@xml:id</code> only for TAN formats
                  that permit more than one <code>&lt;source></code>.</para>
               <para>Transcription files (TAN-T[EI]) will have as their source some digital file or
                  text-bearing material object. It is wise to find a URN that other people might use
                  as well, for example a minted URL that reliably names the object (see examples
                  below). By supplying <code>&lt;IRI></code> with a name in the form of an
                     <code>http</code> URL provided by a library catalogue, you provide a way for
                  users to retrieve extensive, structured bibliographical information. You then save
                  yourself the hassle of writing a detailed bibliographical description and your
                  users the hassle of parsing and importing it into their reference management
                  system. If a URL cannot be found for <code>&lt;IRI></code> (perhaps the
                  text-bearing object is a papyrus or a T-shirt), you may simply coin a tag URN or a
                  UUID. Alternatively, if you find another TAN file that uses the same source, it
                  would be a good idea to adopt that name. (You don't need to ask permission to use
                  names minted in other TAN files; all URNs are in the public domain.)</para>
               <para>Class 2 files (lexico-morphology and alignment files) will always have as their
                  source one or more class 1 files (transcriptions). In those cases the
                     <code>&lt;IRI></code> element must give each TAN-T file's IRI name (the value
                  of <code>TAN-T/@id</code>; see <xref linkend="uri_name"/> above). The Digital
                  Entity Metadata pattern is mandatory because the sources are necessarily
                  digital.</para>
               <para>Class 3 TAN files (i.e., TAN-R-mor, TAN-R-tok) have more complex
                     <code>&lt;source></code> needs. These are discussed in <xref linkend="class_3"
                  />.</para>
               <para>If you can determine with authority the rights of your sources (see below), you
                  may use <code>&lt;rights-source-only></code>s, which take the IRI + name pattern
                  plus an optional <code>@rights-holder</code> to point to the
                     <code>&lt;agent></code>s that hold the rights over the source. This element in
                  class 3 files take an optional <code>@src</code> attribute, pointing by means of
                  id references of one or more <code>&lt;source></code>s to which the statement
                  applies. There may not be more <code>&lt;rights-source-only></code>s than
                     <code>&lt;source></code>s.</para>
               <para>
                  <caution xml:id="rights_sources_only_caution">
                     <title>Naming Licenses and Rights Holders for Sources</title>
                     <para>It is recommended that you not declare who own what rights over your
                        source unless you yourself are the rightsholder or unless you can make this
                        assertion with certainty. Copyright laws differ from one country to another,
                        and they have changed over time. A source may be protected by copyright in
                        one place and simultaneously be in the public domain in another. (For
                        example, neither the U.S. nor Canada have explicit provisions about the
                        copyright status of modern editions of ancient texts; Germany, however,
                        explicitly allows forty years of copyright protection before the text goes
                        into the public domain.) Some copyright statements in books are false, or
                        cannot be proven. Some persons or entities who claim rights over a source
                        may have no legal basis for the claim, at least in some jurisdictions.
                        Furthermore, if you mischaracterize the rights that are held over a source,
                        you may be held liable by a putative rights holder. It is safer to use the
                           <code>&lt;IRI></code> of <code>&lt;source></code> (described below) to
                        point the user to authorities that have greater authority and specificity
                        about who owns what rights. </para>
                  </caution>
               </para>
               <para>A missing <code>@rights-holder</code> implies only only silence, not that the
                  rightsholder is unknown or nonexistent. If you know that a source is in the public
                  domain, it is recommended that you use the IRI
                     <code>http://creativecommons.org/publicdomain/mark/1.0/</code> and omit
                     <code>@rights-holder</code>. If you know the rights holder of a source has
                  waived all rights and placed the work in the public domain, you may use the IRI
                     <code>https://creativecommons.org/publicdomain/zero/1.0/</code>.</para>
               <para><note xml:id="copyright_vs_contract">
                     <title>Copyright Law versus Contract Law</title>
                     <para>Some third-party services, such as the Thesaurus Linguae Graecae for
                        Greek texts, require users to agree not to copy and reuse the texts in
                        service's databases. Such agreements fall under the area of contract law and
                        not copyright law. That is, these third parties are most often not the
                        putative rights holder for the texts they store, therefore, they should
                        normally not be credited in any <code>&lt;rights-source-only></code>. See
                        also <xref linkend="sources_or_not"/></para>
                  </note>The optional <code>&lt;see-also></code> is reserved for cases where the
                  editing of a TAN data file depends upon other textual objects you wish to credit
                  or refer to. Any number of these can be provided. They take one
                     <code>&lt;relationship></code> in conjunction with an IRI + name
                  pattern.</para>
               <para><code>&lt;relationship></code> takes either a reserved keyword or the IRI +
                  name pattern, to define a relationship not covered by the keywords. The reserved
                  keywords are as follows:</para>
               <para>
                  <table frame="all">
                     <title><code>&lt;relationship></code> reserved keywords</title>
                     <tgroup cols="3">
                        <colspec colname="c1" colnum="1" colwidth="1*"/>
                        <colspec colname="c2" colnum="2" colwidth="3.44*"/>
                        <colspec colname="c3" colnum="3" colwidth="2.22*"/>
                        <thead>
                           <row>
                              <entry>keyword</entry>
                              <entry>equivalent IRI</entry>
                              <entry>description</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry><code>old version</code></entry>
                              <entry><code>tag:textalign.net,2015:relationship:old-version</code></entry>
                              <entry>TAN file superceded by the present file.</entry>
                           </row>
                           <row>
                              <entry><code>new version</code></entry>
                              <entry><code>tag:textalign.net,2015:relationship:new-version</code></entry>
                              <entry>TAN file that supercedes the present file.</entry>
                           </row>
                           <row>
                              <entry><code>parent edition</code></entry>
                              <entry><code>tag:textalign.net,2015:relationship:parent-edition</code></entry>
                              <entry/>
                           </row>
                           <row>
                              <entry><code>child edition</code></entry>
                              <entry><code>tag:textalign.net,2015:relationship:child-edition</code></entry>
                              <entry/>
                           </row>
                           <row>
                              <entry><code>ancestor edition</code></entry>
                              <entry><code>tag:textalign.net,2015:relationship:ancestor-edition</code></entry>
                              <entry/>
                           </row>
                           <row>
                              <entry><code>descendant edition</code></entry>
                              <entry><code>tag:textalign.net,2015:relationship:descendant-edition</code></entry>
                              <entry/>
                           </row>
                           <row>
                              <entry><code>cousin edition</code></entry>
                              <entry><code>tag:textalign.net,2015:relationship:cousin-edition</code></entry>
                              <entry/>
                           </row>
                           <row>
                              <entry><code>alternatively divided edition</code></entry>
                              <entry><code>tag:textalign.net,2015:relationship:alternatively-divided-edition</code></entry>
                              <entry/>
                           </row>
                           <row>
                              <entry><code>alternatively normalized edition</code></entry>
                              <entry><code>tag:textalign.net,2015:relationship:alternatively-normalized-edition</code></entry>
                              <entry/>
                           </row>
                           <row>
                              <entry><code>dependent</code></entry>
                              <entry><code>tag:textalign.net,2015:relationship:dependent</code></entry>
                              <entry>TAN file that uses the present file as a source.</entry>
                           </row>
                           <row>
                              <entry><code>auxiliary</code></entry>
                              <entry><code>tag:textalign.net,2015:relationship:auxiliary</code></entry>
                              <entry>Digital or nondigital entity that was helpful in creating or
                                 editing the present file.</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table>
               </para>
               <para>Behind these keywords lies a sharp distinction between versions and editions of
                  TAN files. </para>
               <para>One TAN file is a <emphasis>version</emphasis> of another if it derives from it
                  (either directly or through a chain of versions) and if the later version
                  supersedes the older one. Versions of a TAN file stand on a linear path. They
                  share the same TAN id, and if they do not share the same <code>&lt;source></code>
                  and <code>&lt;declarations></code> content, the changes are minor or are intended
                  to correct errors. Versions are distinguished exclusively by the latest
                  ISO-compliant date.</para>
               <para>Two TAN files are different <emphasis>editions</emphasis> if they are
                  genetically related to each other, but neither one supersedes the other or renders
                  the other obsolete. Editions may share a common ancestry, but they stand in
                  different branches of that ancestry. Editions may not have the same TAN id. They
                  normally differ in the content of <code>&lt;source></code> or
                     <code>&lt;declarations></code> or both. Editions that stand closely in
                  parallel, such as alternatively divided editions, can serve special roles (see
                  below).</para>
               <para><code>old version</code>: Points to a TAN file superseded by the present one.
                  The alterations are considered not to warrant a new <code>@id</code> in the
                  rootmost element.</para>
               <para><code>new version</code>: Points to a TAN file that supersedes the present one.
                  The alterations have not been significant enough to warrant a new <code>@id</code>
                  in the rootmost element. This is useful for officially deprecating a TAN file
                  without deleting it. When validating a TAN file that uses as a source another TAN
                  file with a <code>&lt;relationship></code> value of <code>new edition</code>, a
                  warning will be returned.</para>
               <para><code>(parent|child|ancestor|descedant|cousin) edition</code>: Points to a TAN
                  file that shares a common editorial history with the present one, and treats the
                  same basic material but with a different approach, normally marked by different
                     <code>&lt;source></code>s or <code>&lt;declarations></code>. Neither inherently
                  supersedes the other. Although these may be applied to any class of TAN file,
                  class 1 files have their own specific nomenclature that may be more suitable (see
                  below).</para>
               <para><code>alternatively divided edition</code>: Used by a class 1 file to point to
                  another class 1 file that contains the identical transcription for the same
                  version of the same work on the same textual object, but divides that
                  transcription into a different reference system. If this value is invoked, the
                  concatenated text content of <code>&lt;body></code> must be identical, after space
                  normalization. This <code>&lt;relationship></code> is valuable as a concordance
                  between alternative reference systems.</para>
               <para><code>alternatively normalized edition</code>: Used by a class 1 file to point
                  to another class 1 file that treats the same version of the same work on the same
                  textual object, but normalizes the transcription differently. This
                     <code>&lt;relationship></code> may be valuable in cases where normalization
                  standards for a particular language are not settled.</para>
               <para><code>dependent</code>: Points to a TAN file that uses the current file as a
                  source.</para>
               <para><code>auxiliary</code>: Points to a textual item, whether physical or digital,
                  that assisted in creating or editing the current file. This may be useful for
                  cases where you begin with an item as a source, but in the course of editing you
                  find a better source, but still want to credit the intermediary item. </para>
               <para>If these keywords are insufficient, you may define your own relationship by
                  specifing it through the IRI + name pattern.</para>
               <para>
                  <note xml:id="sources_or_not">
                     <title>Digital Transcriptions: Credit as Source or Not?</title>
                     <para>A third-party website or database may have a digital form of a
                        transcription that you wish to use as the basis for a TAN-T or TAN-TEI file.
                        These digital surrogates are versions in their own right. They almost always
                        depart from their original source (print or digital) even if in small ways.
                        Should they be listed under <code>&lt;source></code> or
                           <code>&lt;see-also></code>?</para>
                     <para>If you are interested in and focused on the digital transcription itself,
                        then that should be credited and treated as a <code>&lt;source></code>. But
                        many digital transcriptions are simply derivative copies or versions of
                        other sources, whether print or digital. It is almost always better to go up
                        the chain of dependence until you find the earliest version that still meets
                        your needs. Make that your <code>&lt;source></code>. You can then make the
                        third-party digital transcription a <code>&lt;see-also></code>. In crediting
                        the third party, you do not assign them any rights. But beware, lest any
                        agreement you have made puts you in violation of contract law. See above,
                           <xref linkend="copyright_vs_contract"/>.</para>
                  </note>
               </para>
               <para>
                  <example>
                     <title><code>&lt;source></code></title>
                     <programlisting>      ...........
   &lt;source>
      &lt;IRI>http://www.worldcat.org/oclc/14388933&lt;/IRI>
      &lt;name>Wang, Fuzhi, 1619-1692. Zhonghua shu ju : Xin hua
              shu dian Beijing fa xing suo fa xing, Di 1 ban. 1962.&lt;/name>
   &lt;/source>
      ...........</programlisting>
                  </example>
               </para>
               <example>
                  <title><code>&lt;source></code>, <code>&lt;rights-source-only></code>, and
                        <code>&lt;see-also></code></title>
                  <programlisting>      ...........
   &lt;source>
      &lt;IRI>http://lccn.loc.gov/72309768&lt;/IRI>
      &lt;name xml:lang="fra">Traitè pratique, ou, Le moine. Evagre le Pontique. 
         Introduction par Antoine Guillaumont et Claire Guillaumont. Paris, 
         Éditions du Cerf, 1971.&lt;/name>
      &lt;rights-source-only>
         &lt;IRI>urn:uuid:d56dd4a9-5487-4131-ac61-f43e2b11a17a&lt;/IRI>
         &lt;name>Exclusive rights&lt;/name>
         &lt;desc>Rights for the source are held by Sources chrétiennes, Les Éditions du Cerf 24, rue
            des Tanneries 75013 Paris France www.editionsducerf.fr&lt;/desc>
      &lt;/rights-source-only>
   &lt;/source>
   &lt;see-also>
      &lt;relationship>auxiliary&lt;/relationship>
      &lt;IRI>tag:parkj@textalign.net,2014:Dysinger_website_Praktikos#2014-02-02&lt;/IRI>
      &lt;name>Dysinger's handtyped Greek, accessed 2014-02-02&lt;/name>
      &lt;type>
         &lt;IRI>tag:textalign.net,2015:auxiliary:basetext&lt;/IRI>
         &lt;name>Initial, base digital text used as the starting point for an 
         accurate rendition of the source&lt;/name>
      &lt;/type>
   &lt;/auxiliary>
      ...........         </programlisting>
               </example>
            </section>
            <section xml:id="declarations">
               <title>Declarations</title>
               <para><table frame="all">
                     <title>Synopsis of <code>&lt;declarations></code></title>
                     <tgroup cols="7">
                        <colspec colname="c1" colnum="1" colwidth="2.9*"/>
                        <colspec colname="c3" colnum="2" colwidth="1*"/>
                        <colspec colname="c4" colnum="3" colwidth="1.03*"/>
                        <colspec colname="c5" colnum="4" colwidth="3.29*"/>
                        <colspec colname="newCol7" colnum="5" colwidth="1.87*"/>
                        <colspec colname="newCol6" colnum="6" colwidth="3.84*"/>
                        <colspec colname="c6" colnum="7" colwidth="3.99*"/>
                        <thead>
                           <row>
                              <entry>name</entry>
                              <entry>req?</entry>
                              <entry>qty</entry>
                              <entry>parent</entry>
                              <entry>attributes</entry>
                              <entry>children</entry>
                              <entry>purpose</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry><code>&lt;declarations></code></entry>
                              <entry>yes</entry>
                              <entry>one</entry>
                              <entry><code>&lt;head></code></entry>
                              <entry>----</entry>
                              <entry>varies</entry>
                              <entry>collect declarations of scholarly assumptions and decisions
                                 made in preparing data</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table>Each core TAN data file has exactly one <code>&lt;declaration></code>
                  element. The structure and content of this element differs from one type of TAN
                  file to the next, so detailed discussion is reserved for later chapters.</para>
            </section>
            <section xml:id="agent">
               <title>Agents</title>
               <table frame="all">
                  <title>Synopsis of <code>&lt;agent></code></title>
                  <tgroup cols="7">
                     <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                     <colspec colname="c3" colnum="2" colwidth="1*"/>
                     <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                     <colspec colname="c5" colnum="4" colwidth="2.4*"/>
                     <colspec colname="newCol7" colnum="5" colwidth="2.15*"/>
                     <colspec colname="newCol6" colnum="6" colwidth="2.7*"/>
                     <colspec colname="c6" colnum="7" colwidth="4.21*"/>
                     <thead>
                        <row>
                           <entry>name</entry>
                           <entry>req?</entry>
                           <entry>qty</entry>
                           <entry>parent</entry>
                           <entry>attributes</entry>
                           <entry>children</entry>
                           <entry>purpose</entry>
                        </row>
                     </thead>
                     <tbody>
                        <row>
                           <entry><code>&lt;agent></code></entry>
                           <entry>yes</entry>
                           <entry>one or more</entry>
                           <entry><code>&lt;head></code></entry>
                           <entry><code>@roles</code>?, <code>@xml:id</code></entry>
                           <entry><xref linkend="iri_and_name"/></entry>
                           <entry>identifies persons, organizations, or artificial intelligences
                              used to prepare the data</entry>
                        </row>
                     </tbody>
                  </tgroup>
               </table>
               <para>One or more <code>&lt;agent></code> elements must be included as children of
                     <code>&lt;head></code>, to describe people, organizations, or other entities
                  that created or edited the data, in whole or part, directly or indirectly. At
                  least one <code>&lt;agent></code> must have an <code>&lt;IRI></code> that is a tag
                  URN whose namespace matches that of the IRI name. The first
                     <code>&lt;agent></code> with an <code>&lt;IRI></code> that has a substring
                  identical to the namespace of the IRI name is, by default, taken to describe the
                  person or organization that is authorized the creation of the TAN file and is
                  ultimately responsible for it. If no such substring match can be made, then the
                  file is invalid. </para>
               <para><code>&lt;agent></code> may describe any human or organization, or an entity
                  that simulates a human or organization (i.e. <code>&lt;agent></code> may name an
                  artificial intelligence). <code>&lt;agent></code> takes the <xref
                     linkend="iri_and_name"/>. </para>
               <para>Many people involved with a project will not have a name in the form of a URL;
                  in those cases, a minted UUID or tag URN will suffice as the value of
                     <code>&lt;IRI></code>.</para>
               <para>Each <code>&lt;agent></code> element must take an <code>@xml:id</code> whose
                  value is unique to the document. This value may be used throughout the TAN file to
                  assign responsibility for a role, comment, or change to a particular person or
                  organization.</para>
               <para>Each <code>&lt;agent></code> element may include <code>@roles</code>, which
                  carries a space-delimited list of identifying references to
                  <code>&lt;role></code>s (see <xref linkend="role"/>). If you need to provide a
                  more complex account of how various agents helped create the file, you should
                  consider ignoring this attribute and using <code>&lt;agentrole></code> instead
                  (see <xref linkend="agentrole"/>).</para>
               <example>
                  <title><code>&lt;agent></code></title>
                  <programlisting>      ...........
   &lt;agent xml:id="kalvesmaki" roles="publisher editor">
      &lt;IRI>http://viaf.org/viaf/299582703&lt;/IRI>
      &lt;name xml:lang="eng">Joel Kalvesmaki&lt;/name>
   &lt;/agent>
   &lt;agent xml:id="example" roles="editor">
      &lt;IRI>urn:uuid:64befba0-a0a6-11e3-8975-0002a5d5c51b&lt;/IRI>
      &lt;IRI>http://example.org/24929&lt;/IRI>
      &lt;name xml:lang="eng">Bill Contributor&lt;/name>
   &lt;/agent>
   &lt;agent xml:id="example2" roles="caterer">
      &lt;IRI>tag:jan@example.org,2014:my-cook&lt;/IRI>
      &lt;name xml:lang="eng">Robin the Chef, who fed the caterer and editor.&lt;/name>
   &lt;/agent>
      ...........               </programlisting>
               </example>
            </section>
            <section xml:id="role">
               <title>Roles</title>
               <table frame="all">
                  <title>Synopsis of <code>&lt;role></code></title>
                  <tgroup cols="7">
                     <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                     <colspec colname="c3" colnum="2" colwidth="1*"/>
                     <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                     <colspec colname="c5" colnum="4" colwidth="2.4*"/>
                     <colspec colname="newCol7" colnum="5" colwidth="2.15*"/>
                     <colspec colname="newCol6" colnum="6" colwidth="2.7*"/>
                     <colspec colname="c6" colnum="7" colwidth="4.21*"/>
                     <thead>
                        <row>
                           <entry>name</entry>
                           <entry>req?</entry>
                           <entry>qty</entry>
                           <entry>parent</entry>
                           <entry>attributes</entry>
                           <entry>children</entry>
                           <entry>purpose</entry>
                        </row>
                     </thead>
                     <tbody>
                        <row>
                           <entry><code>&lt;role></code></entry>
                           <entry>yes</entry>
                           <entry>one or more</entry>
                           <entry><code>&lt;head></code></entry>
                           <entry><code>@xml:id</code></entry>
                           <entry><xref linkend="iri_and_name"/></entry>
                           <entry>identifies responsibilities or activities assumed in preparing the
                              data</entry>
                        </row>
                     </tbody>
                  </tgroup>
               </table>
               <para>One or more <code>&lt;role></code>s must be included as children of
                     <code>&lt;head></code>, identifying tasks and responsibilities of agents
                  involved in creating and editing the data. A role may be any activity, e.g.,
                  editor, funder, supervisor, data-processor, peer reviewer, patron. These roles may
                  be chosen however you see fit, and are declared through the <xref
                     linkend="iri_and_name"/>.</para>
               <para>Each <code>&lt;role></code> must have an <code>@xml:id</code> with an value
                  unique to the document to be used as cross-references in <code>&lt;agent></code>
                  or <code>&lt;agentrole></code> (see <xref linkend="agent"/> or <xref
                     linkend="agentrole"/>). </para>
               <para>Roles will be defined quite differently from one project or culture to another.
                  People can reasonably disagree on terminology or definition. You should put in
                     <code>&lt;IRI></code> values that you believe define those roles with the level
                  of precision or vagueness you think most appropriate. If you have a very special
                  definition of a job, you may wish to coin your own IRI and provide an exact
                  definition in <code>&lt;desc></code>. Or if you have chosen a URL for an IRI, you
                  may wish to define it more precisely in a Linked Data approach. To draw from
                  well-established vocabularies, see <link xlink:href="iris.xml"/>.</para>
               <para>Note that it is not necessary to declare a role of rights holder. This
                  relationship is already built into the <code>@rights-holder</code> (must point to
                  one or more <code>&lt;agent></code>s) in
                     <code>&lt;rights-excluding-sources></code> and
                     <code>&lt;rights-source-only></code>. See <xref linkend="license"/>.</para>
               <example>
                  <title><code>&lt;role></code></title>
                  <programlisting>      ...........
   &lt;role xml:id="editor">
      &lt;IRI>http://schema.org/editor&lt;/IRI>
      &lt;name xml:lang="eng">Editor&lt;/name>
   &lt;/role>
   &lt;role xml:id="publisher">
      &lt;IRI>http://schema.org/publisher&lt;/IRI>
      &lt;name xml:lang="eng">Publisher&lt;/name>
   &lt;/role>
   &lt;role xml:id="caterer">
      &lt;IRI>urn:uuid:0cab862e-986f-4cd7-ac12-963cd5359c1b&lt;/IRI>
      &lt;name xml:lang="eng">Caterer (preparer and donator of food)&lt;/name>
   &lt;/role>
      ...........               </programlisting>
               </example>
            </section>
            <section xml:id="agentrole">
               <title>Agent roles</title>
               <para><table frame="all">
                     <title>Synopsis of <code>&lt;agentrole></code></title>
                     <tgroup cols="7">
                        <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                        <colspec colname="c3" colnum="2" colwidth="1*"/>
                        <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                        <colspec colname="c5" colnum="4" colwidth="1.58*"/>
                        <colspec colname="newCol7" colnum="5" colwidth="3.92*"/>
                        <colspec colname="newCol6" colnum="6" colwidth="1.72*"/>
                        <colspec colname="c6" colnum="7" colwidth="4.21*"/>
                        <thead>
                           <row>
                              <entry>name</entry>
                              <entry>req?</entry>
                              <entry>qty</entry>
                              <entry>parent</entry>
                              <entry>attributes</entry>
                              <entry>children</entry>
                              <entry>purpose</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry><code>&lt;agentrole></code></entry>
                              <entry>no</entry>
                              <entry>one or more</entry>
                              <entry><code>&lt;head></code></entry>
                              <entry><code>@when-from</code>, <code>@when-to</code>,
                                    <code>@agents</code>, <code>@roles</code>, <xref
                                    linkend="edit_stamp"/>?</entry>
                              <entry>----</entry>
                              <entry>specifies a time period when one or more agents held one or
                                 more roles</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table>To document a complex history of a TAN file, <code>&lt;head></code> may
                  have one or more <code>&lt;agentrole></code> elements.
                  <code>&lt;agentrole></code>, an empty element, takes four required attributes:
                     <code>@when-from</code>, <code>@when-to</code>, <code>@agents</code>, and
                     <code>@roles</code>. The last two attributes carry identifying references to
                  the appropriate <code>&lt;agent></code> and <code>&lt;role></code> elements,
                  respectively (multiple values should be space delimited). The other two attributes
                  contain ISO-compliant time values indicating when the agent(s) had that role(s). </para>
               <para>Keep in mind that credit (or blame) for specific parts of the file will be
                  based upon how you combine <code>&lt;role></code> and <code>&lt;agent></code>
                  elements, so be certain that persons and their responsibilities are accurately
                  described. Be sure to name and credit the person or organization that owns the
                  namespace part of the IRI name (see above). Be sure to credit everyone involved in
                  creating and editing your data.</para>
               <example>
                  <title><code>&lt;agentrole></code></title>
                  <programlisting>      ...........
   &lt;agentrole when-from="2013-12-31" when-to="2014-01-21" 
      who="johnson smith vanBuren" roles="editor"/>
      ...........               </programlisting>
               </example>
            </section>
            <section xml:id="change">
               <title>Changes</title>
               <para><table frame="all">
                     <title>Synopsis of <code>&lt;change></code></title>
                     <tgroup cols="7">
                        <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                        <colspec colname="c3" colnum="2" colwidth="1*"/>
                        <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                        <colspec colname="c5" colnum="4" colwidth="1.58*"/>
                        <colspec colname="newCol7" colnum="5" colwidth="3.92*"/>
                        <colspec colname="newCol6" colnum="6" colwidth="1.72*"/>
                        <colspec colname="c6" colnum="7" colwidth="4.21*"/>
                        <thead>
                           <row>
                              <entry>name</entry>
                              <entry>req?</entry>
                              <entry>qty</entry>
                              <entry>parent</entry>
                              <entry>attributes</entry>
                              <entry>children</entry>
                              <entry>purpose</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry><code>&lt;change></code></entry>
                              <entry>yes</entry>
                              <entry>one or more</entry>
                              <entry><code>&lt;head></code></entry>
                              <entry><code>@who</code>, <code>@when</code>, <xref
                                    linkend="edit_stamp"/></entry>
                              <entry>data (xsd:string)</entry>
                              <entry>specifies a change made to a TAN file</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table>The element <code>&lt;head></code> must have one or more
                     <code>&lt;change></code> children. Collectively, <code>&lt;change></code>
                  elements form the changelog, the revision history of the document. The content of
                  each <code>&lt;change></code> element is expected to be human-readable only. Each
                  change element must have <code>@when</code> and <code>@who</code> values
                  documenting the time the change was posted and the <code>&lt;agent></code>s that
                  made the change (multiple values should be space delimited). <code>@when</code>
                  must point to a time or a date + time (see <xref linkend="date_and_datetime"/>)
                  and <code>@who</code> must refer to an <code>&lt;agent></code> (multiple values
                  should be space delimited). An edit stamp may be provided to specify who recorded
                  the change.</para>
               <para>It is up to you to decide how many <code>&lt;change></code>s you should record
                  and collect. Ideally, <code>&lt;change></code>s documenting every published
                  version should be retained.</para>
               <para><code>&lt;change></code> elements may appear in any order, but it is good
                  practice to put the most recent at the top.</para>
               <example>
                  <title><code>&lt;change></code></title>
                  <programlisting>      ...........
   &lt;change when="2014-02-07" who="park">Corrected word in p1s1.&lt;/change>
   &lt;change when="2014-02-07" who="cheh">Logged changes today on 
      behalf of all agents.&lt;/change>
   &lt;change when="2014-02-02" who="park">Eliminated line breaks, hyphenations.&lt;/change>
   &lt;change when="2014-01-24" who="park">Began new file, based upon predecessor model,
      urn:uuid:85c5a1cc-51a1-11e3-822c-ce3f5508acd9::2014-01-16 &lt;/change>
      ...........               </programlisting>
               </example>
            </section>
            <section xml:id="comment">
               <title>Comments</title>
               <para><table frame="all">
                     <title>Synopsis of <code>&lt;comment></code></title>
                     <tgroup cols="7">
                        <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                        <colspec colname="c3" colnum="2" colwidth="1*"/>
                        <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                        <colspec colname="c5" colnum="4" colwidth="1.58*"/>
                        <colspec colname="newCol7" colnum="5" colwidth="3.92*"/>
                        <colspec colname="newCol6" colnum="6" colwidth="1.72*"/>
                        <colspec colname="c6" colnum="7" colwidth="4.21*"/>
                        <thead>
                           <row>
                              <entry>name</entry>
                              <entry>req?</entry>
                              <entry>qty</entry>
                              <entry>parent</entry>
                              <entry>attributes</entry>
                              <entry>children</entry>
                              <entry>purpose</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry><code>&lt;comment></code></entry>
                              <entry>no</entry>
                              <entry>one or more</entry>
                              <entry>varies</entry>
                              <entry><code>@who</code>, <code>@when</code></entry>
                              <entry>data (xsd:string)</entry>
                              <entry>specify any comment</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table>Although discussed here as the last child of <code>&lt;head></code>,
                     <code>&lt;comment></code>s may placed anywhere in a TAN document except for the
                     <code>&lt;body></code> of class 1 files. Each <code>&lt;comment></code> must
                  have <code>@when</code> and <code>@who</code> values, documenting the time the
                  comment was made and the <code>&lt;agent></code>s that made it. <code>@when</code>
                  is part of the calculus to determine the version of a particular TAN file. See
                     <xref linkend="edit_stamp"/>.</para>
               <example>
                  <title><code>&lt;comment></code></title>
                  <programlisting>      ...........
   &lt;comment when="2014-02-02" who="example">This text still needs to be 
      proofread carefully!&lt;/comment>
   &lt;comment when="2014-01-24" who="park">This document was prepared 
      as a sample text for the Text Alignment Network (TAN-T).&lt;/comment>
      ...........               </programlisting>
               </example>
            </section>
         </section>
         <section xml:id="body">
            <title>Data (<code>&lt;body></code>)</title>
            <para>Regardless of class, each TAN format is devoted to a particular type of textual
               information, and therefore requires its own structure. A transcription, for example,
               will be structured quite unlike a set of lexico-morphology data. Thus,
                  <code>/*/body</code>, unlike <code>/*/head</code>, for the most part differs
               widely from one format to another, and is discussed in specific chapters. But some
               common features are documented here.</para>
            <section xml:id="in_progress">
               <title>@in-progress</title>
               <para>In every TAN file, <code>&lt;body></code> takes an optional
                     <code>@in-progress</code>. If missing, this value is assumed to be true. That
                  is, the TAN file is a work in progress. When you finish any TAN file, be certain
                  to explicitly declare <code>in-progress="false"</code> before publishing it. You
                  must also be sure to include at least one <code>&lt;master-location></code> under
                     <code>&lt;head></code> indicating where master copies of the TAN file are
                  kept.</para>
               <para>Any TAN file marked implicitly or explicitly as being in progress means only
                  that the editor either has not yet finished supplying the data or reserves the
                  right to make major changes.</para>
               <para>
                  <caution>
                     <para>If you find a TAN file that is marked as not being in progress, this is
                        not to suggest that the file is error free. Any editor of a TAN file
                        reserves the right to correct typographical errors or mistakes.</para>
                  </caution>
               </para>
            </section>
         </section>
      </chapter>
      <chapter xml:id="class_1">
         <title>Class 1 TAN Files, Representations of Textual Objects</title>
         <para>Files in class 1 formats are segmented representations of textual objects. This class
            consists solely of transcriptions, the foundation of any TAN-compliant project. No class
            2 files (e.g., alignment, morphology) can be created without class 1 files. </para>
         <para>Transcriptions come in two different formats, identified by the rootmost element.
               <code>&lt;TAN-T></code> is a simple, generic format, as close as one can get to plain
            text. <code>&lt;TEI></code> (also referred to in this manual as TAN-TEI), on the other
            hand, is highly expressive. Because the two types function almost identically, the
            generic format is first presented in full, and is followed by a second part devoted to
            special features necessary for TEI.</para>
         <para>The different encoding formats are illustrated throughout this and the next two
            chapters with two examples, a simple one, <emphasis role="italic">Ring a Ring o'
               Roses</emphasis> (see <xref linkend="gentle_guide"/>), and a more complicated one,
            the <emphasis>Praktikos</emphasis> by Evagrius of Pontus. </para>
         <para>Where necessary, supplements from other examples will be provided to illustrate
            advanced features of the encoding rules.</para>
         <section xml:id="transcription_principles">
            <title>Principles and Assumptions</title>
            <para>To maximize the utility of transcriptions within the TAN ecosystem, certain
               assumptions and recommendations are made regarding class 1 (transcription) files.
               These assumptions about transcriptions complement the more general ones; see <xref
                  linkend="design_principles"/>.</para>
            <para>First, TAN transcription files are restricted exclusively to the creation of an
               accurate digital representation of a single version of a single work, correctly
               segmented and labeled and drawn from only one source. Editors of TAN-T or TAN-TEI
               files should be able to read, write, and proofread texts in the languages of the
               sources. They should understand the works well enough to segment them and label them.
               They should be familiar with the normalizing conventions adopted by scholars who work
               on texts from the same time, language, and culture. They should have some familiarity
               with how users of the text will want to segment the transcription on the basis of
               words.</para>
            <para>Editors need not understand everything about their texts, such as where and how
               they are derived or the history of the work. They need not have any specialized skill
               in grammar or lexicology. They need not know the morphology of individual words, or
               how individual parts of the text have been translated. Those skills are reserved for
               other core TAN formats. </para>
            <para>TAN-T(EI) editors stand at the beginning of a larger workflow for text alignment.
               It is critical that work not be published hastily, and only after careful
               proofreading, especially of white-space, which will significantly affect later use,
               especially in processes involving tokenization Many transcriptions, especially those
               of long texts, have typographical errors. But eliminating as many as possible before
               publication will maximize the utility of a TAN-T(EI) file.</para>
            <para>If you are creating a TAN-T(EI) file, you are doing so primarily to service text
               alignment. To align is to correlate passages of text that attest to acts of text
               reuse, e.g., translating, paraphrasing, revising, quoting, and summarizing. Common to
               all these processes is that one or more texts, usually called the
                  <emphasis>source</emphasis> (or <emphasis>sources</emphasis>), are transformed
               into a new text, oftentimes called the <emphasis>target</emphasis>. A target is based
               upon the semantics of the source and not its visible features. That is, translators,
               whether working literally or freely, move from idea to idea, clause to clause,
               sentence to sentence, and word to word. Line and page breaks in a source usually
               leave negligible if any trace in the target. Therefore a TAN transcription file
               should not try to reflect the appearance of its source (i.e., it should not be a
               diplomatic edition), and it should be structured, when possible, by the most familiar
               reference system for that work. If possible, semantic mileposts (clauses, sentences,
               paragraphs, chapters) not visual (lines, columns, pages, volumes) should be
               preferred. (But even alternative reference systems for the same text can be
               reconciled in the TAN format.)</para>
            <para>Contributors and users of TAN files also assume a fundamental distinction between
               a textual object (or a text-bearing object) and a conceptual work. The former has
               materiality and the latter does not. Even though both are constitutively necessary
               for any transcription, the two must always be differentiated. For example, when we
               refer in ordinary conversation to the <emphasis>Odyssey</emphasis> we refer to an
               idea, concept, or model, but not to a particular copy, version, or edition. On the
               other hand, if we encounter a book with <emphasis>The Odyssey</emphasis> on the
               cover, we do not necessarily assume that it meets our ideal. It might contain only
               parts of it, or it might include other works. In ordinary conversation, we usually
               indicate whether our use of "Odyssey" refers to the work or to a specific copy. </para>
            <para>Both the conceptual and physical categories are critical constraints a TAN-T(EI)
               file. In brief: <emphasis>Every TAN-T(EI) file must be restricted to a transcription
                  of a single version of a single conceptual work found on a single text-bearing
                  object, segmented and labeled according to a single reference system</emphasis>.
               This restrictive principle is critical to the the success of the network, because it
               is the basis upon which other TAN files will be aligned. Adherence to the principle
               reduces the risk of confusion, simplifies the files, and allows complexity to be
               shifted from an individual file to the network in which that file
               participates.</para>
            <para><emphasis role="bold">Single textual object</emphasis>. Each TAN-T(EI) file
               transcribes one and only one object. It may be a digital file or a text-bearing
               artefact—a particular book, manuscript, stone, label, etc. If the object you've
               chosen is virtually indistinguishable from other related objects (e.g., copies of a
               printed book or copies of a digital file), then the entire class of mechanically
               reproduced objects is to be treated as a single object (an entity some librarians
               call a manifestation). Some borderline cases about what constitutes an object will
               require discernment and judgment. For example, some manuscripts have been split up,
               their parts now residing in multiple libraries around the world; other manuscripts
               have been physically altered or supplemented. In such cases, you may need to define
               your single text-bearing object in a way that might not conform strictly to how
               others might define it. You have the right and responsibility to define your object
               in the way that makes most sense to you and your users.</para>
            <para><emphasis role="bold">Single conceptual work</emphasis>. Identifying and defining
               the creative work you mean to transcribe is your decision. Suppose the text-bearing
               object you have is a Bible. It can take whatever contours you wish. For example,
               given that a text-bearing object is a New Testament, you may wish to define the
               entirety as a single work, or you may wish to make the work the Gospel of Matthew, or
               a specific episode in that gospel, or simply the Beatitudes. Any reasonable
               definition of a work is permitted, but a TAN-T(EI) file must contain nothing but the
               work that has been chosen. A TAN-T(EI) file need not contain the entire work. But it
               should be complete, and preserve the order found in the text-bearing object.</para>
            <para><emphasis role="bold">Single version</emphasis>. If the text-bearing object
               repeats the work in multiple versions (different languages or different editions),
               you must choose one and only one. If you wish to transcribe the other versions in
               your project, they should take separate TAN-T(EI) files. If you wish to work a
               transcription that is a critical edition or a collation of multiple versions of a
               text then it is best to prepare and publish separately a print or digital edition of
               that edition. That new edition can then be treated as the single version for your
               TAN-T file.</para>
            <note>
               <para><emphasis role="bold">Transcriptions of unwritten texts</emphasis>. The term
                  "textual object" includes physical or digital media that preserve written, aural,
                  or performative text, e.g., a speech delivered in Russian or a dialogue performed
                  in American Sign Language. A TAN-T(EI) file may directly transcribe an oral or
                  performative text, as long as it adheres as faithfully as possible to the source,
                  and makes a full declaration of all normalizations that have been exercised. In
                  such cases a list might be quite extensive and unwieldy, so it may be preferable
                  to create and publish an independent transcription to then serve as the source of
                  a TAN-T(EI) file.</para>
               <para><emphasis role="bold">Domain model</emphasis>. The categories used in this
                  introduction may remind some readers of the domain model defined by the Functional
                  Requirements for Bibliographical Records (FRBR), which identifies four types of
                  Class 1 entities: <emphasis>Work</emphasis>, <emphasis>Expression</emphasis>,
                     <emphasis>Manifestation</emphasis>, and <emphasis>Item</emphasis>, the first
                  pair being conceptual, non-material entities and the latter pair material ones.
                  The TAN encoding format is built upon a slightly different perspective. FRBR Items
                  are equivalent to what TAN calls <emphasis>objects</emphasis> (a term chosen to
                  emphasize their materiality). Multiple objects that for all intents and purposes
                  are indistinguishable (i.e., items reproduced mechanically) are equivalent to FRBR
                  Manifestations, but in TAN no separate entity has been defined. It is best to
                  think of TAN objects as being equivalent to FRBR Items, with FRBR Manifestations
                  being sets of indistinguishable TAN objects. As for conceptual entities, the
                  network has been designed with the assumption that most TAN users will find the
                  distinction between Works and Expressions to be unhelpful or false. What one
                  person calls a FRBR Expression another may legitimately call a Work. TAN assumes
                  that any derivation of a Work (or Works) is itself a Work, which is really
                  shorthand for <emphasis role="italic">work-version</emphasis>. Thus, in this
                  manual the term <emphasis>version</emphasis> indicates not an entity separate from
                  work, but rather a work that is known either to derive from another or to be the
                  basis for other derivations. TAN avoids altogether the term
                     <emphasis>Expression</emphasis>, which necessarily implies a medium (without
                  which nothing can be expressed) and therefore materiality. </para>
               <para>The above explanation is, for the moment, provisional. The concepts behind the
                  TAN conceptual model may be more precisely defined in the future.</para>
            </note>
            <para><emphasis role="bold">Single reference system</emphasis>. Every TAN transcription
               must be segmented into a hierarchy of uniquely labeled divisions. Those divisions,
               whenever possible, should align first and foremost according to the reference system
               that is most familiar when the text is cited across different versions, a so-called
               canonical reference system. (Because the canonicity of a reference system admits
               degrees and dispute, the simpler term <emphasis role="italic">reference
                  system</emphasis> is preferred and applies to all such systems, whether
               "canonical" or not.) Preference should be shown to the natural semantic divisions of
               the work, not the physical features of a particular object. Chapter, paragraph, and
               sentence numbers are preferable to volume, page, and line numbers, because other
               versions of the work (other translations, paraphrases) will only roughly, if at all,
               follow an object-oriented reference system. But if a given work has multiple systems
               (e.g., the works of Plato and Aristotle, which have both semantic- and
               object-oriented referenc systems), there are ways that both can be represented
               (explained below &lt;XREF pending>).</para>
            <para>If there is a good reference system, but the divisions are overly lengthy, you may
               introduce subdivisions. If there is no reference system, or if you think that the
               ones that exist are inadequate or misguided, you may create one of your own. If you
               develop your own reference system, be sure to make it useful and consistent, not just
               for your version but for any others of the same work. All references must be unique,
               and they must conform to a hierarchical model. Like XML itself, a reference system
               must follow a treelike hierarchy: one-to-many relationships from the root element
               down, with no overlapping siblings. </para>
            <para>The previous paragraphs describe segmentation that usually applies to phrases,
               sentences, paragraphs, and similarly sized portions of text. But you must also
               prepare your files for token- or word-based segmentation. It is critical that you
               think about how to normalize the text to optimize tokenization (see <xref
                  linkend="tan-r-tok"/>).</para>
            <para>Judicious normalization is critical, especially of white space. You should be
               familiar with the conventions that are commonly used for identifying word tokens in
               the languages of your text. Some languages are relatively straightforward and word
               tokens can be isolated at word spaces. But in some languages word tokens might be
               joined with other word tokens, without any spaces. In these cases, the major words
               should be delimited by some consistent character, usually standardized white space,
               and the component words or morphemes should be delimited by nonstandardized white
               space. In many cases U+200B (ZERO-WIDTH SPACE) is appropriate as a delimitery within
               a string of characters to separate words. It is recommended that the spelled out XML
               entity be used (i.e., <code>&amp;#x200B;</code>), so that editors and readers of the
               text can easily see where these markers have been set.</para>
            <para>Other types of normalization that asist analysis and segmentation should also be
               undertaken. This usually entails the suppression of such elements extraneous to the
               text such as parenthetical editorial insertions, stray handwritten remarks,
               discretionary word-breaking hyphens, editorial comments, inserted cross-references,
               and reference numerals (page numbers, section numbers, etc.). In addition, you may
               wish to resolve ligatures and to correct unintended typographical errors. In a
               digital source, precise spacing marks you might be tempted to represent with General
               Punctuation (U+2000..U+200A; U+200B is a special case--see above) should be converted
               to ordinary spaces, and superscript combining Roman letters (U+0363..U+036F) should
               probably be converted to their non-combining counterparts. All Unicode must be
               normalized to NFC forms (see <xref linkend="normalization"/>). Editors must declare
               what kind of tokenization their transcription has been optimized to take.</para>
            <para>Not all decisions will be clear-cut. You may justly hesitate before normalizing
               orthography, punctuation, accentuation, or capitalization. Some aspects of Unicode
               that lend themselves to varying conventions may need special consideration. You may
               need to consider whether an unusual or rarely used Unicode character might be
               misinterpreted, or a hindrance to other users (especially for parsing word tokens).
               Describe any decisions that might not be agreeable to everyone who uses the file in
               the header (see <xref linkend="filter_normalization"/>).</para>
            <para>You should remove from the text anything that is not part of the work proper and
               would interfere with detailed word-for-word alignment, or would create many extra
               hours of preprocessing or postprocessing work for later users. If your source is an
               electronic text that has preserved line breaks, you may need to ensure that the
               sibling elements that split the single word have no space (including line breaks) in
               any intervening text node. By default, XML treats multiple instances of space
               characters (space, tab, newline, and carriage return) as a single space. If retention
               of multiple spaces is important for your research, then the TAN formats are not an
               appropriate XML format, because it relies upon space normalization.</para>
         </section>
         <section xml:id="tan-t">
            <title>General Transcriptions (<code>&lt;TAN-T></code>)</title>
            <para>The rootmost element of a TAN-T file is <code>&lt;TAN-T></code>. </para>
            <section xml:id="tan-t_declarations">
               <title><code>head/declarations</code></title>
               <para>The TAN-T <code>&lt;head></code> is identical to all other TAN heads except for
                  the <code>&lt;declarations></code> element.</para>
               <para>
                  <table frame="all">
                     <title>Synopsis of TAN-T <code>&lt;declaration></code></title>
                     <tgroup cols="7">
                        <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                        <colspec colname="c3" colnum="2" colwidth="1*"/>
                        <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                        <colspec colname="c5" colnum="4" colwidth="2.7*"/>
                        <colspec colname="newCol7" colnum="5" colwidth="2.99*"/>
                        <colspec colname="newCol6" colnum="6" colwidth="3.1*"/>
                        <colspec colname="c6" colnum="7" colwidth="4.21*"/>
                        <thead>
                           <row>
                              <entry>name</entry>
                              <entry>req?</entry>
                              <entry>qty</entry>
                              <entry>parent</entry>
                              <entry>attributes</entry>
                              <entry>children</entry>
                              <entry>purpose</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry><code>&lt;declarations></code></entry>
                              <entry>yes</entry>
                              <entry>one</entry>
                              <entry><code>&lt;head></code></entry>
                              <entry><xref linkend="edit_stamp"/>?</entry>
                              <entry><code>&lt;work></code>, <code>&lt;version></code>?,
                                    <code>&lt;div-type></code>+,
                                    <code>&lt;recommended-tokenization></code>+,
                                    <code>&lt;recommended-div-type-refs></code>?,
                                    <code>&lt;filter></code>?</entry>
                              <entry>identifies the work that has been transcribed</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table>
               </para>
               <para>The TAN-T <code>&lt;declarations></code> takes five possible child
                  elements—three mandatory, three optional. These declarations pertain to the work
                  and version chosen, the types of segementation, the tokenization and reference
                  patterns adopted, and normalizations made to the transcription.</para>
               <section>
                  <title>Works</title>
                  <para><table frame="all">
                        <title>Synopsis of <code>&lt;work></code></title>
                        <tgroup cols="7">
                           <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                           <colspec colname="c3" colnum="2" colwidth="1*"/>
                           <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                           <colspec colname="c5" colnum="4" colwidth="2.7*"/>
                           <colspec colname="newCol7" colnum="5" colwidth="2.99*"/>
                           <colspec colname="newCol6" colnum="6" colwidth="3.1*"/>
                           <colspec colname="c6" colnum="7" colwidth="4.21*"/>
                           <thead>
                              <row>
                                 <entry>name</entry>
                                 <entry>req?</entry>
                                 <entry>qty</entry>
                                 <entry>parent</entry>
                                 <entry>attributes</entry>
                                 <entry>children</entry>
                                 <entry>purpose</entry>
                              </row>
                           </thead>
                           <tbody>
                              <row>
                                 <entry><code>&lt;work></code></entry>
                                 <entry>yes</entry>
                                 <entry>one</entry>
                                 <entry><code>&lt;declaration></code></entry>
                                 <entry>----</entry>
                                 <entry><xref linkend="iri_and_name"/></entry>
                                 <entry>identifies the work that has been transcribed</entry>
                              </row>
                           </tbody>
                        </tgroup>
                     </table>The <code>&lt;work></code> element is required, and states which
                     conceptual work has been transcribed. It takes the <xref linkend="iri_and_name"
                     />.</para>
                  <para>Well-known works may have a suitable IRI name already assigned to them. See
                        <link xlink:href="iris.xml"/> for suggestions on vocabularies. Most works
                     have not been assigned IRIs or are named in IRI vocabularies that are not well
                     known. You may assign any work your own URN, through a UUID or a tag URN. Any
                     IRIs that you mint are free to be used by other people writing TAN files about
                     the same work. Similarly, if you find that another TAN-T file has transcribed a
                     version of your work, you may also use that URN (you don't need to ask
                     permission, since no URN can be copyrighted). As with other parts of the
                     metadata, multiple <code>&lt;IRI></code>s and <code>&lt;name></code>s are names
                     for the same work, not individual names for different works. </para>
                  <example>
                     <title><code>&lt;work></code></title>
                     <programlisting>      ...........
   &lt;work>
       &lt;IRI>http://dbpedia.org/resource/Ring_a_Ring_o%27_Roses&lt;/IRI>
       &lt;name>"Ring a Ring o' Roses" or "Ring Around the Rosie"&lt;/name>
   &lt;/work>
      ...........               </programlisting>
                  </example>
                  <example>
                     <title><code>&lt;work></code></title>
                     <programlisting>      ...........
   &lt;work>
      &lt;IRI>http://dbpedia.org/resource/Praktikos&lt;/IRI>
      &lt;IRI>tag:evagriusponticus.net,2014:cpg2032&lt;/IRI>
      &lt;name xml:lang="eng">The Praktikos, written by Evagrius Ponticus&lt;/name>
   &lt;/work>
      ...........               </programlisting>
                  </example>
               </section>
               <section>
                  <title>Versions</title>
                  <table frame="all">
                     <title>Synopsis of <code>&lt;version></code></title>
                     <tgroup cols="7">
                        <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                        <colspec colname="c3" colnum="2" colwidth="1*"/>
                        <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                        <colspec colname="c5" colnum="4" colwidth="1.58*"/>
                        <colspec colname="newCol7" colnum="5" colwidth="3.92*"/>
                        <colspec colname="newCol6" colnum="6" colwidth="1.72*"/>
                        <colspec colname="c6" colnum="7" colwidth="4.21*"/>
                        <thead>
                           <row>
                              <entry>name</entry>
                              <entry>req?</entry>
                              <entry>qty</entry>
                              <entry>parent</entry>
                              <entry>attributes</entry>
                              <entry>children</entry>
                              <entry>purpose</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry><code>&lt;version></code></entry>
                              <entry>no</entry>
                              <entry>one</entry>
                              <entry><code>&lt;declaration></code></entry>
                              <entry>----</entry>
                              <entry><xref linkend="iri_and_name"/></entry>
                              <entry>identifies the work-version that has been transcribed</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table>
                  <para>An optional <code>&lt;version></code> element identifies a specific version
                     of what has been identified under <code>&lt;work></code>. It takes the <xref
                        linkend="iri_and_name"/>.</para>
                  <para>In most cases, <code>&lt;version></code> is unnecessary, because
                        <code>&lt;work></code> in conjunction with <code>&lt;source></code> are
                     sufficient to identify a particular work-version. But if the source carries
                     multiple versions (e.g., a bilingual edition of a text), then
                        <code>&lt;version></code> must be included.</para>
                  <para>Very few work-versions have their own URN names. It is advisable to assign a
                     tag URN or a UUID. If you have used an IRI for <code>&lt;work></code> that you
                     are entitled to modify, you may wish to add a suffix that will name the
                     version. If you need to specify exactly where on a text-bearing object a
                     version appears, <code>&lt;desc></code> or <code>&lt;comment></code> should be
                     used.</para>
                  <example>
                     <title><code>&lt;version></code></title>
                     <programlisting>      ...........
   &lt;version>
      &lt;IRI>urn:uuid:31648039-3dbb-49b9-b66e-9bd2cd11630e&lt;/IRI>
      &lt;name>zweite Version des Arbeits&lt;/name>
   &lt;/version>
      ...........               </programlisting>
                  </example>
                  <example>
                     <title><code>&lt;version></code></title>
                     <programlisting>      ...........
   &lt;version>
      &lt;IRI>tag:evagriusponticus.net,2014:cpg2040.grc.1971&lt;/IRI>
      &lt;name xml:lang="eng">Guillaumonts' ancient Greek version of the 
          Praktikos published in 1971&lt;/name>
   &lt;/version>
      ...........               </programlisting>
                  </example>
               </section>
               <section xml:id="div-type">
                  <title>Division Types</title>
                  <para><table frame="all">
                        <title>Synopsis of <code>&lt;div-type></code></title>
                        <tgroup cols="7">
                           <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                           <colspec colname="c3" colnum="2" colwidth="1*"/>
                           <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                           <colspec colname="c5" colnum="4" colwidth="1.58*"/>
                           <colspec colname="newCol7" colnum="5" colwidth="3.92*"/>
                           <colspec colname="newCol6" colnum="6" colwidth="1.72*"/>
                           <colspec colname="c6" colnum="7" colwidth="4.21*"/>
                           <thead>
                              <row>
                                 <entry>name</entry>
                                 <entry>req?</entry>
                                 <entry>qty</entry>
                                 <entry>parent</entry>
                                 <entry>attributes</entry>
                                 <entry>children</entry>
                                 <entry>purpose</entry>
                              </row>
                           </thead>
                           <tbody>
                              <row>
                                 <entry><code>&lt;div-type></code></entry>
                                 <entry>yes</entry>
                                 <entry>one or more</entry>
                                 <entry><code>&lt;declaration></code></entry>
                                 <entry><code>@xml:id</code>, <code>@ns-are-numerals</code>?</entry>
                                 <entry><xref linkend="iri_and_name"/></entry>
                                 <entry>identifies the types of division into which the
                                    transcription has been segmented</entry>
                              </row>
                           </tbody>
                        </tgroup>
                     </table>At least one <code>&lt;div-type></code> must be supplied, declaring the
                     types of divisions into which the text has been segmented. Each
                        <code>&lt;div-type></code> must take an <code>xml:id</code> that has a
                     string value (regular expression: <code>\w+</code>; no punctuation or spaces
                     are allowed) unique to the document. This value will be used throughout the TAN
                     file to label divisions, so it is advisable to keep the abbreviation brief but
                     meaningful. Each <code>&lt;div-type></code> takes the <xref
                        linkend="iri_and_name"/>.</para>
                  <para><code>@ns-are-numerals</code> is optional. If absent, the value is assumed
                     to be true, and processors of the TAN-T file will attempt to cast the values of
                        <code>@n</code> as <code>xs:integer</code>. </para>
                  <para xml:id="numeration_systems">TAN supports four numeration systems other than
                     Arabic numerals:<orderedlist>
                        <listitem>
                           <para><emphasis role="bold">Roman numerals</emphasis>. Values up to 5000,
                              utilizing i, v, x, l, c, d, and m, uppercase or lowercase, with
                              liberal syntactic rules (within a roman numeral, any digit preceding
                              one of a higher value is assumed to be a subtraction from the total
                              value; all others are positive values).</para>
                        </listitem>
                        <listitem>
                           <para><emphasis role="bold">Alphabetic sequences</emphasis>. The
                              26-letter Roman alphabet, assigned 1 through 26, with each series 26n
                              + 1 beginning with n + 1 repeated letters. E.g., aa = 27, bbb = 54.
                              Uppercase or lowercase allowed.</para>
                        </listitem>
                        <listitem>
                           <para><emphasis role="bold">Arabic numerals + alphabetic
                                 sequences</emphasis>. Arabic numerals followed immediately by an
                              alphabetic sequence. The second item is to be calculated as a
                              subsequence of the first item, with the lack of a second item taking
                              highest priority. E.g., 4, 4a, 4b, 4c....</para>
                        </listitem>
                        <listitem>
                           <para><emphasis role="bold">Alphabetic sequences + Arabic
                                 numerals</emphasis>: As above, but with alphabetic sequence
                              preceding Arabic numerals.</para>
                        </listitem>
                     </orderedlist></para>
                  <para>Implementations processing TAN files should determine whether the
                        <code>@n</code>s are numerals by testing all values and opting for the
                     numeration system that predominates. It is recommended that the functions and
                     variables defined for <link xlink:href="../functions/TAN-A-div-functions.xsl"
                        >TAN-A-div</link>, <link xlink:href="../functions/TAN-class-2-functions.xsl"
                        >TAN-class-2</link>, and <link
                        xlink:href="../functions/TAN-core-functions.xsl">TAN-core</link> be studied
                     in reconciling and converting numeration systems. </para>
                  <para>In most cases, <code>@ns-are-numerals</code> will not need to be invoked.
                     Even if there is a case where <code>n="civ"</code> and <code>civ</code> is
                     meant to be a word or abbreviation, this will be interpreted as a Roman numeral
                     only if the majority of <code>@n</code>s for that <code>&lt;div></code> type
                     match the pattern for Roman numerals. In that case,
                        <code>@ns-are-numerals="false"</code> should be invoked in the appropriate
                        <code>&lt;div-type></code>. </para>
                  <para>Well-known division types already have suitable IRI names. See <link
                        xlink:href="iris.xml"/> for suggestions. That list also includes less common
                     types of divisions. If you encounter a rare division type, or one that needs
                     specificity not provided for in a well-known URN, you should mint your
                     own.</para>
                  <para>You may have as many <code>&lt;div-type></code>s as you like. Not every
                     division type needs to be used in the transcription. In this it resembles
                     surplus namespace invocations at the head of an XML document. The only harm is
                     bloat.</para>
                  <example>
                     <title><code>&lt;div-type></code></title>
                     <programlisting>      ...........
   &lt;div-type xml:id="line">
      &lt;IRI>http://dbpedia.org/resource/Line_(poetry)&lt;/IRI>
      &lt;name>line of poetry&lt;/name>
   &lt;/div-type>
      ...........               </programlisting>
                  </example>
                  <example>
                     <title><code>&lt;div-type></code></title>
                     <programlisting>      ...........
   &lt;div-type xml:id="p">
      &lt;IRI>http://dbpedia.org/resource/Preface&lt;/IRI>
      &lt;name xml:lang="eng">preface&lt;/name>
   &lt;/div-type>
   &lt;div-type xml:id="t">
      &lt;IRI>http://dbpedia.org/resource/Title_(publishing)&lt;/IRI>
      &lt;name xml:lang="eng">title&lt;/name>
   &lt;/div-type>
   &lt;div-type xml:id="s">
      &lt;IRI>http://dbpedia.org/resource/Section_(typography)&lt;/IRI>
      &lt;name xml:lang="eng">section&lt;/name>
   &lt;/div-type>
   &lt;div-type xml:id="c">
      &lt;IRI>http://dbpedia.org/resource/Chapter_(books)&lt;/IRI>
      &lt;name xml:lang="eng">chapter&lt;/name>
      &lt;name xml:lang="grc">κεφάλαιον&lt;/name>
   &lt;/div-type>
   &lt;div-type xml:id="e">
      &lt;IRI>http://dbpedia.org/resource/Epilogue&lt;/IRI>
      &lt;name xml:lang="eng">epilogue&lt;/name>
   &lt;/div-type>
      ...........               </programlisting>
                  </example>
               </section>
               <section>
                  <title>Recommended Tokenizations</title>
                  <para><table frame="all">
                        <title>Synopsis of <code>&lt;recommended-tokenization></code></title>
                        <tgroup cols="7">
                           <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                           <colspec colname="c3" colnum="2" colwidth="1*"/>
                           <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                           <colspec colname="c5" colnum="4" colwidth="1.58*"/>
                           <colspec colname="newCol7" colnum="5" colwidth="3.92*"/>
                           <colspec colname="newCol6" colnum="6" colwidth="1.72*"/>
                           <colspec colname="c6" colnum="7" colwidth="4.21*"/>
                           <thead>
                              <row>
                                 <entry>name</entry>
                                 <entry>req?</entry>
                                 <entry>qty</entry>
                                 <entry>parent</entry>
                                 <entry>attributes</entry>
                                 <entry>children</entry>
                                 <entry>purpose</entry>
                              </row>
                           </thead>
                           <tbody>
                              <row>
                                 <entry><code>&lt;recommended-tokenization></code></entry>
                                 <entry>yes</entry>
                                 <entry>one or more</entry>
                                 <entry><code>&lt;declaration></code></entry>
                                 <entry><xref linkend="edit_stamp"/>?, <code>@xml:id</code>,
                                       <code>@which</code>?</entry>
                                 <entry><xref linkend="digital_entity_metadata"/>?</entry>
                                 <entry>names a TAN-R-tok file that is recommended</entry>
                              </row>
                           </tbody>
                        </tgroup>
                     </table>At least one <code>&lt;recommended-tokenization></code> must be
                     supplied, declaring which TAN-R-tok patterns the transcription has been
                     optimized for (see <xref linkend="tan-r-tok"/>). If no thought has been given
                     to tokenization, this element should be left empty. Otherwise this element
                     takes two kinds of content:</para>
                  <para>
                     <orderedlist>
                        <listitem>
                           <para><emphasis role="bold">Core TAN tokenization pattern</emphasis>. TAN
                              provides three core tokenization patterns, <code>general-1</code>,
                                 <code>general-words-only-1</code>, and <code>precise-1</code>. To
                              refer to these core patterns, simply assign to <code>@which</code> one
                              of those three values. The numeral after the name refers to version
                              number; the number of versions may grow. See <xref linkend="tan-r-tok"
                              /> for more about these files.</para>
                        </listitem>
                        <listitem>
                           <para><emphasis role="bold">Custom TAN tokenization pattern</emphasis>.
                              Under this option, Each <code>&lt;recommended-tokenization></code>
                              must take a unique value for <code>@xml:id</code> that names the
                              tokenization pattern. This value will be used by class 2 files to
                              choose a particular tokenizing pattern. Each
                                 <code>&lt;recommended-tokenization></code> takes the <xref
                                 linkend="digital_entity_metadata"/>.</para>
                        </listitem>
                     </orderedlist>
                  </para>
                  <para>If a TAN-R-tok file is language specific, and if not every language invoked
                     in a TAN-T(EI) file is explicitly supported by that tokenization file, a
                     warning will be produced. If you have in your transcription combining
                     characters that cannot be handled reliably by a given recommended tokenization
                     pattern, you will get an error upon validation, indicating where the combining
                     characters are to be found. For more see <xref linkend="reg_exp_and_comb_chars"
                     />.</para>
                  <para>You may have as many <code>&lt;recommended-tokenization></code>s as you
                     like. The order of <code>&lt;recommended-tokenization></code>s is important.
                     The most recommended tokenizing pattern should be placed first. </para>
                  <example>
                     <title><code>&lt;recommended-tokenization></code>: none</title>
                     <programlisting>      ...........
   &lt;recommended-tokenization/>
      ...........               </programlisting>
                  </example>
                  <example>
                     <title><code>&lt;recommended-tokenization></code>: all three core general TAN
                        tokenization pattern</title>
                     <programlisting>      ...........
   &lt;recommended-tokenization which="general-1"/>
   &lt;recommended-tokenization which="general-words-only-1"/>
   &lt;recommended-tokenization which="precise-1"/>
      ...........</programlisting>
                     <caption>
                        <para>The example above prioritizes the core TAN general pattern above the
                           other two.</para>
                     </caption>
                  </example>
                  <example>
                     <title><code>&lt;recommended-tokenization></code>: modern English texts</title>
                     <programlisting>      ...........
   &lt;recommended-tokenization xml:id="penn">
      &lt;IRI>tag:textalign.net,2015:tokenization:eng.1&lt;/IRI>
      &lt;name>Tokenization pattern for English, in Penn Treebank style&lt;/name>
      &lt;location when-accessed="2015-03-17">../TAN-R-tok/tok.eng.1.xml&lt;/location>
   &lt;/recommended-tokenization>
   &lt;recommended-tokenization which="general"/>
      ...........               </programlisting>
                  </example>
               </section>
               <section xml:id="recommended-tokenizations">
                  <title>Recommended Referencing</title>
                  <para><table frame="all">
                        <title>Synopsis of <code>&lt;recommended-div-type-refs></code></title>
                        <tgroup cols="7">
                           <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                           <colspec colname="c3" colnum="2" colwidth="1*"/>
                           <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                           <colspec colname="c5" colnum="4" colwidth="1.58*"/>
                           <colspec colname="newCol7" colnum="5" colwidth="3.92*"/>
                           <colspec colname="newCol6" colnum="6" colwidth="1.72*"/>
                           <colspec colname="c6" colnum="7" colwidth="4.21*"/>
                           <thead>
                              <row>
                                 <entry>name</entry>
                                 <entry>req?</entry>
                                 <entry>qty</entry>
                                 <entry>parent</entry>
                                 <entry>attributes</entry>
                                 <entry>children</entry>
                                 <entry>purpose</entry>
                              </row>
                           </thead>
                           <tbody>
                              <row>
                                 <entry><code>&lt;recommended-div-type-refs></code></entry>
                                 <entry>no</entry>
                                 <entry>one</entry>
                                 <entry><code>&lt;declaration></code></entry>
                                 <entry><xref linkend="edit_stamp"/>?</entry>
                                 <entry>xs:string</entry>
                                 <entry>Indicates whether the @type values can be suppressed in
                                    references to the work.</entry>
                              </row>
                           </tbody>
                        </tgroup>
                     </table>At most one <code>&lt;recommended-div-type-refs></code> may be
                     supplied, to indicate whether class 2 files referring to the transcription
                     should suppress div types in those references or not, i.e., whether a value of
                        <code>@ref</code> should be <code>book.5:chapter.4</code> or merely
                        <code>5:4</code>. The only values this element takes are
                        <code>implicit</code> or <code>explicit</code>. If no value is present,
                        <code>explicit</code> is assumed. </para>
                  <para>If the value is <code>implicit</code>, then no <code>@n</code> may be empty,
                     and when each <code>&lt;div></code>s references are resolved, there may be no
                     duplicate values, otherwise the file will be marked as invalid.</para>
                  <para>Anyone using your file need not adhere to your recommendation. If you mark
                     the value as <code>implicit</code>, someone who prefers the verbose syntax is
                     welcome to do so. But the converse is not true: <code>explicit</code> means
                     only the verbose form may be used.</para>
                  <para>Although this element is optional, it is suggested especially for long
                     files, because it will reduce the time to validate any dependent files.</para>
                  <example>
                     <title><code>&lt;recommended-tokenization></code>: none</title>
                     <programlisting>      ...........
   &lt;recommended-div-type-refs>implicit&lt;/recommended-div-type-refs>
      ...........               </programlisting>
                  </example>
               </section>
               <section xml:id="filter_normalization">
                  <title>Filter: Normalizing, Replacing, Transliterating</title>
                  <para>The <code>&lt;filter></code> of a TAN-T file takes three children, all
                     optional and repeatable: <code>&lt;normalization></code>,
                        <code>&lt;replace></code>, and <code>&lt;transliteration></code>. </para>
                  <para>
                     <table frame="all">
                        <title>Synopsis of <code>&lt;filter></code>,
                           <code>&lt;normalization></code>, <code>&lt;replace></code>,
                              <code>&lt;transliteration></code>, <code>&lt;pattern></code>,
                              <code>&lt;replacement></code>, <code>&lt;flags></code></title>
                        <tgroup cols="7">
                           <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                           <colspec colname="c3" colnum="2" colwidth="1*"/>
                           <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                           <colspec colname="c5" colnum="4" colwidth="1.58*"/>
                           <colspec colname="newCol7" colnum="5" colwidth="3.92*"/>
                           <colspec colname="newCol6" colnum="6" colwidth="1.72*"/>
                           <colspec colname="c6" colnum="7" colwidth="4.21*"/>
                           <thead>
                              <row>
                                 <entry>name</entry>
                                 <entry>req?</entry>
                                 <entry>qty</entry>
                                 <entry>parent</entry>
                                 <entry>attributes</entry>
                                 <entry>children</entry>
                                 <entry>purpose</entry>
                              </row>
                           </thead>
                           <tbody>
                              <row>
                                 <entry><code>&lt;filter></code></entry>
                                 <entry>no</entry>
                                 <entry>one</entry>
                                 <entry><code>&lt;declarations></code></entry>
                                 <entry><code>@src</code>?</entry>
                                 <entry><code>&lt;normalization></code>*,
                                    <code>&lt;replace></code>*,
                                    <code>&lt;transliteration></code>*</entry>
                                 <entry>collect textual changes that have been made to the
                                    source</entry>
                              </row>
                              <row>
                                 <entry><code>&lt;normalization></code></entry>
                                 <entry>no</entry>
                                 <entry>one or more</entry>
                                 <entry><code>&lt;filter></code></entry>
                                 <entry><code>@xml:id</code>?</entry>
                                 <entry><code>&lt;for-lang></code>*, <xref linkend="iri_and_name"
                                    /></entry>
                                 <entry>declare normalizations made to the text of a source</entry>
                              </row>
                              <row>
                                 <entry><code>&lt;replace></code></entry>
                                 <entry>no</entry>
                                 <entry>one or more</entry>
                                 <entry><code>&lt;filter></code></entry>
                                 <entry><code>@xpath</code>?</entry>
                                 <entry><code>&lt;pattern></code>, <code>&lt;replacement></code>,
                                       <code>&lt;flags></code>?</entry>
                                 <entry>state a pattern to be searched and replaced in a digital
                                    source</entry>
                              </row>
                              <row>
                                 <entry><code>&lt;transliteration></code></entry>
                                 <entry>no</entry>
                                 <entry>one or more</entry>
                                 <entry><code>&lt;filter></code></entry>
                                 <entry>----</entry>
                                 <entry><code>&lt;for-lang></code>*, <xref linkend="iri_and_name"
                                    /></entry>
                                 <entry>state a transliteration scheme used upon a source to convert
                                    one alphabet to another</entry>
                              </row>
                              <row>
                                 <entry><code>&lt;pattern></code></entry>
                                 <entry>yes</entry>
                                 <entry>one</entry>
                                 <entry><code>&lt;replace></code></entry>
                                 <entry>----</entry>
                                 <entry>data (xsd:string)</entry>
                                 <entry>state through a regular expression a pattern to be
                                    found</entry>
                              </row>
                              <row>
                                 <entry><code>&lt;replacement></code></entry>
                                 <entry>yes</entry>
                                 <entry>one</entry>
                                 <entry><code>&lt;replace></code></entry>
                                 <entry>----</entry>
                                 <entry>data (xsd:string)</entry>
                                 <entry>state through a regular expression a replacement
                                    pattern</entry>
                              </row>
                              <row>
                                 <entry><code>&lt;flags></code></entry>
                                 <entry>yes</entry>
                                 <entry>one</entry>
                                 <entry><code>&lt;replace></code></entry>
                                 <entry>----</entry>
                                 <entry>data (xsd:string)</entry>
                                 <entry>state flags to be applied in a replace operation</entry>
                              </row>
                           </tbody>
                        </tgroup>
                     </table>
                  </para>
                  <para><code>&lt;filter></code> (see <xref linkend="filter_normalization"/> above)
                     may take take one or more <code>&lt;normalization></code>s, each of which
                     states an editorial decision made to normalize the text found in a source. Each
                     normalization takes the <xref linkend="iri_and_name"/> and may take one or more
                        <code>&lt;for-lang></code> values, indicating through a language code to
                     which languages the normalization applies (see <xref linkend="languages"/> and
                        <xref linkend="language"/>). </para>
                  <para><code>&lt;normalization></code> caters to descriptions of changes to
                     nondigital sources, but it may be made also for digital sources, to declare
                     global changes that would be cumbersome, difficult, or impossible to describe
                     in <code>&lt;replace></code>. </para>
                  <para>In creating a TAN-T file you should declare every change you have made to
                     the source, no matter its medium. See <xref linkend="transcription_principles"
                     /> above. Currently there are no IRI vocabularies for normalizing decisions;
                     see <link xlink:href="iris.xml"/> for TAN-minted ones. If none of these
                     adequately describe a normalization principle you have adopted, you may mint
                     your own IRI, probably a tag URN. It is hoped that as TAN-T files are created,
                     commonly used normalizations will coalesce into a shared IRI vocabulary. </para>
                  <para><code>&lt;replace></code>s, intended exclusively for valid XML sources, is
                     used to indicate what global changes were applied to the text of the source
                     before creating the data. </para>
                  <para>The conventions of <code>&lt;replace></code> accord with
                        <code>fn:replace</code> as defined in <link
                        xlink:href="http://www.w3.org/TR/xpath-functions-30/#func-replace">XPath
                        Functions 3.0</link>. Each <code>&lt;replace></code> has as children exactly
                     one <code>&lt;pattern></code>, exactly one <code>&lt;replacement></code>, and
                     an optional <code>&lt;flags></code> element, corresponding to the three
                     parameters in the XPath function. The values of these three elements, all
                     strings, are regular expressions (see <xref linkend="regular_expressions"/>).
                     Also, if the source is a valid XML file, <code>&lt;replace></code> may take an
                     optional <code>@xpath</code> value, to restrict the scope of the replacement to
                     a specific place in a valid XML source.<caution>
                        <para>Using <code>@xpath</code> is not recommended if you wish to serve
                           users who may be relying upon XSLT 2.0 and earlier for transformations.
                           Only from version 3.0 has it been possible to convert a string datatype
                           (the datatype of <code>@xpath</code>) into an XPath expression.</para>
                     </caution></para>
                  <caution>
                     <para>It is not predictable whether a regular expression engine will include or
                        exclude combining characters in a search. You will need to worry about this
                        only if you are working with texts that use combining characters and you are
                        making subtoken alignments. For more details see <xref
                           linkend="regular_expressions"/> and <xref linkend="combining_characters"
                        />. If you invoke a TAN-R-tok file that has a replace function, and the
                        target text includes combining characters, a warning will be returned upon
                        validation.</para>
                  </caution>
                  <para>Multiple <code>&lt;replace></code> values are assumed to have been applied
                     in the order given.</para>
                  <para>In the third part of <code>&lt;filter></code> are one or more optional
                        <code>&lt;transliteration></code> elements, which indicate what if any
                     transliteration schemes have been used upon the source (digital or nondigital).
                     This may be useful for projects that find it easier to work with a source in a
                     Latin alphabet rather than a native one. Each transliteration element takes the
                        <xref linkend="iri_and_name"/> and one or more optional
                        <code>&lt;for-lang></code> values, indicating through a language code to
                     which languages the transliteration applies (see <xref linkend="languages"/>
                     and <xref linkend="language"/>). </para>
                  <para>
                     <caution>
                        <para>It is hoped that a class 3 format will be developed to formalize
                           transliteration rules. Until this format is available, there is no
                           standardized way to convert the transliteration. For now, the
                              <code>&lt;IRI></code>s in <code>&lt;transliteration></code> should use
                           vocabularies similar to those recommended in <link xlink:href="iris.xml"
                           />. </para>
                     </caution>
                  </para>
                  <example>
                     <title><code>&lt;normalization></code></title>
                     <programlisting>      ...........
   &lt;filter>
      &lt;normalization>
         &lt;IRI>tag:textalign.net,2015:normalization:comments-editorial-removed&lt;/IRI>
         &lt;name>Editorial comments removed.&lt;/name>
      &lt;/normalization>
   &lt;/filter>
      ...........               </programlisting>
                  </example>
                  <example>
                     <title><code>&lt;normalization></code> and <code>&lt;replace></code>: remove
                        discretionary hyphenation and line breaks from a TAN-TEI file</title>
                     <programlisting>      ...........
   &lt;filter>
      &lt;normalization>
         &lt;for-lang>grc&lt;/for-lang>
         &lt;IRI>tag:textalign.net,2015:normalization:hyphens-discretionary-removed&lt;/IRI>
         &lt;name>Suppression of hyphens&lt;/name>
      &lt;/normalization>
      &lt;replace>
         &lt;pattern>&amp;lt;lb[^/]*\s*break\s*=\s*"no"[^/]*\s*/>&lt;/pattern>
         &lt;replacement/>
      &lt;/replace>
      &lt;replace>
         &lt;pattern>&amp;lt;lb[^/]*\s*[^/]*/>&lt;/pattern>
         &lt;replacement> &lt;/replacement>
      &lt;/replace>
   &lt;/filter>
      ...........</programlisting>
                     <caption>
                        <para>The removal of discretionary hyphens is declared with
                              <code>&lt;normalization></code> and not <code>&lt;replace></code>
                           because the TAN-T editor has realized that some hyphens at line ends are
                           part of the word. A generalized regular expression cannot be constructed
                           to define this change. The first <code>&lt;replace></code> declares that
                           all instances of TEI's <code>&lt;lb></code> that are meant to suppress
                           word breaks should be deleted. The regular expression held by
                              <code>&lt;pattern></code> tells the computer to look for any instance
                           of <code>&lt;lb</code> followed by anything until it reaches
                              <code>break="no"</code> then to keep going until it finds
                              <code>/></code>, even across new lines. Note the use of
                              <code>&amp;lt;</code>, since a literal use of <code>&lt;</code> would
                           render this file as invalid. The second replace replaces all remaining
                           TEI <code>&lt;lb></code> with a single space.</para>
                     </caption>
                  </example>
                  <example>
                     <title><code>&lt;transliteration></code></title>
                     <programlisting>      ...........
   &lt;filter>
      &lt;transliteration>
         &lt;for-lang>grc&lt;/for-lang>
         &lt;IRI>tag:textalign.net,2015:transliteration:grc:lat:betacode2013&lt;/IRI>
         &lt;name>Romanized Greek&lt;/name>
      &lt;/transliteration>
   &lt;/filter>
      ...........               </programlisting>
                  </example>
               </section>
            </section>
            <section xml:id="tan_t_data">
               <title>Data</title>
               <para><table frame="all">
                     <title>Synopsis of TAN-T <code>&lt;body></code>, <code>&lt;div></code></title>
                     <tgroup cols="7">
                        <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                        <colspec colname="c3" colnum="2" colwidth="1*"/>
                        <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                        <colspec colname="c5" colnum="4" colwidth="1.58*"/>
                        <colspec colname="newCol7" colnum="5" colwidth="3.92*"/>
                        <colspec colname="newCol6" colnum="6" colwidth="1.72*"/>
                        <colspec colname="c6" colnum="7" colwidth="4.21*"/>
                        <thead>
                           <row>
                              <entry>name</entry>
                              <entry>req?</entry>
                              <entry>qty</entry>
                              <entry>parent</entry>
                              <entry>attributes</entry>
                              <entry>children</entry>
                              <entry>purpose</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry><code>&lt;body></code></entry>
                              <entry>yes</entry>
                              <entry>one</entry>
                              <entry><code>/TAN-T</code></entry>
                              <entry><code>@xml:lang</code>, <xref linkend="in_progress"/>?</entry>
                              <entry><code>&lt;div></code>+</entry>
                              <entry>contain a transcription</entry>
                           </row>
                           <row>
                              <entry><code>&lt;div></code></entry>
                              <entry>yes</entry>
                              <entry>one or more</entry>
                              <entry><code>&lt;body></code> | <code>&lt;div></code></entry>
                              <entry><code>@type</code>, <code>@n</code>,
                                 <code>@xml:lang</code>?</entry>
                              <entry><code>&lt;div></code>+ | text</entry>
                              <entry>segment, structure, and name the segments of a
                                 transcription</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table>The sole purpose of <code>&lt;body></code> is to contain a segmented
                  transcription of a single version of a single work from a textual object.
                     <code>&lt;body></code> may take <code>@in-progress</code> (see <xref
                     linkend="in_progress"/>). </para>
               <para><code>&lt;body></code> takes one or more <code>&lt;div></code> elements each of
                  which governs zero or more other <code>&lt;div></code> elements. Collectively,
                  this tree of <code>&lt;div></code> elements (with <code>&lt;body></code> at the
                  root) is used to structure the text according to the reference system that has
                  been adopted. Furthermore, only leaf <code>&lt;div></code> elements, that is,
                     <code>&lt;div></code> elements that contain no other <code>&lt;div></code>s
                  (XPath expression <code>//tan:div[not(descendant::tan:div)]</code>) are allowed to
                  contain text children (white space excepted). That is, any <code>&lt;div></code>
                  will contain one of the two following combinations of children: </para>
               <para>
                  <orderedlist>
                     <listitem>
                        <para>one or more <code>&lt;div></code>s and nothing else (except white
                           space)</para>
                     </listitem>
                     <listitem>
                        <para>no <code>&lt;div></code>s at all and text (or TEI-compliant markup, if
                           a TAN-TEI file).</para>
                     </listitem>
                  </orderedlist>
               </para>
               <para><code>@xml:lang</code>, which is required in <code>&lt;body></code> and is
                  optional in any <code>&lt;div></code>, indicates the default language of the
                  portions of the transcription governed by the parent of <code>@xml:lang</code>.
                  This value is inherited by all descendants, unless overridden by a new
                     <code>@xml:lang</code>. That is, each <code>&lt;div></code> takes the
                     <code>@xml:lang</code> value of itself or its nearest ancestor. Any time a
                  transcription moves from one language to another (and the difference is obvious
                  and substantial, not merely a word or short phrase), you should indicate this with
                  a new <code>@xml:lang</code> in the appropriate <code>&lt;div></code>. This is a
                  courtesy to users who may be looking for text from a particular language. If a
                  change in language occurs within a leaf <code>&lt;div></code>, you should ensure
                  that the <code>@xml:lang</code> value of that <code>&lt;div></code> (explicity or
                  by inheritance) reflects the majority language. Alternatively, you may subdivide
                  that <code>&lt;div></code>s into a new set of leaf <code>&lt;div></code>s, with
                  the appropriate <code>@xml:lang</code> values applied.</para>
               <para>Each <code>&lt;div></code> must take a <code>@type</code>, which points to the
                     <code>@xml:id</code> values of a <code>&lt;div-type></code>. </para>
               <para>Each <code>&lt;div></code> must include <code>@n</code>, which carries a label
                  that identifies the number or name of a segment of the transcription. Although
                  defined as a string, <code>@n</code> will be cast by processors as an
                     <code>xs:integer</code> if possible, and if this feature has not been
                  overridden. See <xref linkend="div-type"/>.</para>
               <para>Within this treelike structure of <code>&lt;div></code>s, any given
                     <code>&lt;div></code> will be identified by the paired values of
                     <code>@type</code> and <code>@n</code>, going from the most ancestral
                     <code>&lt;div></code> down to the context node. The concatenation of the entire
                  chain is called the <emphasis>flat ref</emphasis>, and it serves as an identifying
                  device. One of the most important validation rules must here be noted, the
                     <emphasis>Leaf Div Uniqueness Rule</emphasis>, which states that the flat ref
                  for each leaf <code>&lt;div></code> must be unique.</para>
               <para>
                  <note xml:id="leaf_div_uniqueness_rule">
                     <title>Flattened References, and the Leaf Div Uniqueness Rule</title>
                     <para>Each leaf <code>&lt;div></code> must have a full reference that is unique
                        within the document. Take for example a work that is structured into books,
                        chapters, and finally sections. If you are told to find book 3, chapter 7,
                        section b, line 5, you should be able to find the one place where that
                        applies. There should not be two passages labeled 3.7.b.5.</para>
                     <para>It is helpful to visualize the way the leaf <code>&lt;div></code>
                        uniqueness rule gets calculated, because this process is used to validate
                        class 2 files. First, imagine each <code>&lt;div></code> in the hierarchy
                        having their <code>@n</code> and <code>@div</code> values joined by a single
                        space or punctuation character to form a single string, e.g.,
                           <code>book.3</code>, <code>chapter.7</code>, <code>section.b</code>, and
                           <code>line.5</code>. Then picture the entire hierarchy of
                           <code>&lt;div></code>s collapsing into a flat list of leaf
                           <code>&lt;div></code>s. Once collapsed, each leaf <code>&lt;div></code>
                        takes a new value that combines the reference values of its ancestors,
                        joining them once again by some space or punctuation mark, e.g.,
                           <code>book.3:chapter.7:section.b:line.5</code>. (The choice of periods
                        and colons is entirely arbitrary; see <xref
                           linkend="flattened_refs_punctuation"/>)</para>
                     <para>Each flat ref must be unique. Any transcription file that has leaf
                           <code>&lt;div></code>s with duplicate flattened references will be
                        rendered invalid.</para>
                     <para>This rule applies only to leaf <code>&lt;div></code>s and not to
                           <code>&lt;div></code>s in general. That is because there are many cases
                        where a source will begin a major textual unit, interject another one, then
                        resume the previous one. For example, chapters 24 and 30 in the book of
                        Proverbs of the Septuagint are split in half and collated. The sequence goes
                        as follows: 24.1 - 24.22e (22a - 22e are verses not extant in the Hebrew);
                        30.1 - 30.14; 24.23 - 24.34; and 30.15 - 30.33. If the uniqueness rule
                        applied universally, this kind of reference system would be
                        impossible.</para>
                  </note>
               </para>
               <para>If a section of text traditionally carries no label, for example an unnumbered
                  preface, this must declared explicitly with an empty value, i.e.,
                     <code>@n=""</code>. In such cases look out for ambigua: any other sibling
                     <code>&lt;div></code> of the same type that would assign its <code>@n</code> as
                  a null value (for example, two prefaces to the same work).</para>
               <example>
                  <title>TAN-T <code>&lt;body></code>, <code>&lt;div></code></title>
                  <programlisting>   ...........
   &lt;body xml:lang="eng" in-progress="false">
      &lt;div type="line" n="1">Ring-a-ring-a-roses,&lt;/div>
      &lt;div type="line" n="2">A pocket full of posies;&lt;/div>
      &lt;div type="line" n="3">Hush! Hush! Hush! Hush!&lt;/div>
      &lt;div type="line" n="4">We're all tumbled down.&lt;/div>
   &lt;/body>
   ...........               </programlisting>
               </example>
            </section>
         </section>
         <section xml:id="tan-tei">
            <title>Transcriptions Using the Text Encoding Initiative
               (<code>&lt;TAN-TEI></code>)</title>
            <para>
               <note>
                  <para>This section is to be read in conjunction with <xref linkend="tan-t"/> and
                        <xref linkend="xml"/>, which addresses some technical issues that relate to
                     TAN-compliant TEI to XML and validation generally.</para>
               </note>
            </para>
            <para>Some creators and editors of transcriptions will find the rather stripped-down
               TAN-T format inadequate. Some may wish to mark up the text in leaf
                  <code>&lt;div></code>s. Others may already have a library of transcriptions with
               detailed annotations that are desirable to keep, even if TAN users may not be
               interested. To serve these needs, TAN has adopted the Text Encoding Intiative (TEI)
               format for its expressiveness, its stability, its flexibility, and its widespread use
               in scholarship.</para>
            <para>TEI is one of the best known XML encoding formats for textual markup. It was
               designed to be maximally expressive and flexible, to serve the most robust needs of
               humanities scholars. In serving this mission, TEI has come to define more than five
               hundred different element names, and more than two hundred attributes. Of course, any
               given TEI file uses only a small subset of those elements and attributes, and TEI
               itself comes in different sizes, from TEI Lite, which uses only 75 attributes and 140
               elements, to TEI All, which opens up almost the entire library. </para>
            <para>The TEI has been designed to be customizable, which is actively encouraged.
               Individuals and projects may define their own subset of TEI elements, to constrict or
               expand the allowable rules as they see fit. TAN-TEI is one of those customizations,
               adjusting the TEI rules to ensure that the transcriptions are interchangeable and
               suitable with all other TAN files.</para>
            <para>The customization of the TEI can be summarized as follows (the default namespace
               in this section is the TEI namespace,
               <code>http://www.tei-c.org/ns/1.0</code>):</para>
            <para>
               <table frame="all">
                  <title>Synopsis of TAN-TEI customization</title>
                  <tgroup cols="2">
                     <colspec colname="c1" colnum="1" colwidth="1*"/>
                     <colspec colname="c3" colnum="2" colwidth="3.21*"/>
                     <thead>
                        <row>
                           <entry>TEI element</entry>
                           <entry>summary of alteration</entry>
                        </row>
                     </thead>
                     <tbody>
                        <row>
                           <entry><code>&lt;TEI></code></entry>
                           <entry>
                              <itemizedlist>
                                 <listitem>
                                    <para>must have <code>@id</code> with IRI name</para>
                                 </listitem>
                                 <listitem>
                                    <para>should take new namespace declaration,
                                          <code>xmlns:tan="tag:textalign.net,2015:ns"</code>
                                    </para>
                                 </listitem>
                                 <listitem>
                                    <para>takes a new child element, <code>&lt;head></code>, placed
                                       between <code>&lt;teiHeader></code> and
                                          <code>&lt;text></code></para>
                                 </listitem>
                              </itemizedlist>
                           </entry>
                        </row>
                        <row>
                           <entry><code>&lt;body></code></entry>
                           <entry>
                              <itemizedlist>
                                 <listitem>
                                    <para>must take <code>@xml:lang</code></para>
                                 </listitem>
                                 <listitem>
                                    <para>may take <code>@in-progress</code></para>
                                 </listitem>
                                 <listitem>
                                    <para>must take exclusively one or more
                                       <code>&lt;div></code>s</para>
                                 </listitem>
                                 <listitem>
                                    <para>overall contents must be restricted to a single
                                       work</para>
                                 </listitem>
                              </itemizedlist>
                           </entry>
                        </row>
                        <row>
                           <entry><code>&lt;div></code></entry>
                           <entry>
                              <itemizedlist>
                                 <listitem>
                                    <para>must take either only <code>&lt;div></code>s or no
                                          <code>&lt;div></code>s at all</para>
                                 </listitem>
                                 <listitem>
                                    <para>must take <code>@type</code>, <code>@n</code></para>
                                 </listitem>
                              </itemizedlist>
                           </entry>
                        </row>
                     </tbody>
                  </tgroup>
               </table>
            </para>
            <para>Like all other TAN files, the rootmost elements of TAN-TEI files must take an
                  <code>@id</code>, the IRI name. See above, <xref linkend="uri_name"/>.</para>
            <para>The <code>&lt;teiHeader></code> is retained, but for TAN purposes, the contents do
               not matter. If your <code>&lt;teiHeader></code> has any kind of metadata relevant to
               TAN users, you will need to copy and modify the data for <code>&lt;tan:head></code>.
               You must follow the TAN rules for head (see <xref linkend="metadata_head"/> and the
               TAN-T <xref linkend="tan-t_declarations"/>). You may find that some of the material
               you put in <code>&lt;teiHeader></code> is not expected in <code>&lt;head></code> and
               that some of the expectations of <code>&lt;head></code> are nowhere in your
                  <code>&lt;teiHeader></code>.</para>
            <para>The opening tage of <code>&lt;tan:head></code> (the sibling element between
                  <code>&lt;teiHeader></code> and <code>&lt;text></code>) will declare the TAN
               namespace to be its default, i.e., <code>&lt;head
                  xmlns="tag:textalign.net,2015:ns"></code> or <code>&lt;tan:head></code> if the
               prefix <code>tan:</code> has been defined in the rootmost element.</para>
            <para>The TEI <code>&lt;body></code> must take <code>@xml:lang</code>, and it may take
                  <code>@in-progress</code> (<xref linkend="in_progress"/>). It must take one or
                  <code>&lt;div></code>s, which, just like TAN-T files, take either only
                  <code>&lt;div></code>s or no <code>&lt;div></code>s at all. This hierarchy of
                  <code>&lt;div></code>s must be devoted to only one work. Each
                  <code>&lt;div></code> must take <code>@type</code> and <code>@n</code>.</para>
            <para>Within any leaf <code>&lt;div></code>, you may use whatever TEI markup you wish,
               to whatever level of depth or complexity. All users of your TAN-TEI file will be
               interested in the text nodes, but only a subset will care about any markup within
               leaf <code>&lt;div></code>s. For this reason, even if you change the value of
                  <code>@xml:lang</code> within a leaf <code>&lt;div></code>, there is no guarantee
               that readers or processors of your data will take it into account. Or if you try to
               represent the physical appearance of the text on the object, it is likely to be
               ignored. TAN rules on normalizing space and Unicode characters also prevails over any
               exemptions declared in TEI.</para>
            <para>As a matter of practicality, it is helpful to envision the TEI to TAN-TEI
               conversion process as falling in three steps:</para>
            <para>
               <orderedlist>
                  <listitem>
                     <para>Structure: insert new processing instructions (TAN-TEI validation files);
                        adjust rootmost element by supplying IRI name to <code>@id</code>, TAN
                        namespace to <code>@xmlns:tan</code>.</para>
                  </listitem>
                  <listitem>
                     <para>Metadata: create new <code>&lt;head></code> and populate with correct
                        metadata</para>
                  </listitem>
                  <listitem>
                     <para>Data: edit <code>&lt;body></code> to restrict the content to a single
                        work; restructure <code>&lt;body></code> content into nesting
                           <code>&lt;div></code>s with unique <code>@type</code> and <code>@n</code>
                        values.</para>
                  </listitem>
               </orderedlist>
            </para>
            <para>It has been the experience of those who have made TEI to TAN-TEI conversions that
               step 2 is the most time-consuming. The TAN <code>&lt;head></code> requires one to
               more carefully curate the metadata than does <code>&lt;teiHeader></code>.</para>
            <example>
               <title>TAN-TEI file</title>
               <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;?xml-model href="../schemas/TAN-TEI-all.rnc" type="application/relax-ng-compact-syntax"?>
&lt;?xml-model href="../schemas/TAN-T.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
&lt;TEI n="tag:textalign.net,2015:Evagrius_Praktikos_grc_Guillaumonts.TAN-TEI.001"
   xmlns="http://www.tei-c.org/ns/1.0" xmlns:tan="tag:textalign.net,2015:ns">
   &lt;teiHeader>
   ...........
   &lt;/teiHeader>
   &lt;head xmlns="tag:textalign.net,2015:ns">
   ...........
   &lt;/head>
   &lt;text>
      &lt;body xml:lang="grc">
         &lt;div div-type="p" n="">
            &lt;div div-type="t" n="1" suppress-normalization="hyph">
               &lt;pb n="482"/>
               &lt;p>ΕΥΑΓΡΙΟΥ ΜΟΝΑΧΟΥ&lt;/p>
            &lt;/div>
            &lt;div div-type="s" n="1">
               &lt;p>Ἐπειδή...&lt;/p>
            &lt;/div>
         ...........
         &lt;div div-type="t" n="1">
            &lt;pb n="496"/>
            &lt;p>ΤΟΥ ΑΥΤΟΥ ΛΟΓΟΣ ΠΡΑΚΤΙΚΟΣ &lt;/p>
            &lt;p>ΚΕΦΑΛΑΙΑ Ρ´&lt;/p>
         &lt;/div>
         &lt;div div-type="c" n="1">
            &lt;p>&lt;pb n="498"/>α´&lt;/p>
            &lt;p>Χριστιανισμός ἐστι δόγμα...&lt;/p>
         &lt;/div>
         ...........
         &lt;div div-type="e" n="1">
            &lt;p>Ἀλλὰ νῦν...&lt;/p>
         &lt;/div> 
         ...........
      &lt;/body>
   &lt;/text>
&lt;/TEI></programlisting>
            </example>
         </section>
      </chapter>
      <chapter xml:id="class_2">
         <title>Class 2 TAN files, Annotations of Texts</title>
         <para>This chapter is devoted to class 2 formats, all of which annotate class 1 files.
            Class 2 files deal with either alignment or lexico-morphology. </para>
         <para>Alignment files come in two different formats, identified by the rootmost element.
            TAN-A-div is macroscopic; TAN-A-tok, microscopic. TAN-A-div aligns any number (one or
            more) of class 1 files. It is intended for broad, general alignments of any number of
            versions of any number of works. TAN-A-tok handle pairs (and only pairs) of class 1
            files, and allows one to declare alignments with detailed specificity, certainty, and
            type. </para>
         <para>Lexico-morphology files (also called part-of-speech files), TAN-LM, are used to
            encode the lexical headwords and morphological forms of individual words in class 1
            files.</para>
         <section xml:id="class_2_common">
            <title>Common Elements</title>
            <para>The class 2 formats have been designed with the goal of making the data as human
               readable as possible. And because that data invariably points to class 1 files, it
               has been assumed that those references should be as humanly intuitive as possible. In
               ordinary conversation, when we wish to point another person to a specific part of a
               text, we generally use locators that refer to pages, paragraphs, sentences, lines,
               words, letters, and so forth, and we include relative keywords, and sometimes
               portions of the text iteslf. For example, we prefer to say "See page 4, second
               paragraph, the last four words." Or "See page 4, second paragraph, first sentence,
               second occurence of 'pull'." We generally find it difficult if not impossible to
               construct and interpret "See characters 2496-2502, 2504-2509, and 2510-2512." </para>
            <para>TAN adopts a system of referencing that imitates the form natural to humans. There
               are some unavoidable constraints. First, reference must be made to features that are
               encoded in the source XML file. So reference must be made to the reference system
               adopted by the source file, and not to altenative, overlapping reference systems.
               Second, because the sources are commited to space normalization and the flexibility
               therein entailed, it is impossible to point to space-sensitive features such as lines
               or character numbers. Therefore references to class 1 files depend upon four features
               that are relatively stable: work-versions, divisions, word tokens, and characters.
                  <emphasis>Work-versions</emphasis> are taken to be equivalent to the
                  <emphasis>sources</emphasis>, i.e., the class 1 files invoked by a class 2 file.
                  <emphasis>Divisions</emphasis> are defined by the <code>&lt;div></code> structure
               of each class 1 transcription. <emphasis>Tokens</emphasis> are defined according to
               one or more tokenization rules. And <emphasis>characters</emphasis> are defined, when
               possible, by the codepoints that make up a particular word token.</para>
            <para>This fourfold hierarchy—sources, divisions, tokens, and characters—are referred to
               with vocabulary that the editor of a class 2 file finds most useful. Sources can be
               given a nickname (through <code>@xml:id</code>), the names of division types and
               labels can be adjusted, word tokens can be referred to by number (whether from the
               beginning of a <code>&lt;div></code> or the end) or by content. Characters are always
               numbered.</para>
            <para>This approach not only makes the syntax human readable, it also mitigates
               disruptions introduced by alterations in a source. For example, if a word in a source
               transcription is deleted, the token and character references might be disrupted, but
               references to the <code>&lt;div></code> or source remain valid.</para>
            <para>The human-friendly reference system outlined above is facilitated by core
               components in the <code>&lt;head></code> and <code>&lt;body></code> of all class 2
               files.</para>
            <section xml:id="class_2_metadata">
               <title>Class 2 Metadata (<code>&lt;head></code>)</title>
               <para>All class 2 files have as their sources nothing other than class 1 files.
                  Therefore each <code>&lt;source></code> must take only a single
                     <code>&lt;IRI></code> that carries the IRI name of the source TAN-T(EI) file.
                  There must be at least one <code>&lt;location></code>. Because the rights have
                  already been declared in the source files, <code>&lt;rights-source-only></code> is
                  not allowed. For more, see above, <xref linkend="source_and_see-also"/>.</para>
               <para>Within <code>&lt;declarations></code> each class 2 file takes the following
                  children:</para>
               <table frame="all">
                  <title>Synopsis of <code>&lt;tokenization></code>,
                        <code>&lt;suppress-div-types></code>,
                        <code>&lt;implicit-div-type-refs></code>,
                     <code>&lt;rename-div-types></code>, <code>&lt;rename-div-ns></code>,
                        <code>&lt;rename></code></title>
                  <tgroup cols="7">
                     <colspec colname="c1" colnum="1" colwidth="2.9*"/>
                     <colspec colname="c3" colnum="2" colwidth="1*"/>
                     <colspec colname="c4" colnum="3" colwidth="1.03*"/>
                     <colspec colname="c5" colnum="4" colwidth="3.29*"/>
                     <colspec colname="newCol7" colnum="5" colwidth="1.87*"/>
                     <colspec colname="newCol6" colnum="6" colwidth="3.84*"/>
                     <colspec colname="c6" colnum="7" colwidth="3.99*"/>
                     <thead>
                        <row>
                           <entry>name</entry>
                           <entry>req?</entry>
                           <entry>qty</entry>
                           <entry>parent</entry>
                           <entry>attributes</entry>
                           <entry>children</entry>
                           <entry>purpose</entry>
                        </row>
                     </thead>
                     <tbody>
                        <row>
                           <entry><code>&lt;tokenization></code></entry>
                           <entry>varies</entry>
                           <entry>one</entry>
                           <entry><code>&lt;declarations></code></entry>
                           <entry><xref linkend="edit_stamp"/>?, <code>@src</code>?,
                                 <code>@which</code>?</entry>
                           <entry><xref linkend="digital_entity_metadata"/>?</entry>
                           <entry>indicate a tokenization rule to be applied to a source</entry>
                        </row>
                        <row>
                           <entry><code>&lt;suppress-div-types></code></entry>
                           <entry>no</entry>
                           <entry>one or more</entry>
                           <entry><code>&lt;declarations></code></entry>
                           <entry><xref linkend="edit_stamp"/>?, <code>@div-type-ref</code></entry>
                           <entry>data (xsd:string)</entry>
                           <entry>indicate what division types in what sources will be suppressed in
                              references</entry>
                        </row>
                        <row>
                           <entry><code>&lt;implicit-div-type-refs></code></entry>
                           <entry>no</entry>
                           <entry>one</entry>
                           <entry><code>&lt;declarations></code></entry>
                           <entry><xref linkend="edit_stamp"/>?, <code>@src</code></entry>
                           <entry>----</entry>
                           <entry>specify sources whose div types should be inferred in references
                              to that source</entry>
                        </row>
                        <row>
                           <entry><code>&lt;rename-div-types></code></entry>
                           <entry>no</entry>
                           <entry>one or more</entry>
                           <entry><code>&lt;declarations></code></entry>
                           <entry><xref linkend="edit_stamp"/>?, <code>@src</code></entry>
                           <entry><code>&lt;rename></code></entry>
                           <entry>Indicate, for a given source, div types whose <code>@xml:id</code>
                              values should be provisionally renamed for the purpose of the class 2
                              file.</entry>
                        </row>
                        <row>
                           <entry><code>&lt;rename-div-ns></code></entry>
                           <entry>no</entry>
                           <entry>one or more</entry>
                           <entry><code>&lt;declarations></code></entry>
                           <entry><xref linkend="edit_stamp"/>?, <code>@src</code>,
                                 <code>@div-type-ref</code></entry>
                           <entry><code>&lt;rename></code></entry>
                           <entry>Indicate, for a given source and div type, <code>@n</code> values
                              that should be provisionally renamed for the purpose of the class 2
                              file.</entry>
                        </row>
                        <row>
                           <entry><code>&lt;rename></code></entry>
                           <entry>yes</entry>
                           <entry>one or more</entry>
                           <entry><code>&lt;rename-div-types></code> or
                                 <code>&lt;rename-div-ns></code></entry>
                           <entry><code>@old</code>, <code>@new</code></entry>
                           <entry>----</entry>
                           <entry>Specify labels that should be renamed for the sake of the class 2
                              file.</entry>
                        </row>
                     </tbody>
                  </tgroup>
               </table>
               <para>Most class 2 files must be able to name or number word-tokens in a
                  transcription. All class 2 files that require tokenization (i.e., TAN-A-tok and
                  TAN-LM) must have under <code>&lt;declarations></code> one or more
                     <code>&lt;tokenization></code>s that can be applied to every language in every
                  source. Class 2 files that do not require tokenization (i.e., TAN-A-div) must
                  include <code>&lt;tokenization></code> only if the file uses elements (e.g.,
                     <code>&lt;split-leaf-div-at></code>) that assume tokenization. </para>
               <para xml:id="tokenization">Each <code>&lt;tokenization></code> takes, in addition to
                  the optional Edit Stamp, <code>@src</code> to specify which sources (suppressed in
                  TAN-LM, which has only one source) and either <code>@which</code> or a <xref
                     linkend="digital_entity_metadata"/> to a single TAN-R-tok file. The attribute
                     <code>@which</code> takes either an id reference to a
                     <code>&lt;recommended-tokenization></code> in the sources indicated by
                     <code>@src</code> or a keyword to one of the core TAN tokenization files
                     (<code>general-1</code>, <code>general-words-only-1</code>, and
                     <code>precise-1</code>; see <xref linkend="recommended-tokenizations"/>). If
                  neither the recommended nor core tokenization methods are suitable, you may point
                  instead to another TAN-R-tok file through the <xref
                     linkend="digital_entity_metadata"/>. See <xref linkend="tan-r-tok"/> for more
                  on these files.</para>
               <caution>
                  <para>It is not predictable whether a regular expression engine will include or
                     exclude combining characters in a search. You will need to worry about this
                     only if you are working with texts that use combining characters. For more
                     details see <xref linkend="regular_expressions"/> and <xref
                        linkend="combining_characters"/>.</para>
               </caution>
               <para>There may be some cases where a source has a div type that is extraneous to
                  referencing the text. A single optional <code>&lt;suppress-div-types></code> may
                  be used to specify division types that the aligner wishes to ignore.
                     <code>&lt;suppress-div-types></code> takes, in addition to the optional Edit
                  Stamp (<xref linkend="edit_stamp"/>), <code>@div-type-ref</code>, which takes one
                  or more space-delimited id references to div types in the source file.</para>
               <caution>
                  <para>Any <code>&lt;suppress-div-types></code> invoked where omission of the div
                     type does not preserve the Leaf Div Uniqueness Rule (see <xref
                        linkend="leaf_div_uniqueness_rule"/>) will result in an error upon
                     validation.</para>
               </caution>
               <para xml:id="implicit-div-type-refs">A single
                     <code>&lt;implicit-div-type-refs></code> is allowed. This otherwise empty
                  element takes only <code>@src</code>, which lists the sources for which all div
                  types will be suppressed in references to that source. This feature allows you to
                  use briefer flattened references, but it does not preclude use of longer
                  references (see <xref linkend="attr_ref"/>). This feature is disallowed for
                  sources where ignoring the types would result in duplicate flattened references
                  and therefore ambiguity. For example, a source that has <code>question.13</code>
                  followed by <code>answer.13</code> would make the simple flattened reference
                     <code>13</code> impossible to interpret. The feature is also disallowed for
                  sources that have an <code>@n</code> value that is empty. The only exception to
                  this rule are cases where <code>&lt;rename-div-ns></code> is used to convert a
                  numeration system to Arabic numerals; in those cases <code>n=""</code> will be
                  interpreted to mean <code>n="0"</code>. For any <code>@src</code>, either all or
                  no sources must be declared in <code>&lt;implicit-div-type-refs></code>.
                  References to a mix of implicit and explicit div type sources are
                  disallowed.</para>
               <para>One or more <code>&lt;rename-div-types></code> may be invoked.
                     <code>@src</code> specifies the applicable sources. The sole children of the
                  element are one or more <code>&lt;rename></code>s, which through <code>@old</code>
                  and <code>@new</code> specify the old label and the new one. One or more
                     <code>&lt;rename-div-ns></code> may be used to swap the values of specific
                     <code>@n</code>s for one or more div-types of one or more sources (defined
                  through <code>@div-type-ref</code> and <code>@src</code>, respectively). </para>
               <para><code>&lt;rename-div-types></code> is useful for cases where an aligner wishes
                  to use a different abbrevation for the same div type. This can be especially
                  helpful in an alignment file, to avoid confusion in references to works that use
                  different abbreviations for the same kind of division. Changing the div type does
                  not affect the underlying definition. If you are writing a TAN-A-div file and you
                  wish to equate div types defined differently (they do not have overlapping
                     <code>&lt;IRI></code> values), you must use <code>&lt;equate-div-types></code>,
                  discussed below (<xref linkend="tan-a-div"/>).</para>
               <para>Similarly, <code>&lt;rename-div-ns></code> provides a convenient way to rename
                     <code>@n</code> values. It may be useful in cases where you wish to use
                  division labels that are more familiar, or that are identical to the vocabulary of
                  another source invoked in the class 2 file. For example, if one source numbers the
                  surahs of the Qur'an and another uses the traditional names, this element can be
                  used to reconcile those differences, by assigning names to numbers, or vice versa.
                  Or it can be used to adopt labels that would be easier to use in the alignment
                  file. In addition, this feature can be used to convert Roman or alphabetic
                  numerals to Arabic. In these cases, the content should be the special elements
                     <code>&lt;rename old="#i" new="#1"/></code> (indicates a change from Roman
                  numerals to Arabic) or <code>&lt;rename old="#a" new="#1"/></code> (change from
                  letter numeration to Arabic).</para>
               <para><code>&lt;rename-div-ns></code> has potentially more impact than
                     <code>&lt;rename-div-types></code>. Whereas the latter points to division types
                  that are defined by the <code>&lt;IRI></code> value under
                     <code>&lt;div-type></code>, and does not change that definition, the former
                  points to and provisionally alters the value of <code>@n</code> in one or more
                     <code>&lt;div></code>s. Because <code>&lt;rename-div-ns></code> effectively
                  changes the actual value, it must preserve the Leaf Div Uniqueness Rule.
                  Furthermore, in a TAN-A-div file, this kind of renaming changes the default
                  behavior of the alignment. See <xref linkend="tan-a-div"/>.</para>
               <example>
                  <title><code>&lt;filter></code>: <code>&lt;tokenization></code> through
                        <code>@which</code></title>
                  <para>
                     <programlisting>   ...........
   &lt;declarations>
      ...........
      &lt;tokenization src="A-fra" which="general-1"/>
      ...........
   &lt;/declarations>
   ...........</programlisting>
                  </para>
               </example>
               <example>
                  <title><code>&lt;declarations></code>: <code>&lt;tokenization></code> through IRI
                     + name pattern</title>
                  <para>
                     <programlisting>   ...........
   &lt;declarations>
      ...........
      &lt;tokenization src="eng">
         &lt;IRI>tag:textalign.net,2015:tokenization:eng.1&lt;/IRI>
         &lt;name>Tokenization pattern for English, in Penn Treebank style&lt;/name>
         &lt;location when-accessed="2015-03-17">../TAN-R-tok/tok.eng.1.xml&lt;/location>
      &lt;/tokenization>
      ...........
   &lt;/declarations>
   ...........</programlisting>
                  </para>
               </example>
               <example>
                  <title><code>&lt;declarations></code>:
                     <code>&lt;suppress-div-types></code></title>
                  <para>
                     <programlisting>   ...........
   &lt;declarations>
      ...........
      &lt;suppress-div-types div-type-ref="stanza" src="ps-eng"/>
      ...........
   &lt;/declarations>
   ...........</programlisting>
                  </para>
                  <caption>
                     <para>In this example, Psalm 119 (LXX 118) has been subdivided by one TAN-T
                        source into its traditional 22 stanzas (one for each letter in the Hebrew
                        alphabet) before it has been subdivided into verses. The aligner chooses to
                        suppress them, so that values of <code>@ref</code> can be more brief, e.g.,
                           <code>psalm.119:stanza.3:v.46</code> can be rendered simply as
                           <code>psalm.119:v.46</code>).</para>
                  </caption>
               </example>
               <example>
                  <title><code>&lt;declarations></code>: <code>&lt;rename-div-types></code></title>
                  <para>
                     <programlisting>   ...........
   &lt;declarations>
      ...........
      &lt;rename-div-types src="A-grc">
         &lt;rename old="βιβ" new="bk"/>
      &lt;/rename-div-types>
      ...........
   &lt;/declarations>
   ...........</programlisting>
                  </para>
                  <caption>
                     <para>The above <code>&lt;rename-div-types></code> changes the label for the
                        division type book, from an abbreviation in the Greek alphabet to one in the
                        Roman. </para>
                  </caption>
               </example>
               <example>
                  <title><code>&lt;declarations></code>: <code>&lt;rename-div-ns></code></title>
                  <para>
                     <programlisting>   ...........
   &lt;declarations>
      ...........
      &lt;rename-div-ns src="A-grc" div-type-ref="bk">
         &lt;rename old="γεν" new="Gen"/>
         &lt;rename old="εξοδ" new="Ex"/>
         &lt;rename old="λευ" new="Lev"/>
      &lt;/rename-div-ns>
      &lt;rename-div-ns src="A-lat" div-type-ref="bk">
         &lt;rename old="#i" new="#1"/>
      &lt;/rename-div-ns>
      ...........
   &lt;/declarations>
   ...........   </programlisting>
                  </para>
                  <caption>
                     <para>This example illustrates both label changes and numeration system changes
                        (from Roman numerals to Arabic).</para>
                  </caption>
               </example>
            </section>
            <section xml:id="class_2_body">
               <title>Class 2 Data Patterns (<code>&lt;body></code>)</title>
               <para>Because all class 2 files have exclusively class 1 files as sources, some
                  patterns recur throughout the <code>&lt;body></code> of class 2 files.</para>
               <section xml:id="tok_pattern">
                  <title><code>&lt;tok></code></title>
                  <table frame="all">
                     <title>Synopsis of <code>&lt;tok></code></title>
                     <tgroup cols="7">
                        <colspec colname="c1" colnum="1" colwidth="1.91*"/>
                        <colspec colname="c3" colnum="2" colwidth="1*"/>
                        <colspec colname="c4" colnum="3" colwidth="2.12*"/>
                        <colspec colname="c5" colnum="4" colwidth="2.76*"/>
                        <colspec colname="newCol7" colnum="5" colwidth="5.38*"/>
                        <colspec colname="newCol6" colnum="6" colwidth="1.54*"/>
                        <colspec colname="c6" colnum="7" colwidth="3.59*"/>
                        <thead>
                           <row>
                              <entry>name</entry>
                              <entry>req?</entry>
                              <entry>qty</entry>
                              <entry>parent</entry>
                              <entry>attributes</entry>
                              <entry>children</entry>
                              <entry>purpose</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry><code>&lt;tok></code></entry>
                              <entry>yes</entry>
                              <entry>one or more</entry>
                              <entry>varies</entry>
                              <entry><xref linkend="edit_stamp"/>?, <code>@cert</code>?*,
                                    <code>@src</code>, <code>@ref</code>, <code>@ord</code>?,
                                    <code>@val</code>?, <code>@chars</code>?</entry>
                              <entry>------</entry>
                              <entry>refer to a word token or word token fragment</entry>
                           </row>
                        </tbody>
                     </tgroup>
                     <caption>
                        <para>* not true for TAN-A-div, which takes no certainty</para>
                     </caption>
                  </table>
                  <para><code>&lt;tok></code> takes, in addition to an optional <xref
                        linkend="edit_stamp"/>, the following attributes:</para>
                  <para><code>@cert</code> indicates the level of confidence an editor has in the
                     statement made about the tokens referenced. This attribute is not allowed in
                     the TAN-A-div format. See <xref linkend="attr_cert"/>.</para>
                  <para><code>@src</code> refers to one or more sources. This attribute does not
                     exist in class 2 files with only one source (TAN-LM). In class 2 files with
                     only two sources (TAN-A-tok), <code>@src</code> may take no more than one
                     value. All others (TAN-A-div) allow multiple values.</para>
                  <para><code>@ref</code> takes a sequence of references to sources. See <xref
                        linkend="attr_ref"/> for a full discussion.</para>
                  <para>One or more word tokens are referred to either through a numerical value (or
                     range of numbers) for <code>@ord</code> or a string value for <code>@val</code>
                     or a combination of the two (see <xref linkend="attr_ord_and_val"/> for the
                     pattern). </para>
                  <para><code>@chars</code> takes a sequence of numbers (constructed like
                        <code>@ord</code>) that state an exact range of letters or characters
                     (prefix, infixes, or suffix). This attribute is not allowed in TAN-A-div files.<caution>
                        <para><code>@chars</code> is not allowed for tokens that contain combining
                           characters. See <xref linkend="combining_characters"/>.</para>
                     </caution></para>
                  <para>There may be times when an editor needs a quick reminder as to how many
                     words or characters are allowed. As a convenience, a question mark may be
                     placed in <code>@ord</code> or <code>@chars</code>. Upon validation there will
                     be both an error message for the malformed content (a question mark is not
                     allowed) and a warning message indicating the maximal value allowed. The report
                     does not take into account the presence of <code>@val</code>. That is, it
                     returns the greatest value of <code>@ord</code> and <code>@chars</code> that is
                     allowed.</para>
                  <para><code>&lt;tok></code> therefore allows multiple values in each of four
                     attributes, all distributed. That is, any assertion involving a
                        <code>&lt;tok></code> applies to every set of characters in every word token
                     in every <code>@ref</code> in every <code>@src</code>. For example, if
                        <code>@src</code>, <code>@ref</code>, and <code>@ord</code> each have three
                     values, then that <code>&lt;tok></code> names a sequence of twenty-seven
                     tokens. (This allowance facilitates more terse and humanly readable
                        <code>&lt;body></code>s.)</para>
               </section>
               <section xml:id="attr_ref">
                  <title><code>@ref</code></title>
                  <para>Recall that the transcriptions in TAN-T(EI) files are segmented and
                     structured into a treelike hierarchy of nested <code>&lt;div></code>s, each one
                     with a label (<code>@n</code>) and a division type (<code>@type</code>). The
                     validation rules for class 1 files stipulate that leaf <code>&lt;div></code>s
                     must have unique references. That is, for each leaf <code>&lt;div></code>,
                     proceed from the highest ancestor <code>&lt;div></code> and move leafward,
                     concatenating the values of <code>@type</code> and <code>@n</code> along the
                     way. The result should be unique among all other leaf <code>&lt;div></code>s. </para>
                  <para>All class 2 files refer to parts of a class 1 source through a flattened
                     reference (<xref linkend="leaf_div_uniqueness_rule"/>). A flattened reference
                     is the concatenated value of the <code>@type</code>s and <code>@n</code>s of
                     all self and ancestral <code>&lt;div></code>s, joined by non-word characters as
                     delimiters, and perhaps substituted with their new values if
                        <code>&lt;rename-div-types></code> or <code>&lt;rename-div-ns></code> have
                     been invoked (see <xref linkend="metadata_head"/>). The delimiter to be used to
                     separate <code>@n</code> and <code>@type</code> values and pairs of
                        <code>@n</code> + <code>@type</code> values is completely arbitrary, but
                     common punctuation is recommended. Hyphens and commas are allowed, but not
                     recommended, since they are used specially to create ranges of
                     references.</para>
                  <para>Take, for example, book 3 chapter 4 section 2 in a source transcription that
                     uses the abbreviations <code>bk</code>, <code>c</code>, and <code>s</code> for
                     the division types. When flattened, the reference becomes something like
                        <code>bk.3:c.4:s.2</code>. <note xml:id="flattened_refs_punctuation">
                        <title>Punctuation in flattened references</title>
                        <para>The periods and colons in <code>bk.3:c.4:s.2</code> are entirely
                           arbitrary. Other forms, such as <code>bk 3/c 4/s 2</code>
                           <code>bk.3.c.4.s.2</code>
                           <code>bk.3:c;4|s=2</code> are permissible and will be treated
                           identically. But for the sake of those who must read your data, it is
                           best to be clear and consistent and not to use misleading separators.
                           Punctuation acts to delimit elements in a hierarchy, so the values being
                           joined are in a hypotactic, not paratactic, relationship. You should
                           avoid any punctuation that incorrectly suggests coordination, such as the
                           ampersand or the comma. In these guidelines, a period is used to delimit
                              <code>@n</code> and <code>@type</code> values, and a colon is used to
                           chain <code>@n</code>-<code>@type</code> pairs.</para>
                        <para>It is important to avoid the use of the space as a delimiter in cases
                           where unlabeled <code>&lt;div></code>s are used. For example, for an
                           unnumbered preface, the preferred flattened reference would be
                              <code>"preface."</code> and not <code>"preface "</code>.</para>
                     </note></para>
                  <para>Many sources will be structured to allow you to declare the div types to be
                     implicit (see <xref linkend="implicit-div-type-refs"/>). In those cases either
                     the longer form or a shorter one may be used: <code>3:4:2</code>.</para>
                  <para>In some cases, <code>@ref</code> may take a sequence of references,
                     constructed by taking two or more flattened references and joining them with a
                     hyphen <code>-</code> (for range) or a comma <code>,</code> (for union). In any
                     range, the division referred to on the left should precede that on the right
                     according to document order. Two flattened references joined by a hyphen
                     signify an entire range of leaf <code>&lt;div></code>s. A comma indicates the
                     union of references or ranges on either side. Flattened references must be
                     spelled in full. For example, <code>bk.3:c.4:s.2 - bk.3:c.4:s.4 ,
                        bk.3:c.4:s.8</code> and <code>3:4:2 - 3:4:4 , 3:4:8</code> are correct ways
                     to refer to sections 2, 3, 4, and 8 of the fourth chapter of book three. </para>
                  <para>In some cases, a range of references must be siblings (i.e., <code>bk.3 -
                        bk.3:c.4:s.4</code> would be disallowed), as, for example, in elements for
                     which <code>@distribute</code> (<xref linkend="attr_distribute"/>) is
                        <code>true</code>.</para>
               </section>
               <section xml:id="attr_ord_and_val">
                  <title><code>@ord</code> and <code>@val</code></title>
                  <para>To point to a token, one of three methods may be used.</para>
                  <para>
                     <orderedlist>
                        <listitem>
                           <para><emphasis role="italic"><code>@ord</code> alone</emphasis>. Under
                              this method, one or more digits, or the phrase <code>last</code> or
                                 <code>last-</code> plus a digit, joined by hyphens or commas
                              indicate one or more token numbers. For example, <code>2, 4 - 6,
                                 last-2 - last</code> refers to the second, fourth, fifth, sixth,
                              antepenult, penult, and final tokens in a sequence of word
                              tokens.</para>
                        </listitem>
                        <listitem>
                           <para><emphasis role="italic"><code>@val</code> alone</emphasis>. Under
                              this method, a single token is picked by means of a string value
                              equivalent to the token. For example, <code>@val = "bird"</code>,
                              points to the first occurence of the token <code>bird</code>.</para>
                        </listitem>
                        <listitem>
                           <para><emphasis role="italic"><code>@ord</code> and <emphasis
                                    role="italic"><code>@val</code></emphasis> together.</emphasis>
                              Under this method, specific occurences of a token are picked. For
                              example, <code>@val="bird" @ord="2, 4"</code> picks the second and
                              fourth occurences of the token <code>bird</code>.</para>
                        </listitem>
                     </orderedlist>
                  </para>
                  <para>If <code>@ord</code> points to an ordinal value of a word token or token
                     value beyond the acceptable range for every <code>@src</code> and
                        <code>@ref</code>, an error will be generated. This is true not just for
                     absolute digits, but those combined with <code>last</code>. For example, the
                     attribute combination <code>val="bird" ord="last-5"</code> will produce an
                     error if the word token <code>bird</code> does not occur more than five
                     times.</para>
                  <para>The numerical value to which the keyword <code>last</code> resolves depends
                     upon the context of each source and ref.</para>
                  <para>There may be times when an editor needs a quick reminder as to how many
                     words or characters are allowed. As a convenience, a question mark may be
                     placed in <code>@ord</code> (the following is true also for
                     <code>@chars</code>). Upon validation there will be both an error message for
                     the malformed content (a question mark is not allowed) and a warning message
                     indicating the maximal value allowed. The report does not take into account the
                     presence of <code>@val</code>. That is, it returns the greatest value of
                        <code>@ord</code> that is allowed.</para>
               </section>
               <section xml:id="attr_cert">
                  <title><code>@cert</code></title>
                  <para><code>@cert</code> takes a decimal numeral from 0 to 1 or else
                        <code>high</code> or <code>low</code>, which are to be interpreted as
                     meaning "is probably" and "is probably not" respectively. </para>
                  <para>Assertions of certainty apply to a given statement absent inheritable
                     attributes (see <xref linkend="inheritable_attributes"/>), which establish
                     assumptions made for a given range of data before confidence is expressed.
                     Rather, <code>@cert</code> is to be interpreted to mean: "Assuming the
                     abovementioned inheritable attributes to be true, I have <code>@cert</code>
                     confidence about the following data:...."</para>
               </section>
            </section>
            <section xml:id="inheritable_attributes">
               <title>Inheritable attributes</title>
               <para>For class 2 formats, <code>&lt;body></code> and its descendants may take
                  attributes whose values are defined in <code>&lt;head></code>. This special class
                  of attributes are termed <emphasis role="italic">inheritable
                  attributes</emphasis>. Each descendant of <code>&lt;body></code> takes the value
                  of the attribute found in the closest ancestor, if not present in the element
                  itself. </para>
               <para>Each TAN format has been designed to limit inheritable attributes to the most
                  critical concepts for the field of inquiry covered by that format. From the
                  perspective of computability, there is no reason to restrict the number of
                  inheritable attributes; from a human perspective there is, because each new
                  inheritable attribute introduces a new parameter that has the potential to
                  exponentially increase file complexity.</para>
               <para>Every inheritable attribute is asserted without qualification. That is, if a
                  inheritable attribute occurs alongside or under <code>@cert</code>, the latter
                  does not apply to the former. Put another way, the combination of
                     <code>@cert</code> and a inheritable attribute <code>@x</code> are to be
                  interpreted to mean: "Assuming <code>@x</code> to be true, I have
                     <code>@cert</code> confidence about the following data:...."</para>
               <para>TAN inheritable attributes are as follows:<table frame="all">
                     <title>Inheritable attributes</title>
                     <tgroup cols="6">
                        <colspec colname="c2" colnum="1" colwidth="2.29*"/>
                        <colspec colname="newCol2" colnum="2" colwidth="1.05*"/>
                        <colspec colname="newCol3" colnum="3" colwidth="1.01*"/>
                        <colspec colname="newCol4" colnum="4" colwidth="1*"/>
                        <colspec colname="c3" colnum="5" colwidth="3.04*"/>
                        <colspec colname="c4" colnum="6" colwidth="3.48*"/>
                        <thead>
                           <row>
                              <entry>Attribute name</entry>
                              <entry>A-tok</entry>
                              <entry>A-div</entry>
                              <entry>LM</entry>
                              <entry>refers to <code>xml:id</code> of</entry>
                              <entry>specifies</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry><code>@ed-who</code></entry>
                              <entry>y</entry>
                              <entry>y</entry>
                              <entry>y</entry>
                              <entry><code>&lt;agent></code></entry>
                              <entry>Agent responsible for the data. See <xref linkend="agent"
                                 />.</entry>
                           </row>
                           <row>
                              <entry><code>@reuse-type</code></entry>
                              <entry>y</entry>
                              <entry>–</entry>
                              <entry>–</entry>
                              <entry><code>&lt;reuse-type></code></entry>
                              <entry>The kind of textual reuse activity under consideration. See
                                    <xref linkend="reuse_type"/>.</entry>
                           </row>
                           <row>
                              <entry><code>@bitext-relation</code></entry>
                              <entry>y</entry>
                              <entry>–</entry>
                              <entry>–</entry>
                              <entry><code>&lt;bitext-relation></code>
                              </entry>
                              <entry>The relationship between two source-bearing objects. See <xref
                                    linkend="bitext_relation"/>.</entry>
                           </row>
                           <row>
                              <entry><code>@lexicon</code></entry>
                              <entry>–</entry>
                              <entry>–</entry>
                              <entry>y</entry>
                              <entry><code>&lt;lexicon></code></entry>
                              <entry>Thet lexicon that is being used. See <xref
                                    linkend="decl_lexicon"/>.</entry>
                           </row>
                           <row>
                              <entry><code>@morphology</code></entry>
                              <entry>–</entry>
                              <entry>–</entry>
                              <entry>y</entry>
                              <entry><code>&lt;morphology></code></entry>
                              <entry>The rules for morphology or parts of speech. See <xref
                                    linkend="decl_grammar"/>.</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table></para>
            </section>
         </section>
         <section xml:id="alignment_principles">
            <title>Alignments: Principles and Assumptions</title>
            <para>At the heart of class 2 are alignment files. TAN distinguishes two types of
               alignment. </para>
            <para>The first, aiming at breadth and extent, collects multiple versions of a work to
               present or study them in parallel. Examples from antiquity include the Rosetta Stone
               and Origen's <emphasis role="italic">Hexapla</emphasis>. This macroscopic alignment
               helps a reader notice similarities and differences among comparable texts. </para>
            <para>The second, aiming at depth and precision, isolates two versions of a work and
               explains how and why certain letters, words, or phrases in one version were omitted,
               retained, or changed in the other. This microscopic alignment characterizes the modus
               operandi of very precise, detailed commentaries on texts and their translations. One
               could also see the apparatus criticus of a critical edition as a kind of microscopic
               alignment.</para>
            <para>Although the two types of alignment can be easily combined, in practice they tend
               to be separate. Similarly, TAN alignment has been distinguished in two formats, one,
                  <emphasis role="bold">TAN-A-div</emphasis>, to facilitate the general alignment of
               any number of class 1 files; the other, <emphasis role="bold">TAN-A-tok</emphasis>,
               the detailed alignment of any two. For cases where both precision and breadth are
               required, multiple files of the latter should be used.</para>
            <para>TAN aligments attest to acts of translating, paraphrasing, revising, quoting,
               summarizing, and so forth. All these are treated as types of text reuse, where one or
               more texts, usually called in translation studies the <emphasis>source</emphasis> (or
                  <emphasis>sources</emphasis>), are transformed into a new text, customarily called
               the <emphasis>target</emphasis>. Text reuse has directionality and is asymmetrical.
               But many times we deal with texts where the original lines of direction are contested
               or unknown. In those cases, it is misleading to refer to either of the texts as a
               source or a target. Indeed, they may in fact derive from a common source, or be the
               result of multiple generations of copying and translating. In these guidelines,
               therefore, we avoid the term <emphasis role="italic">target</emphasis> altogether,
               and when we use the word <emphasis role="italic">source</emphasis>, we are referring
               only to one of the class 1 files upon which the alignment depends.</para>
            <para>Consequently, the first <code>&lt;source></code> in an alignment file's
                  <code>&lt;head></code> does not necessarily point to a version older than the
               others. But it will be processed first, and will therefore be the foundation or base
               against which subsequent sources will be aligned. It is usually a good idea to list
               as the first <code>&lt;source></code> the version that is most complete or most
               important to a given alignment.</para>
            <para>Take for example a work such as the <emphasis role="italic">Life of Saint
                  Paul</emphasis> (ca. early fourth century CE), which survives in both ancient
               Greek and Latin versions. The original language of composition is disputed. A TAN-A
               file that lists the Greek source first and the Latin second does not imply that the
               text was written in Greek. All it means is that anyone processing the TAN file should
               begin with the Greek before going to the Latin.</para>
         </section>
         <section xml:id="tan-a-div">
            <title>Division-Based Alignments (<code>&lt;TAN-A-div></code>)</title>
            <para>The TAN format for macroscopic, division-based alignment, TAN-A-div, is dedicated
               to aligning any number of versions of any number of works on the basis of the
                  <code>&lt;div></code>s in the sources. A TAN-A-div file is technically not an
               alignment per se. Rather, it is an alignment constructor. That is, a TAN-A-div file
               specifies parameters to be followed to generate a desired alignment. It is up to a
               processor to use that TAN-A-div file to create a byproduct (HTML, pdf, word
               processing document, etc.) that will be recognizable to most people as an
               alignment.</para>
            <para>Transcribers, despite their best intentions, may fail to produce transcriptions of
               the same work that align. Perhaps the works or div types are not defined identically,
               or perhaps one version follows a reference system at odds with another. TAN-A-div has
               been designed to allow you to reconcile inconsistencies, and to explicitly declare
               alignments that a computer might not be able to detect automatically. </para>
            <para>Every source invoked by a TAN-A-div will have alignments inferred wherever
               possible, and when not overridden explicitly. If the sources do not align exactly, or
               as one wishes, the format may be used to adjust and refine the alignment of the
               sources, even down to the word level. </para>
            <section>
               <title>Rootmost Element and Header</title>
               <para>The rootmost element of a TAN division-based alignment file is
                     <code>&lt;TAN-A-div></code>.</para>
               <para>Under <code>&lt;head></code>, some special rules apply to TAN-A-div
                  types.</para>
               <para>One or more <code>&lt;source></code>s must be declared (<xref
                     linkend="source_and_see-also"/>). It may seem strange to have an alignment file
                  with only a single source, but this is allowed, to facilitate self-alignment
                  (i.e., to indicate places where a source reuses itself). Every
                     <code>&lt;source></code> must take an <code>@xml:id</code> for references to
                  the source.</para>
               <para><code>&lt;declarations></code> takes zero or more of the four declarations
                  common to class 2 files: <code>&lt;tokenization></code>,
                     <code>&lt;suppress-div-types></code>, <code>&lt;rename-div-types></code>,
                     <code>&lt;rename-div-ns></code>. See <xref linkend="class_2_common"/>.</para>
               <para><code>&lt;rename-div-ns></code> can be used on occasion for simple points of
                  reconciliation, and therefore alignment. For example, if two versions of the same
                  work assign the same book two different <code>@n</code> values, e.g., "john" and
                  "jn" for the New Testament gospel, then this element can be used to reconcile
                  those differences. But it should not be used to reconcile more complex
                  differences. And although it can be used to reconcile alternative numbering
                  systems, that is a convenience, not a necessity of the alignment. Roman and
                  alphabetic numbering systems are to be detected by preprocessors and to be treated
                  identically to their Arabic numeral counterparts.</para>
               <para>The assumptions of an aligner are opaque in the TAN-A-div format. A TAN-A-div
                  file says, in essence, "Please align the following sources," but it does not say
                  why the alignment is requested, and it does not make any statements about the
                  relationship that holds between the various sources. Indeed, a TAN-A-div file
                  could be used to align passages that have no apparent relationship (to what end
                  might be unclear). If it is important to convey assumptions about how the text has
                  been reused, the TAN-A-tok format should be used.</para>
               <example>
                  <title>TAN-A-div <code>&lt;head></code></title>
                  <para>
                     <programlisting>      ...........
   &lt;head>
      &lt;name>div-based alignment of multiple versions of Ring o Roses&lt;/name>
      &lt;rights-excluding-sources rights-holder="park">
         &lt;IRI>http://creativecommons.org/licenses/by/4.0/deed.en_US&lt;/IRI>
         &lt;name>Creative Commons Attribution 4.0 International License&lt;/name>
         &lt;desc>This data file is licensed under a Creative Commons Attribution 4.0 International
             License. The license is granted independent of rights and licenses associated with
             the source. &lt;/desc>
      &lt;/rights-excluding-sources>
      &lt;source xml:id="eng-uk">
         &lt;IRI>tag:parkj@textalign.net,2015:ring01&lt;/IRI>
         &lt;name>Transcription of ring around the roses in English (UK)&lt;/name>
         &lt;location when-accessed="2015-03-10">../TAN-T/ring-o-roses.eng.1881.xml&lt;/location>
      &lt;/source>
      &lt;source xml:id="eng-us">
         &lt;IRI>tag:parkj@textalign.net,2015:ring02&lt;/IRI>
         &lt;name>Transcription of ring around the roses in English (US)&lt;/name>
         &lt;location when-accessed="2014-08-13">../TAN-T/ring-o-roses.eng.1987.xml&lt;/location>
      &lt;/source>
      &lt;source xml:id="ger">
         &lt;IRI>tag:hans@beispiel.com,2014:ringel&lt;/IRI>
         &lt;name>Transcription of an ancestor of Ring around the roses in German&lt;/name>
         &lt;location when-accessed="2014-08-13">http://beispiel.com/TAN-T/ringel.xml&lt;/location>
         &lt;location when-accessed="2014-08-13">../TAN-T/ring-o-roses.deu.1897.xml&lt;/location>
      &lt;/source>
      &lt;source xml:id="eng-1790">
         &lt;IRI>tag:parkj@textalign.net,2015:ring04&lt;/IRI>
         &lt;name>TAN transcription of 1790 version of Ring around the Rosie reported by Newell in
             1883&lt;/name>
         &lt;location when-accessed="2014-10-28">../TAN-T/ring-o-roses.eng.1957.xml&lt;/location>
      &lt;/source>
      &lt;declarations/>
      &lt;agent xml:id="park" roles="creator">
         &lt;IRI>tag:parkj@textalign.net,2015:self&lt;/IRI>
         &lt;name xml:lang="eng">Jenny Park&lt;/name>
      &lt;/agent>
      &lt;role xml:id="creator">
         &lt;IRI>http://schema.org/creator&lt;/IRI>
         &lt;name xml:lang="eng">creator&lt;/name>
      &lt;/role>
      &lt;change when="2014-08-14" who="park">Started file&lt;/change>
   &lt;/head>
      ...........   </programlisting>
                  </para>
               </example>
               <example>
                  <title>TAN-A-div <code>&lt;declarations></code></title>
                  <para>
                     <programlisting>      ...........
   &lt;declarations>
      &lt;suppress-div-types src="Pss-heb" div-type-ref="stanza"/>
      &lt;tokenization src="Pss-heb Pss-grc" which="general-words-only-1"/>
      &lt;rename-div-types src="Pss-grc">
         &lt;rename old="ch" new="ps"/>
      &lt;/rename-div-types>
   &lt;/declarations>
      ...........   </programlisting>
                  </para>
               </example>
            </section>
            <section>
               <title>Data (<code>&lt;body></code>)</title>
               <para>
                  <table frame="all">
                     <title>Synopsis of TAN-A-div <code>&lt;body></code></title>
                     <tgroup cols="7">
                        <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                        <colspec colname="c3" colnum="2" colwidth="1*"/>
                        <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                        <colspec colname="c5" colnum="4" colwidth="2.7*"/>
                        <colspec colname="newCol7" colnum="5" colwidth="2.99*"/>
                        <colspec colname="newCol6" colnum="6" colwidth="3.1*"/>
                        <colspec colname="c6" colnum="7" colwidth="4.21*"/>
                        <thead>
                           <row>
                              <entry>name</entry>
                              <entry>req?</entry>
                              <entry>qty</entry>
                              <entry>parent</entry>
                              <entry>attributes</entry>
                              <entry>children</entry>
                              <entry>purpose</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry><code>&lt;body></code></entry>
                              <entry>yes</entry>
                              <entry>one</entry>
                              <entry><code>&lt;TAN-A-div></code></entry>
                              <entry><xref linkend="in_progress"/>?, <xref linkend="edit_stamp"
                                 />?</entry>
                              <entry><code>&lt;equate-works></code>*,
                                    <code>&lt;equate-div-types></code>*,
                                    <code>&lt;split-leaf-div-at></code>*,
                                 <code>&lt;realign></code>*, <code>&lt;align></code>*</entry>
                              <entry>contains data</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table>
               </para>
               <para>The TAN-A-div <code>&lt;body></code> may take <xref linkend="in_progress"/>. It
                  may take an edit stamp (see <xref linkend="edit_stamp"/>). It may take various
                  elements, described below. But all these are optional. </para>
               <para>A TAN-A-div may have an empty <code>&lt;body></code> because the format by
                  default requests a greedy alignment. That is, it states, in effect, "Take the list
                  of sources in the header. First group (align) them by work, then by
                     <code>&lt;div></code>s according to flattened references." </para>
               <para>A processor will create groups of works by looking for matches in the sources'
                     <code>declarations/work/IRI</code> values. To those matches will be added any
                  sources you claim should be treated as having equivalent works. Then within each
                  work group, the processor will standardize the <code>@type</code> and
                     <code>@n</code> values that make up each leaf <code>&lt;div></code>'s
                  reference, first by using the sources' <code>declarations/div-type/IRI</code>
                  values to create groups of division types and second by normalizing any
                  nonstandard numeration systems. The resultant normalization is then used to create
                  groups of leaf <code>&lt;div></code>s that share the same flattened reference
                  numbers. (See <xref linkend="leaf_div_uniqueness_rule"/>.)</para>
               <para>If sources to be aligned share <code>&lt;IRI></code> values for
                     <code>&lt;work></code>s and <code>&lt;div-type></code>s, and use a common
                  labeling system (<code>@n</code>), then nothing needs to be declared in a
                  TAN-A-div <code>&lt;body></code>. A TAN-conformant processor will construct an
                  alignment wherever it can. <code>&lt;body></code> is used exclusively to reconcile
                  unwanted differences between source TAN-T(EI) files, to realign versions of the
                  same work, and to declare new alignments across works (quotations).</para>
               <para>
                  <table frame="all">
                     <title>Synopsis of <code>&lt;equate-works></code>,
                           <code>&lt;equate-div-types></code>, <code>&lt;split-leaf-div-at></code>,
                           <code>&lt;realign></code>, <code>&lt;align></code>,
                           <code>&lt;div-type-ref></code>, <code>&lt;anchor-div-ref></code>,
                           <code>&lt;div-ref></code></title>
                     <tgroup cols="7">
                        <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                        <colspec colname="c3" colnum="2" colwidth="1*"/>
                        <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                        <colspec colname="c5" colnum="4" colwidth="2.7*"/>
                        <colspec colname="newCol7" colnum="5" colwidth="2.99*"/>
                        <colspec colname="newCol6" colnum="6" colwidth="3.1*"/>
                        <colspec colname="c6" colnum="7" colwidth="4.21*"/>
                        <thead>
                           <row>
                              <entry>name</entry>
                              <entry>req?</entry>
                              <entry>qty</entry>
                              <entry>parent</entry>
                              <entry>attributes</entry>
                              <entry>children</entry>
                              <entry>purpose</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry><code>&lt;equate-works></code></entry>
                              <entry>no</entry>
                              <entry>one or more</entry>
                              <entry><code>&lt;body></code></entry>
                              <entry><code>@src</code>, <xref linkend="edit_stamp"/>?</entry>
                              <entry>----</entry>
                              <entry>declares an ad hoc equivalence between sources whose
                                    <code>&lt;work></code>s are not defined as identical</entry>
                           </row>
                           <row>
                              <entry><code>&lt;equate-div-types></code></entry>
                              <entry>no</entry>
                              <entry>one or more</entry>
                              <entry><code>&lt;body></code></entry>
                              <entry><xref linkend="edit_stamp"/>?</entry>
                              <entry><code>&lt;div-type-ref></code>+</entry>
                              <entry>declares an ad hoc equivalence between div types that are in
                                 different sources and that are not defined as identical by those
                                 sources' <code>&lt;div-type></code>s.</entry>
                           </row>
                           <row>
                              <entry><code>&lt;split-leaf-div-at></code></entry>
                              <entry>no</entry>
                              <entry>one</entry>
                              <entry><code>&lt;body></code></entry>
                              <entry><xref linkend="edit_stamp"/>?</entry>
                              <entry><xref linkend="tok_pattern"/>+</entry>
                              <entry>collects ad hoc splits in leaf <code>&lt;div></code>s</entry>
                           </row>
                           <row>
                              <entry><code>&lt;realign></code></entry>
                              <entry>no</entry>
                              <entry>one or more</entry>
                              <entry><code>&lt;body></code></entry>
                              <entry><xref linkend="edit_stamp"/>?</entry>
                              <entry><code>&lt;anchor-div-ref></code>?,
                                 <code>&lt;div-ref></code>+</entry>
                              <entry>eliminates or realigns the default alignment of divs in a
                                 source to other sources that share the same work</entry>
                           </row>
                           <row>
                              <entry><code>&lt;align></code></entry>
                              <entry>no</entry>
                              <entry>one or more</entry>
                              <entry><code>&lt;body></code></entry>
                              <entry><code>@xml:id?</code>, <code>@strength</code>?,
                                    <code>@exclusive</code>?, <code>@distribute</code>, <xref
                                    linkend="edit_stamp"/>?</entry>
                              <entry><code>&lt;div-ref></code>+</entry>
                              <entry>declares an ad hoc alignment of specific divs</entry>
                           </row>
                           <row>
                              <entry><code>&lt;div-type-ref></code></entry>
                              <entry>yes</entry>
                              <entry>two or more</entry>
                              <entry><code>&lt;equate-div-types></code></entry>
                              <entry><code>@src</code>, <code>@div-type-ref</code><xref
                                    linkend="edit_stamp"/></entry>
                              <entry>----</entry>
                              <entry>references a div type</entry>
                           </row>
                           <row>
                              <entry><code>&lt;anchor-div-ref></code></entry>
                              <entry>yes</entry>
                              <entry>one</entry>
                              <entry><code>&lt;realign></code></entry>
                              <entry><code>@src</code>, <code>@ref</code>, <xref
                                    linkend="edit_stamp"/>, <code>@seg</code>?</entry>
                              <entry>----</entry>
                              <entry>references a div to which other <code>&lt;div-ref></code>s
                                 should be realigned</entry>
                           </row>
                           <row>
                              <entry><code>&lt;div-ref></code></entry>
                              <entry>yes</entry>
                              <entry>two or more</entry>
                              <entry><code>&lt;realign></code>, <code>&lt;align></code></entry>
                              <entry><code>@src</code>, <code>@ref</code>, <code>@strength</code>?,
                                    <xref linkend="edit_stamp"/>, <code>@seg</code>?</entry>
                              <entry>----</entry>
                              <entry>references a div</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table>
               </para>
               <para>A TAN-A-div alignment permits an aligner to reconcile otherwise discordant
                  sources in a five-step process. Each step is optional and sequence-specific. That
                  is, each statement assumes declarations made in previous siblings have already
                  been taken into account. Each of these steps allow an optional <xref
                     linkend="edit_stamp"/> (therefore not mentioned in the description
                  below).</para>
               <para>Because the description of the theory behind these actions is abstract and
                  difficult to understand, each of the steps is first provided examples, to make the
                  theory more intelligible.</para>
               <para><emphasis role="italic">Step 1: correlate works</emphasis></para>
               <para>
                  <example>
                     <title><code>&lt;equate-works></code>: similar and related works defined
                        differently</title>
                     <para>
                        <programlisting>      ...........
   &lt;body>
      &lt;equate-works src="lxx kjv nt"/>
   &lt;/body>
      ...........   </programlisting>
                     </para>
                     <caption>
                        <para>The Bible's complex history has produced many different concepts and
                           definitions of how that work should be defined. Take for example the
                           Greek Septuagint (<code>lxx</code>), the New Testament (<code>nt</code>),
                           and the King James Bible (<code>kjv</code>), each one justifiably defined
                           as a distinct work. The <code>nt</code> is contained wholly by the
                              <code>kjv</code>, and has no overlap with the <code>lxx</code>
                           (ignoring for now <code>nt</code> quotations of the <code>lxx</code>).
                           The <code>kjv</code> overlaps with only the majority of the
                              <code>lxx</code> (books or parts of books commonly transmitted in the
                           Septuagint translation never made it into the King James Bible). Since
                           these three sources can be thought of as separate works, the creators of
                           the TAN-T(EI) filse have each assigned a distinct <code>&lt;IRI></code>
                           value to <code>&lt;work></code>. But for the purposes of this alignment,
                           all three can be productively treated as a common work. The line above,
                              <code>&lt;equate-works></code>, illustrates establishes an ad hoc
                           equivalence among all three works. Any processor will make alignments
                           wherever it can.</para>
                     </caption>
                  </example>
               </para>
               <example>
                  <title><code>&lt;equate-works></code>: different works</title>
                  <para>
                     <programlisting>      ...........
   &lt;body>
      &lt;equate-works src="hamlet lear othello"/>
   &lt;/body>
      ...........   </programlisting>
                  </para>
                  <caption>
                     <para>This example illustrates an ad hoc alignment of Shakespeare's plays
                           <emphasis role="italic">Othello</emphasis>, <emphasis role="italic"
                           >Hamlet</emphasis>, and <emphasis role="italic">King Lear</emphasis>. Any
                        processor of this file will attempt to align the parts of the three plays
                        that share the same reference number. This may be useful for an aligner who
                        wishes to study the distribution of line length in the course of
                        Shakespeare's plays by act, scene, and so forth. </para>
                  </caption>
               </example>
               <para>This first step allows you to declare an ad hoc equivalence between sources
                  that do not already share a work <code>&lt;IRI></code> value. Each equivalence is
                  made through an <code>&lt;equate-works></code>, which takes a mandatory
                     <code>@src</code> that refers to one or more <code>&lt;source></code>s (by
                  their ID). This element is otherwise empty.</para>
               <para>As mentioned above, all TAN-A-div files assume greedy, transitive alignment.
                  Therefore, to equate work X of source A with work Y of source B is to align all
                  sources for works X and Y.</para>
               <para>This declaration does not imply that the two works are, in reality, one and the
                  same. It merely states that, for the purposes of this alignment, they should be
                  treated as equivalent.</para>
               <para><emphasis role="italic">Step 2: correlate division types</emphasis></para>
               <example>
                  <title><code>&lt;equate-div-types></code>: common divisions defined
                     differently</title>
                  <para>
                     <programlisting>      ...........
   &lt;equate-div-types>
      &lt;div-type-ref src="blue" div-type-ref="p"/>
      &lt;div-type-ref src="red" div-type-ref="p"/>
   &lt;/equate-div-types>
      ...........   </programlisting>
                  </para>
                  <caption>
                     <para>This example assumes two sources (<code>&lt;blue></code> and
                           <code>&lt;red></code>) that both use <code>p</code> as a division type,
                        but have not used the same IRI to define what <code>p</code> means. Whether
                        the discrepancy is based upon a principled disagreement, an accident, or a
                        typographical error, the above says that the two types of divisions are to
                        be treated as equivalent.</para>
                  </caption>
               </example>
               <example>
                  <title><code>&lt;equate-div-types></code>: uncommon divisions defined
                     differently</title>
                  <para>
                     <programlisting>      ...........
   &lt;equate-div-types>
      &lt;div-type-ref src="summa-eng" div-type-ref="contr"/>
      &lt;div-type-ref src="summa-lat" div-type-ref="sedcontra"/>
   &lt;/equate-div-types>
   &lt;equate-div-types>
      &lt;div-type-ref src="summa-eng" div-type-ref="resp"/>
      &lt;div-type-ref src="summa-lat" div-type-ref="respondeo"/>
   &lt;/equate-div-types>
   &lt;equate-div-types>
      &lt;div-type-ref src="summa-eng" div-type-ref="reply"/>
      &lt;div-type-ref src="summa-lat" div-type-ref="adpraeterea"/>
   &lt;/equate-div-types>
      ...........   </programlisting>
                  </para>
                  <caption>
                     <para>Many texts are traditionally segmented into divisions that are given
                        names distinct to a particular discipline or culture. For example, the
                           <emphasis role="italic">Summa theologica</emphasis> by Thomas Aquinas
                        contains articles that allow five kinds of subdivision: question, objection,
                        "on the contrary" (<emphasis role="italic">sed contra</emphasis>), "I
                        respond that" (<emphasis role="italic">respondeo</emphasis>), and reply to
                        objection. This example assumes an alignment of two independently
                        transcribed versions of the <emphasis>Summa theologica</emphasis>. Both
                        transcribers found IRIs suitable for the first two subdivisions
                           (<code>http://dbpedia.org/resource/Question</code> and
                           <code>http://dbpedia.org/resource/Objection_(argument)</code>) but they
                        each had to mint their own IRI for the last three, and they do not match.
                        This example says they should be treated as equivalent.</para>
                  </caption>
               </example>
               <para>This second step does for div types what the first step did for works. Across
                  all sources, every <code>&lt;div-type></code> that shares an <code>&lt;IRI></code>
                  value will be treated as equivalent. But if you wish to augment that automated
                  alignment you may declare an ad hoc equivalence between
                  <code>&lt;div-type></code>s that do not have any common <code>&lt;IRI></code>
                  values. Each equivalence is made through an <code>&lt;equate-div-types></code>,
                  which takes one or more <code>&lt;div-type-ref></code>s, each of which takes a
                  mandatory <code>@src</code> and <code>@div-type-ref</code>, to point to one or
                  more sources and division types. You must use either the <code>@xml:id</code>
                  assigned by the source to that div type or its renamed value, if there is a
                  corresponding <code>&lt;rename-div-types></code> under
                     <code>&lt;declarations></code> (see <xref linkend="class_2_metadata"/>).</para>
               <para>As with <code>&lt;equate-works></code>, <code>&lt;equate-div-types></code>
                  assume a greedy, transitive alignment. If div type X of source A is stated to be
                  equivalent to type Y of source B, then all div types X and Y in all other sources
                  are to treated as equivalent. This declaration does not imply that the two types
                  of division are, in reality, one and the same. It merely states that, for the
                  purposes of this alignment, they should be treated as equivalent.</para>
               <para><emphasis role="italic">Step 3: refine segmentation</emphasis></para>
               <example>
                  <title><code>&lt;split-leaf-div-at></code>: common use</title>
                  <para>
                     <programlisting>      ...........
   &lt;split-leaf-div-at>
      &lt;tok src="eng-1790" ref="line 1" ord="1 | 2" val="a"/>
   &lt;/split-leaf-div-at>
      ...........   </programlisting>
                  </para>
                  <caption>
                     <para>This example assumes line 1 reads "Ring a ring a Rosie," and that the
                        text has been tokenized based on spaces. This <code>&lt;tok></code>
                        introduces two splits in the leaf <code>&lt;div></code>, starting with the
                        first and second instances of "a" (the second and fourth word-tokens). The
                        overall effect is to create three segments: "Ring" "a ring" "a Rosie". Later
                        in the alignment file file, any reference to <code>line 1</code> will refer
                        to all three segments. <code>@seg</code> would be used to point to one or
                        more specific segments (see below).</para>
                  </caption>
               </example>
               <example>
                  <title><code>&lt;split-leaf-div-at></code>: advanced use</title>
                  <para>
                     <programlisting>      ...........
   &lt;split-leaf-div-at>
      &lt;tok src="eng deu heb" ref="bk.Ex.ch.1.v.2 | bk.Ex.ch.1.v.1" ord="2 | 5 - 7 | last-1"/>
   &lt;/split-leaf-div-at>
      ...........   </programlisting>
                  </para>
                  <caption>
                     <para>In this example, the <code>&lt;tok></code> states that in each of the
                        three different sources, each of the divisions corresponding to the two
                        references should be split five times, at the second, fifth, sixth, seventh,
                        and penultimate word-tokens. Note, there must be a valid word token for each
                        ref in each source.</para>
                  </caption>
               </example>
               <para>Suppose you have two transcriptions where a phrase ending one leaf
                     <code>&lt;div></code> in source A actually corresponds to the beginning phrase
                  of the next leaf <code>&lt;div></code> in source B. Or suppose that you wish to
                  break down a leaf <code>&lt;div></code> into smaller constituent parts, to
                  facilitate more exact alignments (e.g., sentence-to-sentence, phrase-to-phrase,
                  word-to-word). Before these refined alignments can occur, the leaf divs must first
                  be segmented. A <code>&lt;split-leaf-div-at></code> may be used, containing one
                  ore more <code>&lt;tok></code>s (see <xref linkend="tok_pattern"/>), whose
                  mandatory <code>@src</code> points to one or more specific sources and
                     <code>@ref</code> to one or more references.</para>
               <para><code>@ref</code> must refer only to leaf <code>&lt;div></code>s. See <xref
                     linkend="attr_ref"/> and <xref linkend="leaf_div_uniqueness_rule"/> for the
                  pattern and rules.</para>
               <para>To split a leaf <code>&lt;div></code>, you must be able to number or name word
                  tokens, so a <code>&lt;tokenize></code> element must be included under
                     <code>&lt;declarations></code> (see <xref linkend="tan-r-tok"/>). A leaf
                     <code>&lt;div></code> is split by declaring one or more word-tokens that should
                  begin a new segment in each reference in each source. That word token is declared
                  either through a numerical value (or range of numbers) for <code>@ord</code> or a
                  string value for <code>@val</code> or both. See <xref linkend="attr_ord_and_val"/>
                  for the pattern.</para>
               <para>Any leaf <code>&lt;div></code> may be split as many times as one wishes.</para>
               <para><emphasis role="italic">Step 4: realign incorrectly aligned divisions and
                     segments</emphasis></para>
               <example>
                  <title><code>&lt;realign></code>: unanchored 1</title>
                  <para>
                     <programlisting>      ...........
   &lt;realign>
      &lt;div-ref src="tamil" ref="bk.1:ch.4" seg="2"/>
   &lt;/realign>
      ...........   </programlisting>
                  </para>
                  <caption>
                     <para>This example states that the second segment in book 1 chapter 4 of the
                        Tamil version of a work should not be automatically aligned with any other
                        version of that work that shares the same reference. </para>
                     <para>This technique may be useful for version that have interpolations that
                        should be exempt from automatic alignment with other version of the same
                        work.</para>
                  </caption>
               </example>
               <example>
                  <title><code>&lt;realign></code>: unanchored 2</title>
                  <para>
                     <programlisting>      ...........
   &lt;realign>
      &lt;div-ref src="jones-1884" ref="topic.5:q.4 - topic.6:q.1 , topic.8"/>
      &lt;div-ref src="denton-1822" ref="question.7 - question.9"/>
      &lt;div-ref src="denton-1822" ref="discussion.4"/>
   &lt;/realign>
      ...........   </programlisting>
                  </para>
                  <caption>
                     <para>This example says that both the 1822 and 1884 versions of a work should
                        be exempt from any automatic alignment with other versions of the same work,
                        and that each of the questions from topic 5, question 4 through topic 6,
                        question 1 in one source should be matched with three questions in the
                        other. It also matches topic 8 in one source with discussion 4 in the other.
                        In all these cases, not only will those divisions be realigned, but
                        automatic alignment will be applied to their descendants. For example, if
                        there is a <code>topic.8:para.1</code> in <code>jones-1884</code>, it will
                        be automatically matched with <code>discussion.4:para.1</code> in
                           <code>denton-1822</code> (provided that there is a common underlying IRI
                        definition of <code>para</code> in both sources). Note that the last two
                           <code>&lt;div-ref></code>s could have been combined: <code>&lt;div-ref
                           src="denton-1822" ref="question.7 - question.9 ,
                        discussion.4"/></code>.</para>
                  </caption>
               </example>
               <example>
                  <title><code>&lt;realign></code>: unanchored 3</title>
                  <para>
                     <programlisting>      ...........
   &lt;split-leaf-div-at>
      &lt;tok src="poem-A" ref="line 46" ord="6"/>
      &lt;tok src="poem-B" ref="line 47" ord="3"/>
   &lt;/split-leaf-div-at>
   &lt;realign>
      &lt;div-ref src="poem-A" ref="line 46" seg="2"/>
      &lt;div-ref src="poem-B" ref="line 47" seg="1"/>
   &lt;/realign>
   &lt;realign>
      &lt;div-ref src="poem-A" ref="line 47" seg="1"/>
      &lt;div-ref src="poem-B" ref="line 47" seg="2"/>
   &lt;/realign>
      ...........   </programlisting>
                  </para>
                  <caption>
                     <para>This example realigns the parts of two versions of a poem, where one
                        phrase that appears at the end of line 46 in one version begins line 47 of
                        the other. The aligner (1) declares two splits, one for each version and (2)
                        declares the alignment of the two segments. </para>
                  </caption>
               </example>
               <example>
                  <title><code>&lt;realign></code>: unanchored 4</title>
                  <para>
                     <programlisting>      ...........
   &lt;realign>
      &lt;div-ref src="A-1794" ref="para 7 - para 9"/>
      &lt;div-ref src="A-1885" ref="para 8 - para 9 , para 7"/>
      &lt;div-ref src="A-1922" ref="para 12 - para 14"/>
   &lt;/realign>
      ...........   </programlisting>
                  </para>
                  <caption>
                     <para>This example assumes three versions of a text, where paragraphs seven
                        through nine of one version correspond to eight, nine, and seven of the
                        other and twelve through fourteen of the other.</para>
                  </caption>
               </example>
               <example>
                  <title><code>&lt;realign></code>: anchored</title>
                  <para>
                     <programlisting>      ...........
   &lt;equate-works src="lxx kjv"/>
   &lt;realign>
      &lt;anchor-div-ref src="kjv" ref="ps.9:v.1 - ps.10:v.18"/>
      &lt;div-ref src="lxx" ref="ps.9:v.2 - ps.9:v.39"/>
   &lt;/realign>
   &lt;realign>
      &lt;anchor-div-ref src="kjv" ref="ps.11 - ps.113 | ps.117 - ps.146"/>
      &lt;div-ref src="lxx" ref="ps.10 - ps.112 | ps.116 - ps.145"/>
   &lt;/realign>
   &lt;realign>
      &lt;anchor-div-ref src="kjv" ref="ps.114:v.1 - ps.115:v.18"/>
      &lt;div-ref src="lxx" ref="ps.113:1 - ps.113:26"/>
   &lt;/realign>
   &lt;realign>
      &lt;anchor-div-ref src="kjv" ref="ps.116:v.1 - ps.116:v.19"/>
      &lt;div-ref src="lxx" ref="ps.114:v.1 - ps.115:v.10"/>
   &lt;/realign>
   &lt;realign>
      &lt;anchor-div-ref src="kjv" ref="ps.147:v.1 - ps.147:v.20"/>
      &lt;div-ref src="lxx" ref="ps.146:v.1 - ps.147:v.9"/>
   &lt;/realign>
      ...........   </programlisting>
                  </para>
                  <caption>
                     <para>This example takes reconciles the numbering of the Psalms in the
                        Septuagint with that which is in most common use today. The anchored
                        technique has been used because this comes from an example where multiple
                        versions are used, so only one, labeled <code>kjv</code>, has been picked as
                        the anchor. The component parts of the Septuagint version will then align
                        with any other version that aligns with the anchor.</para>
                  </caption>
               </example>
               <para>After step 3, some of the divisions and segments of a work may not be properly
                  aligned. Segments newly created by <code>&lt;split-leaf-div-at></code>s may need
                  to be realigned. Or perhaps one of the sources uses a reference system that is out
                  of step with the others. </para>
               <para>Step 4, <code>&lt;realign></code>, is used to reconcile alignments within a
                  given work. N.B., to realign is to assume that there is an error in automatic
                  alignments, and that for two sources to be aligned they must, at the very least,
                  be the same work. Therefore, <code>&lt;realign></code> applies only to one or more
                  versions of a single work. If it is used to realign sources that do not share the
                  same work, an error will result. (For cross-work alignment, see step 5, below.)
                  There are two types of realignment: anchored and unanchored. </para>
               <para>An <emphasis>unanchored realigment</emphasis> consists of one or more
                     <code>&lt;div-ref></code>s, each of which takes <code>@src</code> and
                     <code>@ref</code> to point to one or more sources and flattened references, and
                  perhaps <code>@seg</code>, to point to one or more specific segments created by a
                  preceding <code>&lt;split-leaf-div-at></code>. For any range of references
                  included by <code>@ref</code> (values separated by a hyphen), the left and right
                  sides must be siblings (i.e., <code>&lt;div-ref src="a" ref="bk.1 -
                     bk.2:ch.1"/></code> is invalid). A range in <code>@ref</code> individually
                  picks out each sibling from the first to the last (i.e., <code>bk.1 - bk.3</code>
                  picks three references individually). </para>
               <para xml:id="attribute_seg">If <code>@seg</code> is used, every <code>@ref</code>
                  must point to a leaf <code>&lt;div></code>. Under a given
                     <code>&lt;realign></code>, each source's total number of references (determined
                  by every <code>@seg</code> (if present) in every <code>@ref</code> in every
                     <code>&lt;div-ref></code> that invokes that source) must be identical, or an
                  error will result. Furthermore, there must be enough
                     <code>&lt;split-leaf-div-at></code> declarations for each <code>@ref</code> in
                  each <code>@src</code>, or an error will result.</para>
               <para>The effect of an unanchored <code>&lt;realign></code> is (1) to sever each
                  referenced <code>&lt;div></code> from any automatic alignment and (2) to realign
                  each source's nth reference (div or segment) with the nth reference in every other
                  other source, if any, invoked in the <code>&lt;realign></code>. If only one source
                  is invoked in a <code>&lt;realign></code>, only the first effect takes place: the
                  references are effectively severed from any automatic alignment with any other
                  version for that source. For every <code>&lt;div></code> in a new realignment,
                  descendants will be automatically aligned.</para>
               <para>An <emphasis>anchored realignment</emphasis> differs from the unanchored form
                  in that it begins with a single <code>&lt;anchor-div-ref></code> as the first
                  child of <code>&lt;realign></code>. It is exactly like <code>&lt;div-ref></code>,
                  except that the mandatory <code>@src</code> may point only to a single source.
                     <code>&lt;anchor-div-ref></code> is then followed by one or more
                     <code>&lt;div-ref></code>s. Once again, each source's total number of
                  references must be identical, since every source's nth reference will be realigned
                  to the nth reference in the anchor.</para>
               <para>The effect of an anchored <code>&lt;realign></code> is to move each referenced
                     <code>&lt;div></code>'s automatic alignment to a different place. This method
                  is helpful in alignments of large numbers of sources, where a few do not follow
                  the majority pattern and need to be synchronized.</para>
               <para>For both anchored and unanchored alignments alike, the order of
                     <code>&lt;div-ref></code>s is immaterial. Any processor of your data will
                  handle the references according to source document order.</para>
               <para><emphasis role="italic">Step 5: add new alignments</emphasis></para>
               <example>
                  <title><code>&lt;align></code>: standard quotation</title>
                  <para>
                     <programlisting>      ...........
   &lt;align>
      &lt;div-ref src="lecture-bra" ref="para.4:sent.2"/>
      &lt;div-ref src="hamlet-jap" ref="act I:scene 1:line 1"/>
   &lt;/align>
      ...........   </programlisting>
                  </para>
                  <caption>
                     <para>This example presumes a written lecture, in multiple versions, that
                        sometimes quotes from <emphasis role="italic">Hamlet</emphasis>, also in
                        various versions. <code>&lt;align></code> states that in the source
                           <code>lecture-bra</code>, paragraph 4 sentence 2, there is a quote from
                           <emphasis role="italic">Hamlet</emphasis>, designated in the source
                           <code>hamlet-jap</code> as act I, scene 1, line 1. Anything that aligns
                        with the first reference will align with anything that aligns with the
                        second.</para>
                  </caption>
               </example>
               <example>
                  <title><code>&lt;align></code>: standard quotation, <code>@distribute =
                        true</code></title>
                  <para>
                     <programlisting>      ...........
   &lt;align distribute="true">
      &lt;div-ref src="article-A" ref="sect.4:blockquote.2:para.1 - sect.4:blockquote.2:para.4"/>
      &lt;div-ref src="quran-1" ref="sura.4:verse.3 - sura.4:verse.6"/>
   &lt;/align>
      ...........   </programlisting>
                  </para>
                  <caption>
                     <para>This example assumes an article that quotes from the Qur'an, sura 3 (The
                        Women), 3-6. If <code>@distribute</code> were <code>false</code> or missing,
                        the references in <code>article-A</code> would be taken as aligning en bloc
                        with the references in <code>quran-1</code>. But because
                           <code>@distribute</code> is <code>true</code>, the effect is to create
                        four separate, more specific, alignments.</para>
                  </caption>
               </example>
               <example>
                  <title><code>&lt;align></code>: standard quotation, <code>@exclusive =
                     true</code></title>
                  <para>
                     <programlisting>      ...........
   &lt;align exclusive="true">
      &lt;div-ref src="S2" ref="century VI chapter 88"/>
      &lt;div-ref src="lxx" ref="bk Judg.ch 5.v 20"/>
   &lt;/align>
      ...........   </programlisting>
                  </para>
                  <caption>
                     <para>This example illustrates a situation where one version of a work quotes
                        from Judges 5:20 (Septuagint) but the other does not. Because
                           <code>@exclusive</code> is set to <code>true</code>, no other versions
                        will be automatically included in the alignment.</para>
                  </caption>
               </example>
               <example>
                  <title><code>&lt;align></code>: one work self-alignment, three options</title>
                  <para>
                     <programlisting>      ...........
   &lt;align xml:id="lords-prayer-1">
      &lt;div-ref src="nt-grc" ref="bk.Matt:ch.6:v.9 - bk.Matt:ch.6:v.13" />
   &lt;/align>
   &lt;align xml:id="lords-prayer-2">
      &lt;div-ref src="nt-grc" ref="bk.Luke:ch.11:v.2 - bk.Luke:ch.11:v.4" />
   &lt;/align>
   &lt;align alignments="lords-prayer-1 lords-prayer-2"/>
      ...........   </programlisting>
                  </para>
                  <para>
                     <programlisting>      ...........
   &lt;split-leaf-div-at>
      &lt;tok src="nt-grc" ref="bk.Matt:ch.6:v.9 , bk.Matt:ch.6:v.10" ord="5"/>
      &lt;tok src="nt-grc" ref="bk.Luke:ch.11:v.2" ord="7, last-3"/>
      &lt;tok src="nt-grc" ref="bk.Luke:ch.11:v.4" ord="last" val="καὶ"/>
   &lt;/split-leaf-div-at>
   &lt;align xml:id="lords-prayer-1">
      &lt;div-ref src="nt-grc" ref="bk.Matt:ch.6:v.9:seg.2"/>
      &lt;div-ref src="nt-grc" ref="bk.Matt:ch.6:v.10:seg.1"/>
      &lt;div-ref src="nt-grc" ref="bk.Matt:ch.6:v.11"/>
      &lt;div-ref src="nt-grc" ref="bk.Matt:ch.6:v.12"/>
      &lt;div-ref src="nt-grc" ref="bk.Matt:ch.6:v.13"/>
   &lt;/align>
   &lt;align xml:id="lords-prayer-2">
      &lt;div-ref src="nt-grc" ref="bk.Luke:ch.11:v.2:seg.2"/>
      &lt;div-ref src="nt-grc" ref="bk.Luke:ch.11:v.2:seg.3"/>
      &lt;div-ref src="nt-grc" ref="bk.Luke:ch.11:v.3"/>
      &lt;div-ref src="nt-grc" ref="bk.Luke:ch.11:v.4:seg.1"/>
      &lt;div-ref src="nt-grc" ref="bk.Luke:ch.11:v.4:seg.2"/>
   &lt;/align>
   &lt;align alignments="lords-prayer-1 lords-prayer-2" distribute="true" exclusive="true"/>
      ...........   </programlisting>
                  </para>
                  <para>
                     <programlisting>      ...........
   &lt;split-leaf-div-at>
      &lt;tok src="nt-grc" ref="bk.Matt:ch.6:v.9 , bk.Matt:ch.6:v.10" ord="5"/>
      &lt;tok src="nt-grc" ref="bk.Luke:ch.11:v.2" ord="7, last-3"/>
      &lt;tok src="nt-grc" ref="bk.Luke:ch.11:v.4" ord="last" val="καὶ"/>
   &lt;/split-leaf-div-at>
   &lt;align xml:id="lords-prayer-1">
      &lt;div-ref src="nt-grc"
         ref="bk.Matt:ch.6:v.9:seg.2 , bk.Matt:ch.6:v.10:seg.1 , bk.Matt:ch.6:v.11 - bk.Matt:ch.6:v.13"
      />
   &lt;/align>
   &lt;align xml:id="lords-prayer-2">
      &lt;div-ref src="nt-grc"
         ref="bk.Luke:ch.11:v.2:seg.2 , bk.Luke:ch.11:v.2:seg.3 , bk.Luke:ch.11:v.3 ,
         bk.Luke:ch.11:v.4:seg.1 , bk.Luke:ch.11:v.4:seg.2"
      />
   &lt;/align>
   &lt;align alignments="lords-prayer-1 lords-prayer-2" distribute="true" exclusive="true"/>
      ...........   </programlisting>
                  </para>
                  <caption>
                     <para>This example shows three ways of self-aligning the the two versions of
                        the Lord's Prayer in a single work, the New Testament.</para>
                     <para>The first method shows a rough alignment, connecting the five verses of
                        Matthew with the three of Luke. This alignment provides only a rough
                        alignment, but it will be applicable to any other version of the New
                        Testament cited in the TAN-A-div file as a source.</para>
                     <para>The second and third alignments are equivalent ways of doing a more
                        refined alignment. The only difference is that the second places each of the
                        five parts of each version in its own <code>&lt;div-ref></code> whereas the
                        third collapses each into a single <code>&lt;div-ref></code>. Legibility
                        should be the key to deciding which method should be preferred.</para>
                     <para>The refined alignments begin by declaring two splits in the verses in
                        Matthew (both verses 9 and 10 happen to have natural breaks at the fifth
                        word token, excluding punctuation). The Luke version has three splits.
                        Notice that the aligner has chosen not to mention Matthew 6.10b because
                        there is no corresponding phrase in Luke. (Another aligner may have
                        approached this differently.) </para>
                     <para>The refined alignment offers precision, but at the expense of broad
                        applicability. Any other version of the New Testament included in the
                        TAN-A-div file that has not been properly segmented would be misaligned.
                        Therefore <code>@exclusive</code> is declared to be <code>true</code>, to
                        exempt the alignment from being transitively applied to any other New
                        Testament source.</para>
                  </caption>
               </example>
               <para>At this point, each work's versions should be aligned with each other. You are
                  now in a position to declare new alignments to supplement the ones that will be
                  automatically generated from steps 1 through 4. </para>
               <para>The fifth step, one or more <code>&lt;align></code>s, is used normally when you
                  wish to indicate where one work quotes another, or a single work repeats texts
                  that merit alignment. Unlike <code>&lt;realign></code>, <code>&lt;align></code>
                  does not negate any other alignments, and it allows sources from multiple works to
                  be mentioned. Furthermore, whereas multiple values of <code>@ref</code> govered by
                  a <code>&lt;realign></code> were taken individually, under
                  <code>&lt;align></code>, any <code>@ref</code> will usually be treated as grouped
                  by work, but it may also be taken individually (see <xref
                     linkend="attr_distribute"/>).</para>
               <para>In addition, <code>&lt;align></code> takes several special attributes, all
                  optional. </para>
               <para>The first is <code>@strength</code>. As mentioned above, TAN-A-div files do not
                  furnish a mechanism to indicate the reason why the sources are being aligned
                  (e.g., quotation, translation), and so it does not admit any doubt. If you are
                  aligning a text you are doing it with certitude. You are not committing yourself
                  to any assertions in your alignment. Yet it is understood that some alignments are
                  stronger than others. Verbatim quotations, for example, should be differentiated
                  from indirect references. For these purposes, <code>@strength</code> may be used.
                  It takes a rational decimal number from 0 to 1 stipulating how strong the
                  alignment should be. The values are completely arbitrary, and strictly speaking no
                  meaning is to be assigned to this attribute. In practice, however, this value will
                  be a guage of how close the alignment is. If you need to specify exactly what
                  concept of text reuse attaches to an alignment, you should use TAN-A-tok.</para>
               <para>The second special attribute is <code>@exclusive</code>, which indicates
                  through a boolean value whether an alignment is to be applied to other implicitly
                  aligned work versions or not. If set to <code>true</code>, then the alignment is
                  excluded from transitive alignments. Take, for example, work A and work B, each
                  with three sources. If an <code>&lt;align></code> creates an alignment between
                  passages in A1 and B1, then that alignment applies to A1-3 and B1-3 if
                     <code>@exclusive</code> is <code>false</code> and it does not if it is
                     <code>true</code>. The default value is <code>false</code>, because most of the
                  time, when you say that one work quotes from another, you mean that statement to
                  be true for all versions of the work. But on occasion, one versions of a work
                  might have a quotation that is lacking in another. In these cases it is important
                  to set <code>@exclusive</code> to <code>true</code>.</para>
               <para xml:id="attr_distribute">The third attribute is <code>@distribute</code>, which
                  takes a boolean value. If <code>true</code>, then <code>@ref</code> functions
                  identically to the way it does in step 4, under <code>&lt;realign></code>: each
                  reference made by <code>@ref</code> or <code>@seg</code> will be treated
                  individually. But if <code>false</code>, then the values of <code>@ref</code> or
                     <code>@seg</code> will be treated as a group, one group per work. The default
                  value is <code>false</code> because in most situations a single
                     <code>&lt;align></code> will be dealing with only one quotation, and the intent
                  is not to distribute each reference, but to group and then align them. But if you
                  are aligning a series of quotations of one work in another, you may find that
                     <code>@distribute</code> set to be <code>true</code> allows you collapse
                  multiple <code>&lt;align></code>s into a single one. Keep in mind, though, that
                  the total number of references per work must be identical, or the file will be
                  invalid. Furthermore, if <code>@distribute</code> is true, then the beginning and
                  ending references for any range in <code>@ref</code> (e.g., <code>ref.A -
                     ref.C</code>) must be siblings, and will be treated as referring to the start
                  of the range, the end of the range, the intermediate siblings (e.g., <code>ref.A -
                     ref.C</code> will be treated as referring to three items: <code>ref.A</code>,
                     <code>ref.B</code>, and <code>ref.C</code>). </para>
               <para>A fourth attribute is an optional <code>@xml:id</code>, which allows you to
                  name an alignment cluster. This is used principally by other
                     <code>&lt;align></code>s that take the fifth optional attribute,
                     <code>@alignments</code>, which points to two or more other
                     <code>&lt;align></code>s by means of their <code>@xml:id</code> values. This is
                  the only way you can create new alignments within a single work (self-alignment).
                  For every appearance of a passage in a given work use a single
                     <code>&lt;align></code>, give it an <code>@xml:id</code>, then create one more
                     <code>&lt;align></code> that points through <code>@alignments</code> to all the
                  relevant <code>&lt;align></code>s. But <code>@alignments</code> need not be used
                  for self-alignment. It may point to any <code>&lt;align></code> that takes an
                     <code>@xml:id</code>, no matter its content. But to avoid fatally recursive
                  loops created by reflexive alignments, <code>@xml:id</code> and
                     <code>@alignments</code> are mutually exclusive.</para>
               <para>Every <code>&lt;align></code> that has <code>@alignments</code> is empty. Every
                  other <code>&lt;align></code> takes one or more <code>&lt;div-ref></code>s, which
                  indicates through mandatory <code>@src</code> and <code>@ref</code>, and optional
                     <code>@seg</code>, one or more references that should be aligned (see <xref
                     linkend="class_2_body"/>). </para>
               <para>The constraints on <code>&lt;div-ref></code> are identical to those in step 4
                  (see <xref linkend="attribute_seg"/>) with one caveat. Any
                     <code>&lt;div-ref></code> that is a child of an <code>&lt;align></code> may
                  take the optional <code>@strength</code>. (If not present, the value is assumed to
                  be <code>1</code>.) This feature is helpful when you wish to indicate in a
                  quotation that one work does not align as strongly with the rest of the group as
                  do the others. Note, in these cases the value of <code>@strength</code> is to be
                  applied to the work, not just to the source. If you wish to differentiate between
                  how strongly different versions of a work align with another work, you should
                  create a separate <code>&lt;align></code> for each relevant parallel, with
                     <code>@exclusive</code> set to <code>true</code>.</para>
               <para>Overall, <code>&lt;align></code> can be thought of as a group of clustered
                  references, one cluster per work. Those clusters may have constitutent references
                  that are very small (e.g., a segment that is a single word) or quite large, and
                  with descendants of its own (e.g., an entire book). A cluster could be a single
                  reference or quite a large number of them. Therefore, clusters that have been
                  grouped by <code>&lt;align></code> may be quite heterogenous in number, length,
                  and hierarchy. And that is how it should be. A novel may in a single sentence
                  synthesize from another work multiple passages of much greater length. The
                  specifics of how the constituent parts of one cluster align with the constituent
                  parts of another cannot be predicted or dictated. All an <code>&lt;align></code>
                  does is say, in effect, "This group of passages from work A are to be aligned with
                  this group of passages from work B." It is up to the processor of a TAN-A-div file
                  to determine if the alignment should be taken <emphasis>en bloc</emphasis>, or if
                  it should be distributed into individual parts, and if so, upon what basis. If you
                  wish to control how that distribution occurs in a given <code>&lt;align></code>,
                  you must break it up into separate individual <code>&lt;align></code>s.</para>
               <para>As in step 4, the order of <code>&lt;div-ref></code>s in an
                     <code>&lt;align></code> is immaterial. Any processor of your data will handle
                  references according to the document order of the sources.</para>
               <para>The five steps involved in creating the <code>&lt;body></code> for a TAN-A-div
                  file are, in general, rather simple. If some of the description of this section
                  seems unnecessarily detailed and complex, consult examples of TAN-A-div
                  files.</para>
            </section>
         </section>
         <section xml:id="tan-a-tok">
            <title>Token-Based Alignments (<code>&lt;TAN-A-tok></code>)</title>
            <para>TAN-A-tok files provide a microscopic view of how two texts relate to each other.
               The format is intended to allow you to specify exactly where, how, and why two texts
               align, and to do so on the most granular level possible. TAN-A-tok files also allow
               you to express levels of confidence or alternative opinions.</para>
            <para>Creators and editors of TAN-A-tok files should be able to read the languages of
               their sources and to explain as precisely as possible the relationship between the
               two sources. You should be prepared to think about and specify types of textual
               reuse. TAN-A-tok files tend to be more demanding to create and edit than TAN-A-div
               files are because they support work that is more detailed, and therefore more
               time-consuming, than simple en masse alignment of sources.</para>
            <para>Because of the detailed nature of the inquiry, token alignment is restricted to
               two texts, referred to jointly as a <emphasis role="italic">bitext</emphasis>. Each
               half of the bitext must be a TAN-T(EI) file. It is assumed that those two sources
               share some special relationship, direct or indirect, and are the results of certain
               types of textual reuse, sometimes mixed: translation, paraphrase, commentary, and so
               forth. Some of these bitexts, such as literal translations, may line up quite nicely
               word for word. Others, such as paraphrases, may line up sporadically, vaguely, or
               ambiguously. Some bitexts produce few word-for-word correspondences. Therefore
               alignment of a bitext is frequently not easy, and requires you as a TAN-A editor to
               declare the assumptions you have made in two key areas: the relationship that holds
               from one source to the other and the types of reuse that was involved in turning one
               version into the other (or a common ancestor into both).</para>
            <para><emphasis role="bold">Relationship of sources</emphasis>. Some bitexts will be
               directly related. Others will be removed from each other, or a common original, by
               several generations. And that history may itself be uncertain or vague. You may find
               it difficult if not impossible to tell whether a striking difference between the two
               source texts is to be credited/blamed on a translator or on an intermediary (such as
               an editor or redactor). What you know and understand about the relationship will
               affect how you create token alignments. Therefore, you must declare what you believe
               to be the physical relationship or history that connects the two sources.</para>
            <para><emphasis role="bold">Types of reuse</emphasis>. In creating a TAN-A file, you
               should decide the types of text reuse you wish to declare. Such a declaration gives
               users of your data a sense of the paradigm you bring to your analysis. You may wish
               to keep your categories nondescript and somewhat vague, using terms such as
                  <emphasis>translation</emphasis>, <emphasis>paraphrase</emphasis>,
                  <emphasis>quotation</emphasis>, and so forth without offering a specific
               definition. On the other hand, you may be specific and detailed, for example adopting
               field-specific categories such as <emphasis>obligatory explicitation</emphasis>,
                  <emphasis>optional explicitation</emphasis>, <emphasis>pragmatic
                  explicitation</emphasis>, or <emphasis>translation-inherent
                  explicitation</emphasis>. You may also wish to declare secondary types of reuse,
               such as <emphasis role="italic">scribal omission</emphasis> or <emphasis
                  role="italic">dittography</emphasis>, to declare secondary types of reuse that may
               have intervened. You must declare at least one type of reuse.</para>
            <section>
               <title>Rootmost Element and Header</title>
               <para>The rootmost element of a token-based alignment file is
                     <code>&lt;TAN-A-tok></code>.</para>
               <para>The TAN-A-tok header builds upon the core and class 2 headers (see <xref
                     linkend="metadata_head"/> and <xref linkend="class_2_metadata"/>).</para>
               <para>TAN-A-tok files take exactly two <code>&lt;source></code>s. The sequence is
                  arbitrary, determining only the order in which most processors will handle the
                  data. Each <code>&lt;source></code> must take an <code>@xml:id</code>.</para>
               <para><code>&lt;declarations></code> takes, in addition to all the elements allowed
                  in class 2 files (see <xref linkend="class_2_metadata"/>), two elements unique to
                  TAN-A-tok: <code>&lt;bitext-relation></code> and <code>&lt;reuse-type></code>. The
                  first of these describes genealogical descent of the two versions, and is
                  concerned with directionality. The second avoids these categories altogether and
                  focuses on the qualitative aspect of the bitext relationship.</para>
               <section xml:id="bitext_relation">
                  <title><code>&lt;bitext-relation></code></title>
                  <para>
                     <table frame="all">
                        <title>Synopsis of <code>&lt;bitext-relation></code></title>
                        <tgroup cols="7">
                           <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                           <colspec colname="c3" colnum="2" colwidth="1*"/>
                           <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                           <colspec colname="c5" colnum="4" colwidth="2.7*"/>
                           <colspec colname="newCol7" colnum="5" colwidth="2.99*"/>
                           <colspec colname="newCol6" colnum="6" colwidth="3.1*"/>
                           <colspec colname="c6" colnum="7" colwidth="4.21*"/>
                           <thead>
                              <row>
                                 <entry>name</entry>
                                 <entry>req?</entry>
                                 <entry>qty</entry>
                                 <entry>parent</entry>
                                 <entry>attributes</entry>
                                 <entry>children</entry>
                                 <entry>purpose</entry>
                              </row>
                           </thead>
                           <tbody>
                              <row>
                                 <entry><code>&lt;bitext-relation></code></entry>
                                 <entry>yes</entry>
                                 <entry>one or more</entry>
                                 <entry><code>&lt;declarations></code></entry>
                                 <entry><xref linkend="edit_stamp"/>?, <code>@xml:id</code></entry>
                                 <entry><xref linkend="iri_and_name"/></entry>
                                 <entry>names a relation that holds between two textual
                                    sources</entry>
                              </row>
                           </tbody>
                        </tgroup>
                     </table>
                  </para>
                  <para><code>&lt;bitext-relation></code>s may take an <xref linkend="edit_stamp"/>
                     and must take an <code>@xml:id</code>. <code>&lt;bitext-relation></code>
                     otherwise consists of an <xref linkend="iri_and_name"/> that names a type of
                     relationship that holds between any two texual objects. This relationship
                     pertains to the </para>
                  <para>In most cases, there will be only a single
                     <code>&lt;bitext-relation></code>. Multiple values are permitted for situations
                     where a bitext has a complex history, for example, a textual object that was
                     created over time, and in different phases.</para>
                  <para>There is, at present, no known stable, independent IRI vocabulary to
                     describe bitext relations. Therefore a handful of TAN-minted <link
                        xlink:href="iris.xml"/> may be of assistance. It is hoped that use of this
                     vocabulary will contribute to more formalized vocabularies in
                     stemmatics.</para>
                  <example>
                     <title><code>&lt;bitext-relation></code>: unclear</title>
                     <programlisting>      ...........
   &lt;bitext-relation xml:id="unclear">
      &lt;IRI>tag:textalign.net,2015:bitext-relation:unclear&lt;/IRI>
      &lt;name>unclear&lt;/name>
      &lt;desc>The two versions bear some relationship, but what exactly is
          unclear.&lt;/desc>
   &lt;/bitext-relation>
      ...........               </programlisting>
                  </example>
                  <example>
                     <title><code>&lt;bitext-relation></code>: direct descent</title>
                     <programlisting>      ...........
   &lt;bitext-relation xml:id="b-x-a">
      &lt;IRI>tag:textalign.net,2015:bitext-relation:b/x/a&lt;/IRI>
      &lt;name>direct relationship, A descends from B, one mediary.&lt;/name>
      &lt;desc>The first source comes from the second source, via a single intermediary.&lt;/desc>
   &lt;/bitext-relation>
      ...........               </programlisting>
                  </example>
                  <example>
                     <title><code>&lt;bitext-relation></code>: indirect descent</title>
                     <programlisting>      ...........
   &lt;bitext-relation xml:id="b-x-a">
      &lt;IRI>tag:textalign.net,2015:bitext-relation:/a,/x*/b&lt;/IRI>
      &lt;name>parent of A is ancestor of B.&lt;/name>
      &lt;desc>The first source comes directly from the direct ancestor of the second source (via
          one or more intermediaries).&lt;/desc>
   &lt;/bitext-relation>
      ...........               </programlisting>
                  </example>
               </section>
               <section xml:id="reuse_type">
                  <title><code>&lt;reuse-type></code></title>
                  <para><table frame="all">
                        <title>Synopsis of <code>&lt;reuse-type></code></title>
                        <tgroup cols="7">
                           <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                           <colspec colname="c3" colnum="2" colwidth="1*"/>
                           <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                           <colspec colname="c5" colnum="4" colwidth="2.7*"/>
                           <colspec colname="newCol7" colnum="5" colwidth="2.99*"/>
                           <colspec colname="newCol6" colnum="6" colwidth="3.1*"/>
                           <colspec colname="c6" colnum="7" colwidth="4.21*"/>
                           <thead>
                              <row>
                                 <entry>name</entry>
                                 <entry>req?</entry>
                                 <entry>qty</entry>
                                 <entry>parent</entry>
                                 <entry>attributes</entry>
                                 <entry>children</entry>
                                 <entry>purpose</entry>
                              </row>
                           </thead>
                           <tbody>
                              <row>
                                 <entry><code>&lt;reuse-type></code></entry>
                                 <entry>yes</entry>
                                 <entry>one or more</entry>
                                 <entry><code>&lt;declarations></code></entry>
                                 <entry><xref linkend="edit_stamp"/>?, <code>@xml:id</code></entry>
                                 <entry><xref linkend="iri_and_name"/></entry>
                                 <entry>names a type of text reuse</entry>
                              </row>
                           </tbody>
                        </tgroup>
                     </table>One or more <code>&lt;reuse-type></code>s, which take the <xref
                        linkend="iri_and_name"/>, declare the types of text reuse that are relevant
                     to the bitext. Each <code>&lt;reuse-type></code> must include
                        <code>@xml:id</code>. </para>
                  <para>It is up to you to determine how specific or vague you wish to define your
                     reuse types. If you prefer categories that are common to translation studies or
                     textual criticism, you should probably employ terminology others are using, if
                     it can be found. But if you find the terms to be poorly defined or difficult to
                     locate, and you wish to define your own, you may coin your own through a UUID
                     or a tag URN.</para>
                  <para>There is, at present, no known stable, independent IRI vocabulary to
                     describe types of textual reuse. See the <link xlink:href="iris.xml"
                        >supplementary document</link> for a list of TAN-minted IRIs .</para>
                  <example>
                     <title><code>&lt;reuse-type></code>: quotation</title>
                     <programlisting>      ...........
   &lt;reuse-type xml:id="quotation">
      &lt;IRI>tag:textalign.net,2015:reuse-type:quotation:general&lt;/IRI>
      &lt;name>quotation, general&lt;/name>
      &lt;desc>One version quotes from the other&lt;/desc>
   &lt;/reuse-type>
      ...........               </programlisting>
                  </example>
                  <example>
                     <title><code>&lt;reuse-type></code>: translation in general</title>
                     <programlisting>      ...........
   &lt;reuse-type xml:id="trans-gen">
      &lt;IRI>tag:textalign.net,2015:reuse-type:translation:general&lt;/IRI>
      &lt;name>general translation&lt;/name>
      &lt;desc>One version is a translation of the other.&lt;/desc>
   &lt;/reuse-type>
      ...........               </programlisting>
                  </example>
                  <example>
                     <title><code>&lt;reuse-type></code>: paraphrastic translation</title>
                     <programlisting>      ...........
   &lt;reuse-type xml:id="trans-loose">
      &lt;IRI>tag:textalign.net,2015:reuse-type:translation:paraphrastic&lt;/IRI>
      &lt;name>paraphrastic translation&lt;/name>
      &lt;desc>One version is a loose translation of the other.&lt;/desc>
   &lt;/reuse-type>
      ...........               </programlisting>
                  </example>
               </section>
            </section>
            <section>
               <title>Data (<code>&lt;body></code>)</title>
               <table frame="all">
                  <title>Synopsis of TAN-A-tok <code>&lt;body></code>,
                     <code>&lt;align></code></title>
                  <tgroup cols="7">
                     <colspec colname="c1" colnum="1" colwidth="1.91*"/>
                     <colspec colname="c3" colnum="2" colwidth="1*"/>
                     <colspec colname="c4" colnum="3" colwidth="2.12*"/>
                     <colspec colname="c5" colnum="4" colwidth="2.76*"/>
                     <colspec colname="newCol7" colnum="5" colwidth="5.38*"/>
                     <colspec colname="newCol6" colnum="6" colwidth="1.54*"/>
                     <colspec colname="c6" colnum="7" colwidth="3.59*"/>
                     <thead>
                        <row>
                           <entry>name</entry>
                           <entry>req?</entry>
                           <entry>qty</entry>
                           <entry>parent</entry>
                           <entry>attributes</entry>
                           <entry>children</entry>
                           <entry>purpose</entry>
                        </row>
                     </thead>
                     <tbody>
                        <row>
                           <entry><code>&lt;body></code></entry>
                           <entry>yes</entry>
                           <entry>one</entry>
                           <entry><code>&lt;TAN-A-tok></code></entry>
                           <entry><xref linkend="in_progress"/>?, <xref linkend="edit_stamp"/>?,
                                 <code>@bitext-relation</code>, <code>@reuse-type</code></entry>
                           <entry><code>&lt;align></code>+</entry>
                           <entry>contains data</entry>
                        </row>
                        <row>
                           <entry><code>&lt;align></code></entry>
                           <entry>yes</entry>
                           <entry>one or more</entry>
                           <entry><code>&lt;body></code></entry>
                           <entry><code>@xml:id</code>?, <xref linkend="edit_stamp"/>?,
                                 <code>@cert</code>?, <code>@bitext-relation</code>?,
                                 <code>@reuse-type</code>?</entry>
                           <entry><xref linkend="tok_pattern"/>+</entry>
                           <entry>aligns one or more tokens</entry>
                        </row>
                     </tbody>
                  </tgroup>
               </table>
               <para>The <code>&lt;body></code> of a TAN-A-tok file takes, in addition to the
                  customary optional attributes found in other TAN files (see <xref
                     linkend="in_progress"/> and <xref linkend="edit_stamp"/>), required
                     <code>@bitext-relation</code> and <code>@reuse-type</code>, which take one or
                  more id references from <code>&lt;bitext-relation></code> and
                     <code>&lt;reuse-type></code>, defining the defaults of the alignment.
                     <code>&lt;body></code> has only one type of child: one or more
                     <code>&lt;align></code>s.</para>
               <para><code>&lt;align></code> may take an <xref linkend="edit_stamp"/> as well as
                     <code>@cert</code> to indicate certainty or confidence (see <xref
                     linkend="attr_cert"/>). An optional <code>@xml:id</code> allows you to refer to
                  a specific alignment (see possible uses below). An optional
                     <code>@reuse-type</code> and <code>@bitext-relation</code> may be used to
                  override the default values in <code>&lt;body></code>. </para>
               <para><code>&lt;align></code> has only one type of child: one or more
                     <code>&lt;tok></code>s (see <xref linkend="tok_pattern"/>). These collectively
                  form a <emphasis role="italic">token cluster</emphasis>. Each token cluster is
                  valid independent of the construction of any other token cluster. Token clusters
                  overlap in part, in whole, or not at all. This reflects the nature of
                  translations, in which words can easily fall in one-to-one, one-to-many,
                  many-to-one, and many-to-many relationships. Or there may be differences of
                  opinion, and you may wish to register different opinions. If you supply an
                     <code>&lt;align></code> with an <code>@xml:id</code> then you effectively name
                  your token cluster, and permit references to it, and therefore discussions about
                  it.</para>
               <para>Unlike TAN-A-div files, under which a processor will assume automatic,
                  transitive, greedy alignment, TAN-A-tok files specify the opposite. Nothing should
                  be inferred about two texts outside of explicitly stated alignments. If a
                  TAN-A-tok file does not mention word tokens that are in a source, it does not mean
                  that they were, for example, left out of a translation. All it means is that the
                  creators and editors of the TAN-A-tok file have nothing to say about the tokens. </para>
               <para>If you wish to declare that one or more words in one source were left out of a
                  translation or inserted into one, you must do so through a <emphasis role="italic"
                     >half-null alignment</emphasis>, i.e., a token cluster that has tokens from one
                  source but not the other. That is, a half-null alignment implies—to drawn from the
                  terminology of translation studies—implicitation or explicitation for a given type
                  of text reuse (defined by <code>@reuse-type</code>).</para>
               <para>Because nothing can be implied in a TAN-A-tok file, the status of
                     <code>@in-progress</code> (default = true) is very important, since it is the
                  only way to signal that you have said all you intend to say about the bitext.
                  (Remember, <code>in-progress = "false"</code> does not mean that the file is free
                  of errors, only that the entire scope of work has been finished.)</para>
               <para>A fully aligned bitext may result in a TAN-A-tok file with a very long
                     <code>&lt;body></code> (in contrast to a typical TAN-A-div file). That does not
                  mean, however, that everything in a transcription <emphasis>must </emphasis>be
                  encoded or described. A TAN-A-tok file does not commit you to saying everything
                  possible about the bitext. You might choose to encode only a few token
                  clusters.</para>
               <para><code>@bitext-relation</code> and <code>@reuse-type</code> are inheritable
                  attributes (see <xref linkend="inheritable_attributes"/>). That is, they declare
                  the assumptions made for a given range of data. Any <code>@cert</code> does not
                  express certainty about these values. Rather, <code>@cert</code> is to be
                  interpreted to mean: "Assuming the abovementioned <code>@bitext-relation</code>
                  and <code>@reuse-type</code> to be true, I have <code>@cert</code> confidence
                  about the following assertions:...."</para>
               <para>If there are multiple IDs in <code>@reuse-type</code> or
                     <code>@bitext-relation</code>, the union, not the intersection, of those values
                  is to be understood. For example, <code>reuse-type="trans para"</code> might be
                  used to indicate that the token cluster results from translation, paraphrase, or
                  both. </para>
               <example>
                  <title>TAN-A-tok <code>&lt;body></code></title>
                  <para>
                     <programlisting>      ...........
    &lt;body bitext-relation="unclear" reuse-type="adaptation" in-progress="false">
        &lt;align>
            &lt;tok src="ring1881" ref="line 1" ord="1"/>
            &lt;tok src="ring1987" ref="l 1" ord="1"/>
        &lt;/align>
        &lt;align>
            &lt;tok src="ring1881" ref="line 2" val="pocket"/>
            &lt;tok src="ring1987" ref="l 2" val="pocket"/>
        &lt;/align>
        &lt;align>
            &lt;tok src="ring1881" ref="line 3" ord="1" cert="high"/>
            &lt;tok src="ring1881" ref="line 3" ord="2"/>
            &lt;tok src="ring1987" ref="l 3" ord="1"/>
        &lt;/align>
    &lt;/body>
      ...........              </programlisting>
                  </para>
               </example>
            </section>
         </section>
         <section xml:id="tan-lm">
            <title>Lexico-Morphology</title>
            <para>TAN-LM files are used to associate words or word fragments with lexemes and
               morphological categories. They are intended primarily to facilitate research that
               depends upon alignments, but they can interesting in their own right, whether or not
               there are other versions or alignments.</para>
            <para>These files are indelibly reliant upon the grammatical rules declared for a given
               language, so these instructions should be read in close conjunction with the section
               devoted to the TAN-R-mor format (see <xref linkend="tan-r-mor"/>).</para>
            <section>
               <title>Principles and Assumptions</title>
               <para>TAN-LM files are assumed to be applicable to texts in languages whose
                  vocabulary lends itself to grammatical and lexicographical analysis. The two areas
                  are interrelated but can be treated independently. If you wish, your TAN-LM file
                  may contain only lexemes or only morphological analyses.</para>
               <para>As an editor of a TAN-LM file you should understand the vocabulary and grammar
                  of the languages you have picked. You should have a good sense of the rules
                  established by the lexical and grammatical authorities you have chosen to
                  follow.</para>
               <para>Although you must assume the point of view of a particular grammar and lexicon,
                  you need not define those authorities, nor hold to a single one. You at liberty to
                  choose the morphological scheme that best suits your opinions or purposes, as
                  defined in one or more TAN-R-mor files. In addition, you may bring to lexical
                  analysis your own expertise and supply lexical headwords unattested in printed
                  authorities.</para>
               <para>Although TAN-LM files are simple, they can be laborious to read and write, more
                  than other types of TAN files. It is expected that an editor of a TAN-LM file will
                  find one or more tools to help create and edit the data.</para>
            </section>
            <section>
               <title>Rootmost Element and Header</title>
               <para>The rootmost element of a lexico-morphological file is TAN-LM.</para>
               <para>A mandatory <code>&lt;source></code> element points to the one and only
                  TAN-T(EI) file that is the object of analysis. </para>
               <para><code>&lt;declarations></code> takes the elements common to class 2 files (see
                     <xref linkend="class_2_metadata"/>. It takes two other elements unique to
                  TAN-LM: <code>&lt;lexicon></code> and <code>&lt;morphology></code>.</para>
               <section xml:id="decl_lexicon">
                  <title><code>&lt;lexicon></code></title>
                  <para>
                     <table frame="all">
                        <title>Synopsis of <code>&lt;lexicon></code></title>
                        <tgroup cols="7">
                           <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                           <colspec colname="c3" colnum="2" colwidth="1*"/>
                           <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                           <colspec colname="c5" colnum="4" colwidth="2.7*"/>
                           <colspec colname="newCol7" colnum="5" colwidth="2.99*"/>
                           <colspec colname="newCol6" colnum="6" colwidth="3.1*"/>
                           <colspec colname="c6" colnum="7" colwidth="4.21*"/>
                           <thead>
                              <row>
                                 <entry>name</entry>
                                 <entry>req?</entry>
                                 <entry>qty</entry>
                                 <entry>parent</entry>
                                 <entry>attributes</entry>
                                 <entry>children</entry>
                                 <entry>purpose</entry>
                              </row>
                           </thead>
                           <tbody>
                              <row>
                                 <entry><code>&lt;lexicon></code></entry>
                                 <entry>no</entry>
                                 <entry>one or more</entry>
                                 <entry><code>&lt;declarations></code></entry>
                                 <entry><xref linkend="edit_stamp"/>?, <code>@xml:id</code></entry>
                                 <entry><xref linkend="iri_and_name"/>, <xref
                                       linkend="digital_entity_metadata"/>?</entry>
                                 <entry>names a lexicon that has been adopted</entry>
                              </row>
                           </tbody>
                        </tgroup>
                     </table>
                  </para>
                  <para>Each <code>&lt;lexicon></code> may take an <xref linkend="edit_stamp"/> and
                     must take an <code>@xml:id</code>. The element otherwise consists of an <xref
                        linkend="iri_and_name"/> that names a lexicon that has been adopted in the
                     lexical analysis.</para>
                  <para>You may include any number of lexica, which may be listed in any order you
                     wish. This will be important for source texts or languages where one lexicon is
                     not sufficient (true especially for medieval vernacular texts or for poorly
                     resourced modern languages). <code>&lt;IRI></code> will most often point to URL
                     names (e.g., a Library of Congress Control Number for an authority in print) or
                     some other unique identifier for the authority used. If you or another editor
                     are a lexical authority, no separate <code>&lt;lexicon></code> entry need be
                     given. Credit will be made to the appropriate <code>&lt;agent></code>.</para>
                  <para>There is, at present, no standard exchange format for lexica and
                     dictionaries. So even if a digital form of a dictionary is identified through
                     the <xref linkend="digital_entity_metadata"/>, no validation tests will be
                     performed.</para>
                  <example>
                     <title><code>&lt;lexicon></code></title>
                     <programlisting>      ...........
   &lt;lexicon xml:id="LSJ">
      &lt;for-lang>grc&lt;/for-lang>
      &lt;IRI>http://lccn.loc.gov/95032369&lt;/IRI>
      &lt;name xml:lang="eng">Liddell-Scott-Jones, 9th ed. plus rev. supplement&lt;/name>
   &lt;/lexicon>
      ...........               </programlisting>
                  </example>
               </section>
            </section>
            <section xml:id="decl_grammar">
               <title><code>&lt;morphology></code></title>
               <para>
                  <table frame="all">
                     <title>Synopsis of <code>&lt;morphology></code></title>
                     <tgroup cols="7">
                        <colspec colname="c1" colnum="1" colwidth="2.37*"/>
                        <colspec colname="c3" colnum="2" colwidth="1*"/>
                        <colspec colname="c4" colnum="3" colwidth="1.48*"/>
                        <colspec colname="c5" colnum="4" colwidth="2.7*"/>
                        <colspec colname="newCol7" colnum="5" colwidth="2.99*"/>
                        <colspec colname="newCol6" colnum="6" colwidth="3.1*"/>
                        <colspec colname="c6" colnum="7" colwidth="4.21*"/>
                        <thead>
                           <row>
                              <entry>name</entry>
                              <entry>req?</entry>
                              <entry>qty</entry>
                              <entry>parent</entry>
                              <entry>attributes</entry>
                              <entry>children</entry>
                              <entry>purpose</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry><code>&lt;morphology></code></entry>
                              <entry>yes</entry>
                              <entry>one or more</entry>
                              <entry><code>&lt;declarations></code></entry>
                              <entry><xref linkend="edit_stamp"/>?, <code>@xml:id</code></entry>
                              <entry><xref linkend="iri_and_name"/>, <xref
                                    linkend="digital_entity_metadata"/></entry>
                              <entry>names a TAN-R-mor file that has been adopted</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table>
               </para>
               <para>Each <code>&lt;morphology></code> may take an <xref linkend="edit_stamp"/> and
                  must take an <code>@xml:id</code>. The element otherwise consists of a <xref
                     linkend="digital_entity_metadata"/> that names and points to a TAN-R-mor
                  file.</para>
               <para>Morphologies may be listed in any order you wish.</para>
               <para>In most cases, there will be only one <code>&lt;morphology></code> declaration.
                  Multiple values are permitted for texts with multiple languages, or for cases
                  where you wish to register alternative analyses.</para>
               <example>
                  <title><code>&lt;morphology></code></title>
                  <programlisting>      ...........
   &lt;morphology xml:id="Perseus">
      &lt;for-lang>grc&lt;/for-lang>
      &lt;IRI>tag:jenny.park@example.com,2014:tan-m-rules:grc:perseus&lt;/IRI>
      &lt;name xml:lang="eng">Perseus Greek morphology&lt;/name>
      &lt;location when-accessed="2015-03-02">../TAN-R-mor/grc-1.xml&lt;/location>
   &lt;/morphology>
      ...........               </programlisting>
               </example>
            </section>
            <section>
               <title>Data (<code>&lt;body></code>)</title>
               <table frame="all">
                  <title>Synopsis of TAN-LM <code>&lt;body></code>, <code>&lt;ana></code>,
                        <code>&lt;joined></code>, <code>&lt;lm></code>, <code>&lt;l></code>,
                        <code>&lt;m></code></title>
                  <tgroup cols="6">
                     <colspec colname="c1" colnum="1" colwidth="1.91*"/>
                     <colspec colname="c3" colnum="2" colwidth="1*"/>
                     <colspec colname="c5" colnum="3" colwidth="2.76*"/>
                     <colspec colname="newCol7" colnum="4" colwidth="5.38*"/>
                     <colspec colname="newCol6" colnum="5" colwidth="1.54*"/>
                     <colspec colname="c6" colnum="6" colwidth="3.59*"/>
                     <thead>
                        <row>
                           <entry>name</entry>
                           <entry>req?</entry>
                           <entry>parent</entry>
                           <entry>attributes</entry>
                           <entry>children</entry>
                           <entry>purpose</entry>
                        </row>
                     </thead>
                     <tbody>
                        <row>
                           <entry><code>&lt;body></code></entry>
                           <entry>yes</entry>
                           <entry><code>&lt;TAN-LM></code></entry>
                           <entry><xref linkend="in_progress"/>?, <xref linkend="edit_stamp"/>?,
                                 <code>@lexicon</code>, <code>@morphology</code></entry>
                           <entry><code>&lt;ana></code>+</entry>
                           <entry>contains data</entry>
                        </row>
                        <row>
                           <entry><code>&lt;ana></code></entry>
                           <entry>yes</entry>
                           <entry><code>&lt;body></code></entry>
                           <entry><xref linkend="edit_stamp"/>?, <code>@cert</code>?,
                                 <code>@lexicon</code>?, <code>@morphology</code>?</entry>
                           <entry>(<code>&lt;tok></code>|<code>&lt;joined></code>)+,
                                 <code>&lt;lm></code>*</entry>
                           <entry>aligns one or more tokens</entry>
                        </row>
                        <row>
                           <entry><code>&lt;joined></code></entry>
                           <entry>no</entry>
                           <entry><code>&lt;ana></code></entry>
                           <entry><code>@xml:id</code>?</entry>
                           <entry><code>&lt;tok></code>, <code>&lt;tok></code>+</entry>
                           <entry>joins two or more strings that should be joined and treated as a
                              single linguistic unit</entry>
                        </row>
                        <row>
                           <entry><code>&lt;lm></code></entry>
                           <entry>yes</entry>
                           <entry><code>&lt;ana></code></entry>
                           <entry><xref linkend="edit_stamp"/>?, <code>@cert</code>?</entry>
                           <entry><code>&lt;l></code>*, <code>&lt;m></code>*</entry>
                           <entry>assert a lexico-morphological combination</entry>
                        </row>
                        <row>
                           <entry><code>&lt;l></code></entry>
                           <entry>no</entry>
                           <entry><code>&lt;lm></code></entry>
                           <entry><xref linkend="edit_stamp"/>?, <code>@cert</code>?,
                                 <code>@lexicon</code>?, <code>@ord</code>?</entry>
                           <entry>data (xsd:string)</entry>
                           <entry>assert a lexeme</entry>
                        </row>
                        <row>
                           <entry><code>&lt;m></code></entry>
                           <entry>no</entry>
                           <entry><code>&lt;lm></code></entry>
                           <entry><xref linkend="edit_stamp"/>?, <code>@cert</code>?,
                                 <code>@morphology</code>?</entry>
                           <entry>data (xsd:string)</entry>
                           <entry>assert a morphological pattern</entry>
                        </row>
                     </tbody>
                  </tgroup>
               </table>
               <para>The <code>&lt;body></code> of a TAN-LM file takes, in addition to the customary
                  optional attributes found in other TAN files (see <xref linkend="in_progress"/>
                  and <xref linkend="edit_stamp"/>), two required attributes. <code>@lexicon</code>
                  points to one or more lexica via <code>&lt;lexicon></code> ids;
                     <code>@morphology</code> takes only one morphology id. These values define the
                  default lexica and grammar of the analysis. </para>
               <para><code>&lt;body></code> has only one type of child: one or more
                     <code>&lt;ana></code>s.</para>
               <para><code>&lt;ana></code> (short for analysis) takes an optional <xref
                     linkend="edit_stamp"/> as well as <code>@cert</code> (see <xref
                     linkend="attr_cert"/>). The certainty expressed by <code>@cert</code> governs
                  the entire <code>&lt;ana></code>. <code>&lt;ana></code> takes three types of
                  children: <code>&lt;tok></code>, <code>&lt;joined></code>, and
                     <code>&lt;lm></code> (one or more each).</para>
               <para>One or more <code>&lt;tok></code>s use the token pattern to point to one or
                  more word tokens or word token fragments (see <xref linkend="tok_pattern"/>).
                  Unlike uses of <code>&lt;tok></code> in other class 2 files, a TAN-LM
                     <code>&lt;tok></code> is to be treated as strictly a single token. If
                     <code>@ref</code>, <code>@ord</code>, or <code>@chars</code> take multiple
                  values, these are to be treated as constituent parts of a single word token. This
                  feature allows words that have been inadvertently broken up by the tokenization
                  pattern to be rejoined for linguistic analysis. For example, you may wish to treat
                  "pom pom" as a single word token. Under this special definiton of
                     <code>&lt;tok></code> the two parts of that word can be rejoined. </para>
               <para>If a particular word or morpheme straddles two adjacent leaf divs, then the
                  references cannot be combined into a single <code>&lt;tok></code>. In those cases,
                  the <code>&lt;joined></code> element should be used to enclose the two or more
                     <code>&lt;tok></code>s that define it.</para>
               <para>Both <code>&lt;joined></code> and <code>&lt;tok></code> may take an
                     <code>@xml:id</code> value, reserved for use by a future class-2 syntactic
                  format, which will use a TAN-LM file to relate a word token to its larger
                  syntactical relationships. </para>
               <para>Each of one or more <code>&lt;lm></code>s collect combinations of lexemes and
                  morphological patterns that are said to be true of the tokens picked. It takes an
                  optional <xref linkend="edit_stamp"/> and <code>@cert</code> (see <xref
                     linkend="attr_cert"/>). <code>&lt;lm></code> takes one or more
                     <code>&lt;l></code>s and <code>&lt;m></code>s.</para>
               <para><code>&lt;l></code>, which takes an optional <xref linkend="edit_stamp"/> and
                     <code>@cert</code> (see <xref linkend="attr_cert"/>), takes as its content the
                  name of the lexeme (main entry in a lexicon). The optional <code>@lexicon</code>
                  may be used to specify a lexicon other than the default one declared in
                     <code>&lt;body></code>. If a lexeme is unattested in the lexicons listed, you
                  may credit yourself as the authority by supplying the appropriate
                     <code>&lt;agent></code> id reference.</para>
               <para>The content of <code>&lt;l></code> is a string that points to the main word
                  entry. In many languages, especially those that are lightly inflected, this word
                  will be identical to the word token itself. In those cases, <code>&lt;l></code>
                  may be left empty, indicating that the value of <code>&lt;tok></code> in the
                     <code>&lt;ana></code> must be used. In this case, all values of
                     <code>&lt;tok></code> must resolve to the same value, or a validation error
                  will result. If a lexicon has more than one entry, <code>@ord</code> may be used
                  to specify with a number which entry or entries are meant (<xref
                     linkend="attr_ord_and_val"/>). If <code>@ord</code> is absent, the value is
                  assumed to be 1.</para>
               <para>Values of <code>&lt;l></code> point to lexical headwords, not to roots. Root
                  analysis reserved for lexicography, a discipline wholly different from
                  morphological analysis. There is at present no interoperable way to exchange
                  lexicographic data in the TAN format, but the format is set up to allow you, if
                  you wish, to create and develop a proprietary system.</para>
               <para><code>&lt;m></code>, which takes an optional <xref linkend="edit_stamp"/> and
                     <code>@cert</code> (see <xref linkend="attr_cert"/>), identifies a
                  morphological pattern that declares the inflectional categories for the word
                  tokens chosen. If a different TAN-R-mor file is intended than the one specified in
                     <code>&lt;body></code>, the optional <code>@morphology</code> may be used.
                  Unlike <code>@lexicon</code>, you may not credit yourself. If you find a published
                  TAN-R-mor file inadequate, you must use an alternative.</para>
               <para>The content of <code>&lt;m></code> consists of one or more codes defined in the
                  chosen TAN-R-mor file. Codes are space-delimited. If a value of
                     <code>&lt;m></code> violates the rules established by the TAN-R-mor file, an
                  error will be generated. For more about how codes are built, and how they
                  function, see <xref linkend="tan-lm"/>.</para>
               <para>As a courtesy to TAN-LM editors, any <code>&lt;m></code> that has too many
                  codes will return not only an error but the meanings of the valid codes currently
                  placed. For example, <code>&lt;m>rb ?&lt;/m></code> using a TAN-R-mor file with
                  only one <code>&lt;category></code> might return this error: <code>Too many codes,
                     which currently resolve: adverb</code>.</para>
               <example>
                  <title>TAN-LM <code>&lt;body></code></title>
                  <para>
                     <programlisting>      ...........
    &lt;body lexicon="LSJ" morphology="Perseus">
      &lt;ana>
         &lt;tok ref="preface 1 title 1" ord="1"/>
         &lt;lm>
            &lt;l lexicon="new">Εὐάγριος&lt;/l>
            &lt;m>- e - s - - - m g -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1:title 1" ord="2"/>
         &lt;lm>
            &lt;l>μοναχός&lt;/l>
            &lt;m>n - - s - - - m g -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="1"/>
         &lt;lm>
            &lt;l>ἐπεί&lt;/l>
            &lt;m>c - - - - - - - - -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="2"/>
         &lt;lm>
            &lt;l>ἐγώ&lt;/l>
            &lt;m>p p - s - - - - d -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="3"/>
         &lt;lm>
            &lt;l>πρώην&lt;/l>
            &lt;m>d - - - - - - - - -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="4"/>
         &lt;lm>
            &lt;l>δηλόω&lt;/l>
            &lt;m>v - 2 s r i a - - -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="5"/>
         &lt;lm>
            &lt;l>ἀπό&lt;/l>
            &lt;m>r - - - - - - - - -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="6"/>
         &lt;lm>
            &lt;l>ὁ&lt;/l>
            &lt;m>p a - s - - - n g -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="7"/>
         &lt;lm>
            &lt;l>ἅγιος&lt;/l>
            &lt;m>a - - s - - - n g -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="8"/>
         &lt;lm>
            &lt;l>ὄρος&lt;/l>
            &lt;m>n - - s - - - n g -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="9 | 21"/>
         &lt;lm>
            &lt;l>ἐν&lt;/l>
            &lt;m>r - - - - - - - - -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="10"/>
         &lt;lm>
            &lt;l>ὁ&lt;/l>
            &lt;m>p a - s - - - f d -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="11"/>
         &lt;lm>
            &lt;l>Σκῆτις&lt;/l>
            &lt;m>n p - s - - - f d -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="12"/>
         &lt;lm>
            &lt;l>καθέζομαι&lt;/l>
            &lt;m>v - - s p p m m d -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="13"/>
         &lt;lm>
            &lt;l>ποθεινός&lt;/l>
            &lt;m>a - - s - - - m v s&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="14"/>
         &lt;lm>
            &lt;l>ἀδελφός&lt;/l>
            &lt;m>n e - s - - - m v -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="15"/>
         &lt;lm>
            &lt;l>Ἀνατόλιος&lt;/l>
            &lt;m>n e - s - - - m v -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="16"/>
         &lt;lm>
            &lt;l>καί&lt;/l>
            &lt;m>c - - - - - - - - -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="17"/>
         &lt;lm>
            &lt;l>ὁ&lt;/l>
            &lt;m>p a - s - - - n a -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="18"/>
         &lt;lm>
            &lt;l>συμβολικός&lt;/l>
            &lt;m>a - - s - - - n a -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="19"/>
         &lt;lm>
            &lt;l>σχῆμα&lt;/l>
            &lt;m>n - - s - - - n a -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="20 | 46"/>
         &lt;lm>
            &lt;l>ὁ&lt;/l>
            &lt;m>p a - p - - - m g -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="22"/>
         &lt;lm>
            &lt;l>Αἴγυπτος&lt;/l>
            &lt;m>n e - s - - - m d -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="23"/>
         &lt;lm>
            &lt;l>μοναχός&lt;/l>
            &lt;m>n - - p - - - m g -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="24"/>
         &lt;lm>
            &lt;l>σαφηνισθίζω&lt;/l>
            &lt;m>v - - - a n p - - -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="25"/>
         &lt;lm>
            &lt;l>σύ&lt;/l>
            &lt;m>p p - s - - - - d -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="26"/>
         &lt;lm>
            &lt;l>παρακαλέω&lt;/l>
            &lt;m>v - 2 s a i a - - -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="27"/>
         &lt;lm>
            &lt;l>οὐ&lt;/l>
            &lt;m>d - - - - - - - - -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="28"/>
         &lt;lm>
            &lt;l>γάρ&lt;/l>
            &lt;m>g - - - - - - - - -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="29"/>
         &lt;lm>
            &lt;l>εἰκῇ&lt;/l>
            &lt;m>d - - - - - - - - -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="30"/>
         &lt;lm>
            &lt;l>οὐδέ&lt;/l>
            &lt;m>c - - - - - - - - -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="31"/>
         &lt;lm>
            &lt;l>παρέλκω&lt;/l>
            &lt;m>v - - s p p a n a -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="32"/>
         &lt;lm>
            &lt;l>αὐτός&lt;/l>
            &lt;m>p p - s - - - n a -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="33"/>
         &lt;lm>
            &lt;l>νομίζω&lt;/l>
            &lt;m>v - 2 s r i a - - -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="34"/>
         &lt;lm>
            &lt;l>τοσοῦτος&lt;/l>
            &lt;m>p d - s - - - f a -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="35"/>
         &lt;lm>
            &lt;l>παραλλαγή&lt;/l>
            &lt;m>n - - s - - - f a -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="36"/>
         &lt;lm>
            &lt;l>ἔχω&lt;/l>
            &lt;m>v - - s p p a n a -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="37 | 45"/>
         &lt;lm>
            &lt;l>παρά&lt;/l>
            &lt;m>r - - - - - - - - -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="38"/>
         &lt;lm>
            &lt;l>ὁ&lt;/l>
            &lt;m>p a - p - - - n a -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="39"/>
         &lt;lm>
            &lt;l>λοιπός&lt;/l>
            &lt;m>a - - p - - - n a -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="40"/>
         &lt;lm>
            &lt;l>σχῆμα&lt;/l>
            &lt;m>n - - p - - - n a -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="41"/>
         &lt;lm>
            &lt;l>ὁ&lt;/l>
            &lt;m>p a - p - - - m g -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="42"/>
         &lt;lm>
            &lt;l>ἄνθρωπος&lt;/l>
            &lt;m>n - - p - - - m g -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="43"/>
         &lt;lm>
            &lt;l>φέρω&lt;/l>
            &lt;m>v - 2 s p m a - - -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="44"/>
         &lt;lm>
            &lt;l>ὅσος&lt;/l>
            &lt;m>p r - p - - - n a -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="47"/>
         &lt;lm>
            &lt;l>ἅγιος&lt;/l>
            &lt;m>a - - p - - - m g -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;comment who="kalvesmaki" when="2014-02-10">Perseus morph addendum&lt;/comment>
         &lt;tok ref="preface 1 section 1" ord="48"/>
         &lt;lm>
            &lt;l>πατήρ&lt;/l>
            &lt;m>n - - p - - - m g -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="49"/>
         &lt;lm>
            &lt;l>περί&lt;/l>
            &lt;m>r - - - - - - - - -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="50"/>
         &lt;lm>
            &lt;l>οὗτος&lt;/l>
            &lt;m>p d - s - - - n g -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;tok ref="preface 1 section 1" ord="51"/>
         &lt;lm>
            &lt;l>μανθάνω&lt;/l>
            &lt;m>v - 1 p r i a - - -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      &lt;ana>
         &lt;comment who="kalvesmaki" when="2014-02-10">Perseus morph addendum&lt;/comment>
         &lt;tok ref="preface 1 section 1" ord="52"/>
         &lt;lm>
            &lt;l>ἐξαγγέλλω&lt;/l>
            &lt;m>v - 1 p a s a - - -&lt;/m>
         &lt;/lm>
      &lt;/ana>
      ...........
   &lt;/body>
      ...........              </programlisting>
                  </para>
               </example>
            </section>
         </section>
      </chapter>
      <chapter xml:id="class_3">
         <title>Class 3 TAN Files: Language and Script</title>
         <para>This chapter discusses class 3 TAN files, which pertain to languages and scripts, not
            to individual texts. This class, at present, consists of rules and patterns pertaining
            to tokenization and morphology. As the network grows, other types are expected to be
            added.</para>
         <section xml:id="tan-r-tok">
            <title>Tokenization Patterns</title>
            <para>The term <emphasis role="italic">word</emphasis> is notoriously difficult to
               define for any language (in English, "New York" and "didn't" can each be justifiably
               defined as one or two words). We adopt instead the proximate term preferred in
               linguistics, <emphasis role="italic">token</emphasis>. A token is essentially a word
               that is defined computationally according to a regular expression, and those regular
               expressions are constructed such that matches approximate what we normally call
               words. For example, we may define a token as any continuous string of word
               characters, <code>\w+</code> (see above, <xref linkend="regular_expressions"/>). </para>
            <para>To <emphasis role="italic">tokenize</emphasis> is to segment a string into a
               sequence of tokens. The segmentation is specified by another regular expression that
               defines the pattern that separates tokens, that is, the opposite or complement set.
               The way we find the tokens made of <code>\w+</code>, our example above, is by
               tokenizing on the complement set, <code>\W+</code>.</para>
            <para>Every TAN-R-tok file is, in essence, a tokenization constructor. It describes zero
               or more preparatory replacement processes, followed by a single tokenizing command,
               so as to create a sequence of words or tokens that can then be referred to by their
               position in the sequence. This is the backbone upon which all class-2 files depend
               for pointing to specific word tokens in one or more class 1 files. Because TAN-R-tok
               files are used extensively by both class 1 and class 2 files, it is important that
               you familiarize yourself with how a TAN-R-tok file will be invoked by them. See <xref
                  linkend="recommended-tokenizations"/> and <xref linkend="tokenization"/>.</para>
            <para>Tokenization files are either language specific or language agnostic. The latter
               tend to be rather limited in number and size, so for convenience, TAN provides the
               following language-agnostic TAN-R-tok files as standard rules:</para>
            <para>
               <itemizedlist>
                  <listitem>
                     <para><code>http://textalign.net/release/1/dev/rules/TAN-R-tok/general-1.xml</code></para>
                  </listitem>
                  <listitem>
                     <para><code>http://textalign.net/release/1/dev/rules/TAN-R-tok/general-words-only-1.xml</code></para>
                  </listitem>
                  <listitem>
                     <para><code>http://textalign.net/release/1/dev/rules/TAN-R-tok/precise-1.xml</code></para>
                  </listitem>
               </itemizedlist>
            </para>
            <para>For more about these core tokenization patterns and how they are best used, see
               the files themselves.</para>
            <para>Tokenization patterns devoted to specific to languages may be found in the
               examples on the TAN website.</para>
            <section>
               <title>Principles and Assumptions</title>
               <para>Certain assumptions and recommendations are made regarding tokenization files,
                  complementing the more general ones; see <xref linkend="design_principles"
                  />.</para>
               <para>TAN-R-tok files are used exclusively to describe how a text should first be
                  changed (if needed) and then tokenized. Editors of these files should be familiar
                  with the writing conventions of the scripts for the languages they are tokenizing
                  and with the behavior of Unicode and Regular Expressions. (See <xref
                     linkend="unicode"/> and <xref linkend="regular_expressions"/>).</para>
               <para>Decisions in tokenizing are motivated by the assumptions one makes about a
                  given language and about the questions that motivates someone to tokenize a text.
                  Some linguists prefer to treat punctuation as tokens in their own right. Others,
                  such as those who work with ancient texts (where much punctuation is erratic,
                  anachronistic, or irrelevant), may wish to suppress them altogether. A poorly
                  chosen or constructed TAN-R-tok file can produce invalid or undesired results. It
                  is of paramount importance that you, as a TAN-R-tok editor, clearly indicate the
                  ideal purposes of the file, both through a description of contents and good
                  examples (at least one of which is required).</para>
               <para>Tokenization will be applied to one leaf <code>&lt;div></code> at a time, and
                  not to the concatenation of those <code>&lt;div></code>s. So if a word straddles
                  leaf <code>&lt;div></code>s, it will always be broken up into two or more tokens.
                  There are work-arounds for these situations, but those fixes should be applied in
                  other TAN formats, not this one.</para>
               <para>TAN-R-tok files do not admit doubt or multiple opinions. </para>
            </section>
            <section>
               <title>Rootmost Element and Header</title>
               <para>The rootmost element of a tokenizing file is
                  <code>&lt;TAN-R-tok></code>.</para>
               <para>One or more optional <code>&lt;source></code> elements may describe previous
                  works that have been used as sources for the patterning rules. Many TAN-R-tok
                  files will have no <code>&lt;source></code> element.</para>
               <para><code>&lt;declarations></code> takes one or more <code>&lt;for-lang></code>s
                  that take a standard language code (see <xref linkend="language"/>). If a
                  TAN-R-tok file is meant to apply to any language, no <code>&lt;for-lang></code>
                  should be supplied. </para>
               <para>If another TAN file does not have all the languages specified in a TAN-R-tok
                  file it is using, a warning will be generated. But the warning will not prevent
                  the data from being processed.</para>
               <para>
                  <example>
                     <title>TAN-R-tok <code>&lt;head></code>, any language</title>
                     <para>
                        <programlisting>      ...........
   &lt;head>
      &lt;name>Common tokenization pattern no. 1&lt;/name>
      &lt;desc>This tokenization pattern takes any text in any language, offsets any contiguous string
         of non-word characters with spaces, then returns a tokenization based on white
         space.&lt;/desc>
      &lt;location>tok.common.1.xml&lt;/location>
      &lt;rights-excluding-sources rights-holder="kalvesmaki">
         &lt;IRI>http://creativecommons.org/licenses/by/4.0/deed.en_US&lt;/IRI>
         &lt;name>Creative Commons Attribution 4.0 International License&lt;/name>
         &lt;desc>This license is granted independent of rights and licenses associated with the
            source. &lt;/desc>
      &lt;/rights-excluding-sources>
      &lt;declarations/>
      &lt;agent xml:id="park" roles="creator">
          &lt;IRI>tag:parkj@textalign.net,2015:self&lt;/IRI>
          &lt;name>Jenny Park&lt;/name>
      &lt;/agent>
      &lt;role xml:id="creator">
         &lt;IRI>http://schema.org/creator&lt;/IRI>
         &lt;name xml:lang="eng">creator&lt;/name>
      &lt;/role>
      &lt;change when="2015-03-16" who="park">Started file&lt;/change>
   &lt;/head>
      ...........              </programlisting>
                     </para>
                  </example>
               </para>
               <example>
                  <title>TAN-R-tok <code>&lt;head></code>, language-specific</title>
                  <para>
                     <programlisting>      ...........
   &lt;head>
      &lt;name>Tokenization pattern for English, in Penn Treebank style&lt;/name>
      &lt;desc>This tokenization pattern is designed to imitate the tokenization process followed by
         the Penn Treebank project on modern English texts. Expected input: raw text, one sentence
         at a time.&lt;/desc>
      &lt;location>tok.eng.1.xml&lt;/location>
      &lt;rights-excluding-sources rights-holder="kalvesmaki">
         &lt;IRI>http://creativecommons.org/licenses/by/4.0/deed.en_US&lt;/IRI>
         &lt;name>Creative Commons Attribution 4.0 International License&lt;/name>
         &lt;desc>This license is granted independent of rights and licenses associated with the
            source. &lt;/desc>
      &lt;/rights-excluding-sources>
      &lt;see-also>
         &lt;relationship>auxiliary&lt;/relationship>
         &lt;IRI>tag:parkj@textalign.net,2015:auxiliary:tokenizing-sed-script-1&lt;/IRI>
         &lt;name>sed tokenizing script, by Robert MacIntyre&lt;/name>
         &lt;desc>Written ca. 1995 at the University of Pennsylvania&lt;/desc>
         &lt;location when-accessed="2015-03-17"
            >http://www.cis.upenn.edu/~treebank/tokenizer.sed&lt;/location>
      &lt;/see-also>
      &lt;declarations>
         &lt;for-lang>en&lt;/for-lang>
         &lt;for-lang>eng&lt;/for-lang>
      &lt;/declarations>
      &lt;agent xml:id="park" roles="creator">
          &lt;IRI>tag:parkj@textalign.net,2015:self&lt;/IRI>
          &lt;name>Jenny Park&lt;/name>
      &lt;/agent>
      &lt;role xml:id="creator">
         &lt;IRI>http://schema.org/creator&lt;/IRI>
         &lt;name xml:lang="eng">creator&lt;/name>
      &lt;/role>
      &lt;change when="2015-03-17" who="park">Started file&lt;/change>
   &lt;/head>
      ...........              </programlisting>
                  </para>
               </example>
            </section>
            <section>
               <title>Data (<code>&lt;body></code>)</title>
               <para>
                  <table frame="all">
                     <title>Synopsis of TAN-R-tok <code>&lt;body></code>, <code>&lt;replace></code>,
                           <code>&lt;tokenize></code>, <code>&lt;pattern></code>,
                           <code>&lt;replacement></code>, <code>&lt;flags></code>,
                           <code>&lt;example></code>, <code>&lt;input></code>,
                           <code>&lt;output-token></code></title>
                     <tgroup cols="7">
                        <colspec colname="c1" colnum="1" colwidth="2.15*"/>
                        <colspec colname="c3" colnum="2" colwidth="1*"/>
                        <colspec colname="c4" colnum="3" colwidth="1.49*"/>
                        <colspec colname="c5" colnum="4" colwidth="2.94*"/>
                        <colspec colname="newCol7" colnum="5" colwidth="4.64*"/>
                        <colspec colname="newCol6" colnum="6" colwidth="2.52*"/>
                        <colspec colname="c6" colnum="7" colwidth="3.09*"/>
                        <thead>
                           <row>
                              <entry>name</entry>
                              <entry>req?</entry>
                              <entry>qty</entry>
                              <entry>parent</entry>
                              <entry>attributes</entry>
                              <entry>children</entry>
                              <entry>purpose</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry><code>&lt;body></code></entry>
                              <entry>yes</entry>
                              <entry>one</entry>
                              <entry><code>&lt;TAN-R-tok></code></entry>
                              <entry><xref linkend="in_progress"/>?, <xref linkend="edit_stamp"
                                 />?</entry>
                              <entry><code>&lt;replace></code>*, <code>&lt;tokenize></code>,
                                    <code>&lt;example></code>+</entry>
                              <entry>contains data</entry>
                           </row>
                           <row>
                              <entry><code>&lt;replace></code></entry>
                              <entry>no</entry>
                              <entry>one or more</entry>
                              <entry><code>&lt;body></code></entry>
                              <entry><code>@xpath</code>?, <xref linkend="edit_stamp"/>?</entry>
                              <entry><code>&lt;pattern></code>, <code>&lt;replacement></code>,
                                    <code>&lt;flags></code>?</entry>
                              <entry>state a pattern to be searched and replaced in a digital
                                 source</entry>
                           </row>
                           <row>
                              <entry><code>&lt;tokenize></code></entry>
                              <entry>yes</entry>
                              <entry>one</entry>
                              <entry><code>&lt;body></code></entry>
                              <entry><xref linkend="edit_stamp"/>?</entry>
                              <entry><code>&lt;pattern></code>, <code>&lt;flags></code>? </entry>
                              <entry>declares tokenization function to be applied to a
                                 string</entry>
                           </row>
                           <row>
                              <entry><code>&lt;pattern></code></entry>
                              <entry>yes</entry>
                              <entry>one</entry>
                              <entry><code>&lt;replace></code>, <code>&lt;tokenize></code></entry>
                              <entry><xref linkend="edit_stamp"/>?</entry>
                              <entry>data (xsd:string)</entry>
                              <entry>state through a regular expression a pattern to be
                                 found</entry>
                           </row>
                           <row>
                              <entry><code>&lt;replacement></code></entry>
                              <entry>yes</entry>
                              <entry>one</entry>
                              <entry><code>&lt;replace></code></entry>
                              <entry><xref linkend="edit_stamp"/>?</entry>
                              <entry>data (xsd:string)</entry>
                              <entry>state through a regular expression a replacement
                                 pattern</entry>
                           </row>
                           <row>
                              <entry><code>&lt;flags></code></entry>
                              <entry>no</entry>
                              <entry>one</entry>
                              <entry><code>&lt;replace></code>, <code>&lt;tokenize></code></entry>
                              <entry><xref linkend="edit_stamp"/>?</entry>
                              <entry>data (xsd:string)</entry>
                              <entry>declare flags to be applied in a replace operation</entry>
                           </row>
                           <row>
                              <entry><code>&lt;example></code></entry>
                              <entry>yes</entry>
                              <entry>one or more</entry>
                              <entry><code>&lt;body></code></entry>
                              <entry><xref linkend="edit_stamp"/>?</entry>
                              <entry><code>&lt;input></code>,
                                 <code>&lt;output-token></code>+</entry>
                              <entry>Provide an example of a tokenized string</entry>
                           </row>
                           <row>
                              <entry><code>&lt;input></code></entry>
                              <entry>yes</entry>
                              <entry>one</entry>
                              <entry><code>&lt;example></code></entry>
                              <entry><xref linkend="edit_stamp"/>?</entry>
                              <entry>data (xsd:string)</entry>
                              <entry>Provide example input</entry>
                           </row>
                           <row>
                              <entry><code>&lt;output-token></code></entry>
                              <entry>yes</entry>
                              <entry>one or more</entry>
                              <entry><code>&lt;example></code></entry>
                              <entry><xref linkend="edit_stamp"/>?</entry>
                              <entry>data (xsd:string)</entry>
                              <entry>Provide example output token</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table>
               </para>
               <para>The <code>&lt;body></code> of a TAN-R-tok file takes the customary optional
                  attributes found in other TAN files (see <xref linkend="in_progress"/> and <xref
                     linkend="edit_stamp"/>). <code>&lt;body></code> has only three kinds of
                  children: zero or more <code>&lt;replace></code>s followed by one
                     <code>&lt;tokenize></code> followed by one or more <code>&lt;example></code>s
                  .</para>
               <para><code>&lt;replace></code> corresponds to <code>fn:replace</code> as defined in
                     <link xlink:href="http://www.w3.org/TR/xpath-functions-30/#func-replace">XPath
                     Functions 3.0</link>. <code>&lt;replace></code> may take an optional
                     <code>@xpath</code> value, to restrict the scope of the replacement to a
                  specific place in a valid XML source.<caution>
                     <para>Using <code>@xpath</code> is not recommended if you anticipate users who
                        may be relying upon XSLT 2.0 and earlier for transformations. Only from
                        version 3.0 has XPath been able to convert a string datatype (the datatype
                        of <code>@xpath</code>) into an XPath expression.</para>
                  </caution>
                  <code>&lt;replace></code> must take one <code>&lt;pattern></code> and one
                     <code>&lt;replacement></code>, two regular expressions (see <xref
                     linkend="regular_expressions"/>) to be fed as parameters into an XPath
                     <code>fn:replace</code> function. It may take an optional
                     <code>&lt;flags></code>, which adds parameters to the search, i.e., any
                  combination of <code>&lt;s></code> ("dot-all" mode), <code>&lt;m></code>
                  (multi-line mode), <code>&lt;i></code> (case-insensitive mode),
                     <code>&lt;x></code> (strip white spaces from <code>&lt;pattern></code>), or
                     <code>&lt;q></code> (suppress metacharacters) as values, <link
                     xlink:href="http://www.w3.org/TR/xpath-functions-30/#flags">explained in
                     greater detail in the W3C recommendation</link>.</para>
               <para>Multiple <code>&lt;replace></code> values will be applied according to document
                  order. It is very important to be careful to anticipate ways an early search might
                  adversely affect a later one.</para>
               <para>Each <code>&lt;tokenize></code> has exactly one <code>&lt;pattern></code>
                  element and an optional <code>&lt;flags></code> element. The values of these two
                  elements, both strings, represent regular expressions that should be used as
                  parameters for <code>fn:tokenize</code> as defined in <link
                     xlink:href="http://www.w3.org/TR/xpath-functions-30/#func-tokenize">XPath
                     Functions 3.0</link>. The value of <code>&lt;pattern></code> is a regular
                  expression that will be used to segment a leaf <code>&lt;div></code> into a
                  sequence of tokens; <code>&lt;flags></code> takes the same options
                     <code>&lt;replace></code> does.</para>
               <para>Finally, one or more <code>&lt;example></code> elements provide one
                     <code>&lt;input></code> and one or more <code>&lt;output-token></code>s.
                     <code>&lt;input></code> takes any string, and the resultant sequence of tokens
                  is supplied in <code>&lt;output-token></code>. If <code>&lt;input></code>, when
                  fed into the sequence of <code>&lt;replace></code>s and
                  <code>&lt;tokenize></code>, does not produce the sequence declared by the
                     <code>&lt;output-token></code>s, an error will be generated.</para>
               <example>
                  <title>TAN-R-tok <code>&lt;body></code>, treating punctuation clusters as word
                     tokens</title>
                  <para>
                     <programlisting>      ...........
   &lt;body>
      &lt;replace>
         &lt;comment when="2015-03-16" who="park">Pad every cluster of non-word characters with
            space.&lt;/comment>
         &lt;pattern>(\W+)&lt;/pattern>
         &lt;replacement> $1 &lt;/replacement>
      &lt;/replace>
      &lt;replace>
         &lt;comment when="2015-03-16" who="park">Delete end spaces.&lt;/comment>
         &lt;pattern>^\s+|\s+$&lt;/pattern>
         &lt;replacement/>
      &lt;/replace>
      &lt;tokenize>
         &lt;pattern>\s+&lt;/pattern>
      &lt;/tokenize>
      &lt;example>
         &lt;input>I said, "Where is the ping-pong table?"&lt;/input>
         &lt;output-token>I&lt;/output-token>
         &lt;output-token>said&lt;/output-token>
         &lt;output-token>,&lt;/output-token>
         &lt;output-token>"&lt;/output-token>
         &lt;output-token>Where&lt;/output-token>
         &lt;output-token>is&lt;/output-token>
         &lt;output-token>the&lt;/output-token>
         &lt;output-token>ping&lt;/output-token>
         &lt;output-token>-&lt;/output-token>
         &lt;output-token>pong&lt;/output-token>
         &lt;output-token>table&lt;/output-token>
         &lt;output-token>?"&lt;/output-token>
      &lt;/example>
   &lt;/body>
      ...........              </programlisting>
                  </para>
               </example>
               <example>
                  <title>TAN-R-tok <code>&lt;body></code>, ignoring punctuation</title>
                  <para>
                     <programlisting>      ...........
   &lt;body>
      &lt;replace>
         &lt;comment when="2015-03-16" who="park">Remove end nonword characters&lt;/comment>
         &lt;pattern>^\W+|\W+$&lt;/pattern>
         &lt;replacement/>
      &lt;/replace>
      &lt;tokenize>
         &lt;comment when="2015-03-16" who="park">Tokenize on any cluster of nonword
            characters.&lt;/comment>
         &lt;pattern>\W+&lt;/pattern>
      &lt;/tokenize>
      &lt;example>
         &lt;input>I said, "Where is the ping-pong table?"&lt;/input>
         &lt;output-token>I&lt;/output-token>
         &lt;output-token>said&lt;/output-token>
         &lt;output-token>Where&lt;/output-token>
         &lt;output-token>is&lt;/output-token>
         &lt;output-token>the&lt;/output-token>
         &lt;output-token>ping&lt;/output-token>
         &lt;output-token>pong&lt;/output-token>
         &lt;output-token>table&lt;/output-token>
      &lt;/example>
   &lt;/body>
      ...........              </programlisting>
                  </para>
               </example>
               <example>
                  <title>TAN-R-tok <code>&lt;body></code>, tokenizing English in the manner of the
                     Penn Treebank project</title>
                  <para>
                     <programlisting>      ...........
   &lt;body>
      &lt;replace>
         &lt;comment when="2015-03-17" who="park">get directional quotes&lt;/comment>
         &lt;pattern>^"&lt;/pattern>
         &lt;replacement>`` &lt;/replacement>
      &lt;/replace>
      &lt;replace>
         &lt;pattern>([ \(\[{&amp;lt;])"&lt;/pattern>
         &lt;replacement>$1 `` &lt;/replacement>
      &lt;/replace>
      &lt;comment when="2015-03-17" who="park">close quotes at end&lt;/comment>
      &lt;replace>
         &lt;pattern>\.\.\.&lt;/pattern>
         &lt;replacement>...&lt;/replacement>
      &lt;/replace>
      &lt;replace>
         &lt;pattern>([,;:@#$%&amp;amp;])&lt;/pattern>
         &lt;replacement> $1 &lt;/replacement>
      &lt;/replace>
      &lt;replace>
         &lt;comment when="2015-03-17" who="park">Offset final periods&lt;/comment>
         &lt;pattern>([^.])([.])([\]\)}>"']*)$&lt;/pattern>
         &lt;replacement>$1 $2$3&lt;/replacement>
      &lt;/replace>
      &lt;replace>
         &lt;comment when="2015-03-17" who="park">Offset question marks, exclamation marks, other
            punctuation&lt;/comment>
         &lt;pattern>([?!\]\[\(\){}&amp;lt;>—–])&lt;/pattern>
         &lt;replacement> $1 &lt;/replacement>
      &lt;/replace>
      &lt;replace>
         &lt;comment when="2015-03-17" who="park">Offset double hyphens&lt;/comment>
         &lt;pattern>--&lt;/pattern>
         &lt;replacement> $1 &lt;/replacement>
      &lt;/replace>
      &lt;replace>
         &lt;comment when="2015-03-17" who="park">Insert opening space, to reduce regex
            searches.&lt;/comment>
         &lt;pattern>^(.)&lt;/pattern>
         &lt;replacement> $1&lt;/replacement>
      &lt;/replace>
      &lt;replace>
         &lt;comment when="2015-03-17" who="park">Insert closing space.&lt;/comment>
         &lt;pattern>(.)$&lt;/pattern>
         &lt;replacement>$1 &lt;/replacement>
      &lt;/replace>
      &lt;replace>
         &lt;comment when="2015-03-17" who="park">Offset closing quotation marks&lt;/comment>
         &lt;pattern>"&lt;/pattern>
         &lt;replacement> '' &lt;/replacement>
      &lt;/replace>
      &lt;replace>
         &lt;comment when="2015-03-17" who="park">Possessive or close single quote&lt;/comment>
         &lt;pattern>([^'])' &lt;/pattern>
         &lt;replacement>$1 ' &lt;/replacement>
      &lt;/replace>
      &lt;replace>
         &lt;comment when="2015-03-17" who="park">Separate contracted enclitics, e.g., it's,
            I'm&lt;/comment>
         &lt;pattern>'([sSmMdD]) &lt;/pattern>
         &lt;replacement> '$1 &lt;/replacement>
      &lt;/replace>
      &lt;replace>
         &lt;comment when="2015-03-17" who="park">'ll, 're, 've&lt;/comment>
         &lt;pattern>'(ll|re|ve) &lt;/pattern>
         &lt;replacement> '$1 &lt;/replacement>
         &lt;flags>i&lt;/flags>
      &lt;/replace>
      &lt;replace>
         &lt;comment when="2015-03-17" who="park">n't&lt;/comment>
         &lt;pattern>(n't) &lt;/pattern>
         &lt;replacement> $1 &lt;/replacement>
         &lt;flags>i&lt;/flags>
      &lt;/replace>
      &lt;replace>
         &lt;pattern> (can)(not) &lt;/pattern>
         &lt;replacement> $1 $2 &lt;/replacement>
         &lt;flags>i&lt;/flags>
      &lt;/replace>
      &lt;replace>
         &lt;pattern> (d')(ye) &lt;/pattern>
         &lt;replacement> $1 $2 &lt;/replacement>
         &lt;flags>i&lt;/flags>
      &lt;/replace>
      &lt;replace>
         &lt;pattern> (gim)(me) &lt;/pattern>
         &lt;replacement> $1 $2 &lt;/replacement>
         &lt;flags>i&lt;/flags>
      &lt;/replace>
      &lt;replace>
         &lt;pattern> (gon)(na) &lt;/pattern>
         &lt;replacement> $1 $2 &lt;/replacement>
         &lt;flags>i&lt;/flags>
      &lt;/replace>
      &lt;replace>
         &lt;pattern> (got)(ta) &lt;/pattern>
         &lt;replacement> $1 $2 &lt;/replacement>
         &lt;flags>i&lt;/flags>
      &lt;/replace>
      &lt;replace>
         &lt;pattern> (lem)(me) &lt;/pattern>
         &lt;replacement> $1 $2 &lt;/replacement>
         &lt;flags>i&lt;/flags>
      &lt;/replace>
      &lt;replace>
         &lt;pattern> (more)('n) &lt;/pattern>
         &lt;replacement> $1 $2 &lt;/replacement>
         &lt;flags>i&lt;/flags>
      &lt;/replace>
      &lt;replace>
         &lt;pattern> ('t)(is) &lt;/pattern>
         &lt;replacement> $1 $2 &lt;/replacement>
         &lt;flags>i&lt;/flags>
      &lt;/replace>
      &lt;replace>
         &lt;pattern> ('t)(was) &lt;/pattern>
         &lt;replacement> $1 $2 &lt;/replacement>
         &lt;flags>i&lt;/flags>
      &lt;/replace>
      &lt;replace>
         &lt;pattern> (wan)(na) &lt;/pattern>
         &lt;replacement> $1 $2 &lt;/replacement>
         &lt;flags>i&lt;/flags>
      &lt;/replace>
      &lt;replace>
         &lt;pattern> (whad)(dya) &lt;/pattern>
         &lt;replacement> $1 $2 &lt;/replacement>
         &lt;flags>i&lt;/flags>
      &lt;/replace>
      &lt;replace>
         &lt;pattern> (wha)(t)(cha) &lt;/pattern>
         &lt;replacement> $1 $2 $3 &lt;/replacement>
         &lt;flags>i&lt;/flags>
      &lt;/replace>
      &lt;replace>
         &lt;comment when="2015-03-17" who="park">Strip opening and closing space.&lt;/comment>
         &lt;pattern>(^\s+|\s+$)&lt;/pattern>
         &lt;replacement/>
      &lt;/replace>
      &lt;tokenize>
         &lt;pattern>\s+&lt;/pattern>
      &lt;/tokenize>
      &lt;example>
         &lt;input>"I said, ["Wanna play ping-pong?">&lt;/input>
         &lt;output-token>``&lt;/output-token>
         &lt;output-token>I&lt;/output-token>
         &lt;output-token>said&lt;/output-token>
         &lt;output-token>,&lt;/output-token>
         &lt;output-token>[&lt;/output-token>
         &lt;output-token>``&lt;/output-token>
         &lt;output-token>Wan&lt;/output-token>
         &lt;output-token>na&lt;/output-token>
         &lt;output-token>play&lt;/output-token>
         &lt;output-token>ping-pong&lt;/output-token>
         &lt;output-token>?&lt;/output-token>
         &lt;output-token>''&lt;/output-token>
         &lt;output-token>>&lt;/output-token>
      &lt;/example>
   &lt;/body>
      ...........              </programlisting>
                  </para>
               </example>
            </section>
         </section>
         <section xml:id="tan-r-mor">
            <title>Morphological Concepts and Patterns (TAN-R-mor)</title>
            <para>TAN-R-mor files describe the morphological categories for a given language and the
               rules allowed in applying them to any given word token. The format allows
               specificity, flexibility, and responsiveness. Assertions in the format may be
               doubted, rules may be expressed as contingent upon other coniditons, and warnings and
               error messages may be sent to users who may have used a pattern incorrectly, or not
               in with the best practices.</para>
            <para>The TAN-R-mor format is, in essence, like a Schematron language for languages.
               That is, you may specify series of reports and assertions to be made, based upon how
               user of the format tries to combine morphological features. So a user is not only
               able to see if the rules have been violated, but why, and exactly where.</para>
            <para>This chapter should be read in close conjunction with that pertaining to TAN-LM
               files, which exclusively depend upon them (<xref linkend="tan-lm"/>).</para>
            <section>
               <title>Principles and Assumptions</title>
               <para>Certain assumptions and recommendations are made regarding morphology files,
                  complementing the more general ones; see <xref linkend="design_principles"
                  />.</para>
               <para>TAN-R-mor files are restricted exclusively to the description of the
                  inflectional categories that characterize a language, and to declare rules that
                  restrict how those categories can be declared or combined. Editors of these files
                  should be familiar with the grammar of the languages they are describing.</para>
               <para>The TAN-R-mor format has been designed under the assumption that word formation
                  and inflection, in any given language, can be analyzed in different ways. It is
                  also assumed that patterns of word inflection and formation can be categorized,
                  classified, named, and described. Even if two views of a single language are in
                  disagreement, those disagreements should be stated in comparable terms, when
                  possible.</para>
               <para>For example, not everyone agrees on the number of major parts of speech in
                  English. And among those who think there are only eight, some name and define
                  those eight categories in ways that are at odds the consensus of modern linguists.
                  The older paradigm held to a major category called <emphasis role="italic"
                     >conjunctions</emphasis>, whereas most linguists prefer to break this into two
                  major categories, <emphasis role="italic">subordinators</emphasis> and <emphasis
                     role="italic">coordinators</emphasis>.</para>
               <para>The TAN-R-mor format has also been designed to cater to two approaches to
                  coding the morphological features of a language: structured or unstructured. </para>
               <para>Structured codes are created with a presumption of a set number of categories
                  into which various features of morphology should be combined. Structured codes are
                  of a set length, and usually require gaps in different spots. For example, the
                  Perseus approach to the morphological categories of Greek, Latin, and other highly
                  inflected languages dictate ten categories, with the first two being the major and
                  minor parts of speech, and the subsequent categories devoted to person, number,
                  tense, and so forth. For each word being analyzed, all ten categories must have a
                  value, even if null.</para>
               <para>Morphology based on unstructured codes relies upon a single master set of tags
                  for morphological features. Word tokens in that language can be given one or more
                  tags drawn from that set. This approach is viable for any language, but it is most
                  often found in tagging sets for languages that have little inflection, e.g., the
                  Brown and Penn sets for English.</para>
               <para>Both structured and unstructured approaches begin the same in every TAN-R-mor
                  file: a set of all possible morphological features, in the
                     <code>&lt;declarations></code> part of the header. If one wishes, this set can
                  then be assigned a series of categories, to turn the unstructured tag set into a
                  structured one. This process is described below.</para>
            </section>
            <section>
               <title>Rootmost Element and Header</title>
               <para>The rootmost element of a morphological rule file is
                     <code>&lt;TAN-R-mor></code>.</para>
               <para>Zero or more <code>&lt;source></code> elements describe the grammars or related
                  works that account for the rules declared in the TAN file. If the rules are not
                  based upon any published work, then <code>&lt;source></code> may be omitted. Any
                  TAN-R-mor file without a source will assume to be based upon the personal
                  knowledge of the <code>&lt;agent></code>s who edited the file.</para>
               <para><code>&lt;declarations></code> takes two types of element, one or more
                     <code>&lt;for-lang></code>s that take a standard language code (see <xref
                     linkend="language"/>) and one or more <code>&lt;feature></code>s that declare
                  the morphological features that characterize the languages being described.</para>
               <para><emphasis role="bold">&lt;I left off at this point. This entire section needs
                     to be rewritten in light of the new TAN-R-mor schemas.></emphasis></para>
               <para>
                  <example>
                     <title>TAN-R-mor <code>&lt;head></code></title>
                     <para>
                        <programlisting>      ...........
   &lt;head>
      &lt;name>Perseus rules for Greek morphology&lt;/name>
      &lt;rights-excluding-sources rights-holder="kalvesmaki">
         &lt;IRI>http://creativecommons.org/licenses/by/4.0/deed.en_US&lt;/IRI>
         &lt;name>Creative Commons Attribution 4.0 International License&lt;/name>
         &lt;name>This license is granted independent of rights and licenses associated with the
            source. &lt;/name>
      &lt;/rights-excluding-sources>
      &lt;source>
         &lt;IRI>urn:uuid:147d8040-4ca9-11e3-848f-0002a5d5c51b:2013-11-18&lt;/IRI>
         &lt;name>Perseus codes&lt;/name>
         &lt;desc xml:lang="eng">Perseus's standard code for Greek morphology (a string of 10 chars.),
            found at http://perseus.uchicago.edu/about.html (accessed 2013-11-18)&lt;/desc>
      &lt;/source>
      &lt;declarations>
         &lt;for-lang>grc&lt;/for-lang>
      &lt;/declarations>
      &lt;agent xml:id="kalvesmaki" roles="editor">
         &lt;IRI>http://viaf.org/viaf/299582703&lt;/IRI>
         &lt;IRI>tag:kalvesmaki@gmail.com,2014:self&lt;/IRI>
         &lt;name>Joel Kalvesmaki&lt;/name>
      &lt;/agent>
      &lt;role xml:id="editor">
         &lt;IRI>http://schema.org/editor&lt;/IRI>
         &lt;name>Editor&lt;/name>
      &lt;/role>
      &lt;change who="kalvesmaki" when="2014-02-26">File created&lt;/change>
      &lt;comment when="2013-11-16" who="kalvesmaki">This was written to codify for the TAN system
         the 10-character codes developed by Perseus for ancient Greek. &lt;/comment>
   &lt;/head>
      ...........              </programlisting>
                     </para>
                  </example>
               </para>
            </section>
            <section>
               <title>Data (<code>&lt;body></code>)</title>
               <para>
                  <table frame="all">
                     <title>Synopsis of TAN-R-mor <code>&lt;body></code>,
                           <code>&lt;invalid-pattern></code>, <code>&lt;category></code>,
                           <code>&lt;option></code></title>
                     <tgroup cols="7">
                        <colspec colname="c1" colnum="1" colwidth="2.15*"/>
                        <colspec colname="c3" colnum="2" colwidth="1*"/>
                        <colspec colname="c4" colnum="3" colwidth="1.49*"/>
                        <colspec colname="c5" colnum="4" colwidth="2.94*"/>
                        <colspec colname="newCol7" colnum="5" colwidth="4.64*"/>
                        <colspec colname="newCol6" colnum="6" colwidth="2.52*"/>
                        <colspec colname="c6" colnum="7" colwidth="3.09*"/>
                        <thead>
                           <row>
                              <entry>name</entry>
                              <entry>req?</entry>
                              <entry>qty</entry>
                              <entry>parent</entry>
                              <entry>attributes</entry>
                              <entry>children</entry>
                              <entry>purpose</entry>
                           </row>
                        </thead>
                        <tbody>
                           <row>
                              <entry><code>&lt;body></code></entry>
                              <entry>yes</entry>
                              <entry>one</entry>
                              <entry><code>&lt;TAN-R-mor></code></entry>
                              <entry><xref linkend="in_progress"/>?, <xref linkend="edit_stamp"
                                 />?</entry>
                              <entry><code>&lt;invalid-pattern></code>*,
                                 <code>&lt;category></code>+</entry>
                              <entry>contains data</entry>
                           </row>
                           <row>
                              <entry><code>&lt;invalid-pattern></code></entry>
                              <entry>no</entry>
                              <entry>one or more</entry>
                              <entry><code>&lt;body></code></entry>
                              <entry><xref linkend="edit_stamp"/>?, <code>@cert</code>?</entry>
                              <entry>text (xsd:string)</entry>
                              <entry>declares a pattern of space-delimited codes disallowed</entry>
                           </row>
                           <row>
                              <entry><code>&lt;category></code></entry>
                              <entry>yes</entry>
                              <entry>one or more</entry>
                              <entry><code>&lt;body></code></entry>
                              <entry><xref linkend="edit_stamp"/>?</entry>
                              <entry><xref linkend="iri_and_name"/>,
                                 <code>&lt;option></code>+</entry>
                              <entry>collects a group of morphological concepts</entry>
                           </row>
                           <row>
                              <entry><code>&lt;option></code></entry>
                              <entry>yes</entry>
                              <entry>one or more</entry>
                              <entry><code>&lt;category></code></entry>
                              <entry><xref linkend="edit_stamp"/>?, <code>@code</code></entry>
                              <entry><xref linkend="iri_and_name"/></entry>
                              <entry>names a morphological concept that is a viable option for the
                                 given category</entry>
                           </row>
                        </tbody>
                     </tgroup>
                  </table>
               </para>
               <para>The <code>&lt;body></code> of a TAN-R-mor file takes the customary optional
                  attributes found in other TAN files (see <xref linkend="in_progress"/> and <xref
                     linkend="edit_stamp"/>). <code>&lt;body></code> has only two type of children:
                  zero or more <code>&lt;invalid-pattern></code>s followed by one or more
                     <code>&lt;category></code>s followed by zero or more
                     <code>&lt;invalid-pattern></code>s .</para>
               <para><code>&lt;invalid-pattern></code> takes a regular expression defining patterns
                  of codes that are disallowed (explained below). Aside from an optional <xref
                     linkend="edit_stamp"/> and <code>@cert</code>?, it takes only text, followed
                  perhaps by a single <code>&lt;comment></code>. <code>@cert</code> takes a numeral
                  from 0 to 1 or else <code>&lt;high></code> or <code>&lt;low></code>, which are to
                  be translated to mean "is probably" and "is probably not" respectively. </para>
               <para><code>&lt;category></code>, in addition to an optional <xref
                     linkend="edit_stamp"/>, takes the <xref linkend="iri_and_name"/> to describe a
                  category of morphological terms, and one or more <code>&lt;option></code>s.</para>
               <para><code>&lt;option></code>, which describes a single morphological concept, takes
                  an <xref linkend="edit_stamp"/> and the <xref linkend="iri_and_name"/>. It also
                  takes a mandatory <code>@code</code>, which must be unique within a given
                  category. But that value may be used in other <code>&lt;category></code>s.
                     <code>@code</code> may by anything that is not a space character or a hyphen
                  (reserved for the concept "not applicable").</para>
               <para>There is no particular rule as to what concepts are allowed in a
                     <code>&lt;category></code>. In highly inflected languages, it makes sense to
                  categorize according to part of speech. For languages with little inflection, a
                  single <code>&lt;category></code> might contain all the options available.</para>
               <para>The TAN-R-mor file will be referred to by TAN-LM files by using one or more
                     <code>@code</code> values, space delimited, with each value corresponding in
                  order to the <code>&lt;category></code> order. For example, if a Greek TAN-R-mor
                  file is assigned ten categories, then any TAN-LM file using that file will have a
                  value that looks like <code>x x x x x x x x x x</code>, where <code>&lt;x></code>
                  is a code value. If a particular category is not applicable, the hyphen is used.
                  Anyone using the TAN-R-mor file will not be able to cite more than one
                     <code>&lt;option></code> in a given <code>&lt;category></code>.</para>
               <para><code>@code</code> values may rendered in any case you wish, but they must not
                  be treated as case-sensitive. If within any category one <code>@code</code> is a
                  case variant of another (e.g., <code>&lt;S></code> and <code>&lt;s></code>), then
                  the file will be marked as invalid.</para>
               <para>Every <code>&lt;option></code> must refer to a morphological concept that is
                  unique within the entire file. That is, if you wish to allow the concept <emphasis
                     role="italic">adverb</emphasis> as an option, that <code>&lt;option></code>
                  must appear in only one <code>&lt;category></code>, and no others.</para>
               <para>Collectively, all the <code>@code</code> and <code>&lt;category></code>s
                  provide the maximal limits of what is allowed. <code>&lt;invalid-pattern></code>
                  allows you to restrict those limits to what is permitted in standard grammatical
                  analysis. Let us take for example a TAN-R-mor file that defines the term <emphasis
                     role="italic">conjunction</emphasis> in the first <code>&lt;category></code>
                  and <emphasis role="italic">first-person</emphasis> in the second, and let us
                  suppose the language has no concept of a first-person conjunction. You may
                  disallow this combination in an <code>&lt;invalid-pattern></code> with the pattern
                     <code>^c 1</code>, where <code>&lt;c></code> and <code>&lt;1></code> are the
                  codes for the two concepts. (The <code>^</code> is a standard regular expression
                  anchor, indicating that <code>&lt;c></code> should be at the beginning of the
                  searched string.) These patterns may be combined in accordance with regular
                  expressions (see <xref linkend="regular_expressions"/>). They make the presumption
                  that the string has had its space normalized, so <code>\s+</code> ("one or more
                  space characters") is not necessary in an
                  <code>&lt;invalid-pattern></code>.</para>
               <para>If you are editing a TAN-R-mor file that has already been published, and you
                  are adding or altering the pattern invalidity restrictions. In this case, it is a
                  good idea to make sure that <code>@in-progress</code> is removed or set to false,
                  and to add new <code>&lt;invalid-pattern></code>s with the <code>@cert</code> set
                  to a value other than 1. Doing so means that anyone using the old version will not
                  have their data rendered invalid, and it will alert them both to new rules that
                  have been included. At some point, after editing is complete you will be prepared
                  to declare the morphology file to be a new version altogether. At that point,
                  change the IRI name of the file, remove the <code>@cert</code> values that were
                  placeholders, and save the file as a different file name. Do not remove the older,
                  published version, since users may be depending upon it.</para>
               <para>Although it is good practice to declare as many invalid patterns as you can,
                  you are not required to state every possible combination that is not allowed. If
                  you are not confident that a given pattern should be disallowed, use the
                     <code>@cert</code> value in <code>&lt;invalid-pattern></code>. Any TAN-LM file
                  using that value will not be marked as invalid, but a warning will be delivered to
                  the user, along with the content of any <code>&lt;comment></code> that is
                  included.</para>
               <para>Because an example is the best way to illustrate how one might structure
                  categories in a TAN-R-mor <code>&lt;body></code>, a full
                  <code>&lt;example></code>, but with </para>
               <example>
                  <title>TAN-R-mor <code>&lt;body></code></title>
                  <para>
                     <programlisting>      ...........
   &lt;body>
      &lt;category>
         &lt;IRI>http://dbpedia.org/resource/Part_of_speech&lt;/IRI>
         &lt;name>major part of speech&lt;/name>
         &lt;option code="a">
            &lt;IRI>http://dbpedia.org/resource/Adjective&lt;/IRI>
            &lt;name>adjective&lt;/name>
         &lt;/option>
         &lt;option code="c">
            &lt;IRI>http://dbpedia.org/resource/Conjunction&lt;/IRI>
            &lt;name>conjunction&lt;/name>
         &lt;/option>
         &lt;option code="d">
            &lt;IRI>http://dbpedia.org/resource/Adverb&lt;/IRI>
            &lt;name>adverb&lt;/name>
         &lt;/option>
         &lt;option code="e">
            &lt;IRI>tag:textalign.net,2015:morphology:concept:ωvocative&lt;/IRI>
            &lt;name>ω vocative&lt;/name>
         &lt;/option>
         &lt;option code="g">
            &lt;IRI>http://dbpedia.org/resource/Grammatical_particle&lt;/IRI>
            &lt;name>particle&lt;/name>
         &lt;/option>
         &lt;option code="i">
            &lt;IRI>http://dbpedia.org/resource/Interjection&lt;/IRI>
            &lt;name>interjection&lt;/name>
         &lt;/option>
         &lt;option code="m">
            &lt;IRI>http://dbpedia.org/resource/Numeral_(linguistics)&lt;/IRI>
            &lt;name>numeral&lt;/name>
         &lt;/option>
         &lt;option code="n">
            &lt;IRI>http://dbpedia.org/resource/Noun&lt;/IRI>
            &lt;name>noun&lt;/name>
         &lt;/option>
         &lt;option code="p">
            &lt;IRI>http://dbpedia.org/resource/Pronoun&lt;/IRI>
            &lt;name>pronoun&lt;/name>
         &lt;/option>
         &lt;option code="r">
            &lt;IRI>http://dbpedia.org/resource/Preposition&lt;/IRI>
            &lt;name>preposition&lt;/name>
         &lt;/option>
         &lt;option code="v">
            &lt;IRI>http://dbpedia.org/resource/Verb&lt;/IRI>
            &lt;name>verb&lt;/name>
         &lt;/option>
         &lt;option code="y">
            &lt;IRI>http://dbpedia.org/resource/Acronym&lt;/IRI>
            &lt;name>acronym&lt;/name>
         &lt;/option>
      &lt;/category>
      &lt;category>
         &lt;IRI>urn:uuid:40aa0be5-6746-4f39-b70f-6c94fd1e4578 &lt;/IRI>
         &lt;name>minor part of speech&lt;/name>
         &lt;option code="a">
            &lt;IRI>http://dbpedia.org/resource/Article_(grammar)&lt;/IRI>
            &lt;name>article or determinative&lt;/name>
         &lt;/option>
         &lt;option code="c">
            &lt;IRI>http://dbpedia.org/resource/Reciprocal_pronoun&lt;/IRI>
            &lt;name>reciprocal pronoun&lt;/name>
         &lt;/option>
         &lt;option code="d">
            &lt;IRI>http://dbpedia.org/resource/Demonstrative&lt;/IRI>
            &lt;name>demonstrative&lt;/name>
         &lt;/option>
         &lt;option code="e">
            &lt;IRI>http://dbpedia.org/resource/Proper_noun&lt;/IRI>
            &lt;name>proper&lt;/name>
         &lt;/option>
         &lt;option code="i">
            &lt;IRI>http://dbpedia.org/resource/Interrogative&lt;/IRI>
            &lt;name>interrogative&lt;/name>
         &lt;/option>
         &lt;option code="k">
            &lt;IRI>http://dbpedia.org/resource/Reflexive_pronoun&lt;/IRI>
            &lt;name>reflexive&lt;/name>
         &lt;/option>
         &lt;option code="m">
            &lt;IRI>tag:textalign.net,2015:morphology:concept:modal&lt;/IRI>
            &lt;name>modal&lt;/name>
            &lt;name>modal (particle)&lt;/name>
         &lt;/option>
         &lt;option code="p">
            &lt;IRI>http://dbpedia.org/resource/Personal_pronoun&lt;/IRI>
            &lt;name>personal pronoun&lt;/name>
         &lt;/option>
         &lt;option code="r">
            &lt;IRI>http://dbpedia.org/resource/Relative_pronoun&lt;/IRI>
            &lt;name>relative pronoun&lt;/name>
         &lt;/option>
         &lt;option code="s">
            &lt;IRI>http://dbpedia.org/resource/Possessive_pronoun&lt;/IRI>
            &lt;name>possessive pronoun&lt;/name>
         &lt;/option>
         &lt;option code="v">
            &lt;IRI>tag:textalign.net,2015:morphology:concept:verbal&lt;/IRI>
            &lt;name>verbal&lt;/name>
         &lt;/option>
         &lt;option code="x">
            &lt;IRI>http://dbpedia.org/resource/Indefinite_pronoun&lt;/IRI>
            &lt;name>indefinite&lt;/name>
         &lt;/option>
      &lt;/category>
      &lt;category>
         &lt;IRI>http://dbpedia.org/resource/Grammatical_person&lt;/IRI>
         &lt;name>person&lt;/name>
         &lt;option code="1">
            &lt;IRI>urn:uuid:754589f6-8f64-11e3-950a-425861b86ab6&lt;/IRI>
            &lt;name>first person&lt;/name>
         &lt;/option>
         &lt;option code="2">
            &lt;IRI>urn:uuid:75458d20-8f64-11e3-950a-425861b86ab6&lt;/IRI>
            &lt;name>second person&lt;/name>
         &lt;/option>
         &lt;option code="3">
            &lt;IRI>urn:uuid:75459068-8f64-11e3-950a-425861b86ab6&lt;/IRI>
            &lt;name>third person&lt;/name>
         &lt;/option>
      &lt;/category>
      &lt;category>
         &lt;IRI>http://dbpedia.org/resource/Grammatical_number&lt;/IRI>
         &lt;name>number&lt;/name>
         &lt;option code="d">
            &lt;IRI>http://dbpedia.org/resource/Dual_(grammatical_number)&lt;/IRI>
            &lt;name>dual&lt;/name>
         &lt;/option>
         &lt;option code="p">
            &lt;IRI>http://dbpedia.org/resource/Plural&lt;/IRI>
            &lt;name>plural&lt;/name>
         &lt;/option>
         &lt;option code="s">
            &lt;IRI>http://dbpedia.org/resource/Singulative_number&lt;/IRI>
            &lt;name>singular&lt;/name>
         &lt;/option>
      &lt;/category>
      &lt;category>
         &lt;IRI>http://dbpedia.org/resource/Grammatical_tense&lt;/IRI>
         &lt;name>tense&lt;/name>
         &lt;option code="a">
            &lt;IRI>http://dbpedia.org/resource/Aorist&lt;/IRI>
            &lt;name>aorist&lt;/name>
         &lt;/option>
         &lt;option code="f">
            &lt;IRI>http://dbpedia.org/resource/Future_tense&lt;/IRI>
            &lt;name>future&lt;/name>
         &lt;/option>
         &lt;option code="i">
            &lt;IRI>http://dbpedia.org/resource/Imperfect_tense&lt;/IRI>
            &lt;name>imperfect&lt;/name>
         &lt;/option>
         &lt;option code="l">
            &lt;IRI>http://dbpedia.org/resource/Pluperfect&lt;/IRI>
            &lt;name>pluperfect&lt;/name>
         &lt;/option>
         &lt;option code="p">
            &lt;IRI>http://dbpedia.org/resource/Present_tense&lt;/IRI>
            &lt;name>present&lt;/name>
         &lt;/option>
         &lt;option code="r">
            &lt;IRI>http://dbpedia.org/resource/Perfect_tense&lt;/IRI>
            &lt;name>perfect&lt;/name>
         &lt;/option>
         &lt;option code="t">
            &lt;IRI>http://dbpedia.org/resource/Future_perfect&lt;/IRI>
            &lt;name>future perfect&lt;/name>
         &lt;/option>
      &lt;/category>
      &lt;category>
         &lt;IRI>http://dbpedia.org/resource/Grammatical_mood&lt;/IRI>
         &lt;name>mood&lt;/name>
         &lt;option code="i">
            &lt;IRI>http://dbpedia.org/resource/Realis_mood&lt;/IRI>
            &lt;name>indicative&lt;/name>
         &lt;/option>
         &lt;option code="m">
            &lt;IRI>http://dbpedia.org/resource/Imperative_mood&lt;/IRI>
            &lt;name>imperative&lt;/name>
         &lt;/option>
         &lt;option code="n">
            &lt;IRI>http://dbpedia.org/resource/Infinitive&lt;/IRI>
            &lt;name>infinitive&lt;/name>
         &lt;/option>
         &lt;option code="o">
            &lt;IRI>http://dbpedia.org/resource/Optative_mood&lt;/IRI>
            &lt;name>optative&lt;/name>
         &lt;/option>
         &lt;option code="p">
            &lt;IRI>http://dbpedia.org/resource/Participle&lt;/IRI>
            &lt;name>participle&lt;/name>
         &lt;/option>
         &lt;option code="s">
            &lt;IRI>http://dbpedia.org/resource/Subjunctive_mood&lt;/IRI>
            &lt;name>subjunctive&lt;/name>
         &lt;/option>
      &lt;/category>
      &lt;category>
         &lt;IRI>http://dbpedia.org/resource/Voice_(grammar)&lt;/IRI>
         &lt;name>voice&lt;/name>
         &lt;option code="a">
            &lt;IRI>http://dbpedia.org/resource/Active_voice&lt;/IRI>
            &lt;name>active&lt;/name>
         &lt;/option>
         &lt;option code="e">
            &lt;IRI>http://dbpedia.org/resource/Mediopassive_voice&lt;/IRI>
            &lt;name>middle-passive&lt;/name>
         &lt;/option>
         &lt;option code="m">
            &lt;IRI>http://dbpedia.org/resource/Middle_voice#Middle&lt;/IRI>
            &lt;name>middle&lt;/name>
         &lt;/option>
         &lt;option code="p">
            &lt;IRI>http://dbpedia.org/resource/Passive_voice&lt;/IRI>
            &lt;name>passive&lt;/name>
         &lt;/option>
      &lt;/category>
      &lt;category>
         &lt;IRI>http://dbpedia.org/resource/Grammatical_gender&lt;/IRI>
         &lt;name>gender&lt;/name>
         &lt;option code="c">
            &lt;IRI>http://dbpedia.org/resource/Common_gender&lt;/IRI>
            &lt;name>common&lt;/name>
         &lt;/option>
         &lt;option code="f">
            &lt;IRI>http://dbpedia.org/resource/Feminine_gender&lt;/IRI>
            &lt;name>feminine&lt;/name>
         &lt;/option>
         &lt;option code="m">
            &lt;IRI>http://dbpedia.org/resource/Masculine_gender&lt;/IRI>
            &lt;name>masculine&lt;/name>
         &lt;/option>
         &lt;option code="n">
            &lt;IRI>http://dbpedia.org/resource/Neuter_gender&lt;/IRI>
            &lt;name>neuter&lt;/name>
         &lt;/option>
      &lt;/category>
      &lt;category>
         &lt;IRI>http://dbpedia.org/resource/Grammatical_case&lt;/IRI>
         &lt;name>case&lt;/name>
         &lt;option code="a">
            &lt;IRI>http://dbpedia.org/resource/Accusative&lt;/IRI>
            &lt;name>accusative&lt;/name>
         &lt;/option>
         &lt;option code="d">
            &lt;IRI>http://dbpedia.org/resource/Dative&lt;/IRI>
            &lt;name>dative&lt;/name>
         &lt;/option>
         &lt;option code="g">
            &lt;IRI>http://dbpedia.org/resource/Genitive&lt;/IRI>
            &lt;name>genitive&lt;/name>
         &lt;/option>
         &lt;option code="n">
            &lt;IRI>http://dbpedia.org/resource/Nominative&lt;/IRI>
            &lt;name>nominative&lt;/name>
         &lt;/option>
         &lt;option code="v">
            &lt;IRI>http://dbpedia.org/resource/Vocative&lt;/IRI>
            &lt;name>vocative&lt;/name>
         &lt;/option>
      &lt;/category>
      &lt;category>
         &lt;IRI>http://dbpedia.org/resource/Comparison_(grammar)&lt;/IRI>
         &lt;name>degree&lt;/name>
         &lt;option code="c">
            &lt;IRI>http://dbpedia.org/resource/Comparative&lt;/IRI>
            &lt;name>comparative&lt;/name>
         &lt;/option>
         &lt;option code="s">
            &lt;IRI>http://dbpedia.org/resource/Superlative&lt;/IRI>
            &lt;name>superlative&lt;/name>
         &lt;/option>
      &lt;/category>
      &lt;invalid-pattern cert="high">^e&lt;/invalid-pattern>
      &lt;comment who="kalvesmaki" when="2015-02-28">Code e has been deprecated. It was used in some
         cases for ὦ voc., to be distinguished from ὦ as exclamation &lt;/comment>
      &lt;invalid-pattern cert="high">^. v&lt;/invalid-pattern>
      &lt;comment who="kalvesmaki" when="2015-02-28">Code v for verbal adjective has been deprecated. &lt;/comment>
      &lt;invalid-pattern>^c[^ -]&lt;/invalid-pattern>
      &lt;comment who="kalvesmaki" when="2015-02-28">A conjunction has no other inflectional properties.&lt;/comment>
   &lt;/body>
      ...........              </programlisting>
                  </para>
                  <caption>
                     <para>This example provides one morphological analysis of the Greek language.
                        It furnishes only three of many possible <code>&lt;invalid-pattern></code>s,
                        to keep the example brief. Any TAN-LM editor that uses in a morphological
                        analysis will be warned or find their file is rendered invalid when: (1)
                           <code>&lt;e></code> is the first value (warning only); (2)
                           <code>&lt;v></code> is the second value (warning only); (3)
                           <code>&lt;c></code> is the first value and is followed by other values,
                        except for the hyphens (i.e., not applicable) (fully invalid). In each case,
                        the first comment that follows the <code>&lt;invalid-pattern></code> will be
                        delivered to the editor.</para>
                  </caption>
               </example>
            </section>
         </section>
      </chapter>
   </part>
   <part>
      <title>Working with the Text Alignment Network</title>
      <partintro><para>[This part has not been drafted. Individual chapters may contain ideas in the rough that will
            later be developed into comprehensive prose.]</para></partintro>
      <chapter>
         <title>Best Practices in Creating and Editing TAN Files</title>
         <para>Filenames: Class 1: good idea to construct a filename that starts with an acronym for
            the work, followed by the language code, then the date or editor's last name. If you
            think you're going to branch it off into different editions, then provide a version
            number at the end. Class 2 files are tougher, because you want to specify for TAN-A-tok
            which two versions are being compared. You might wind up with very long filenames if you
            try to include both. And for TAN-A-div, all hope is lost for specifying the names of the
            sources. But that format is really about collating works, so you may want simply to
            indicate the work or works that are being aligned. TAN-LM files should adopt the name of
            their one and only source, but make clear that they are LM files. Class 3: TAN-R-mor:
            start with the language code then the namespace of the document's @id then a version
            number. TAN-R-tok: tok + description + version number.</para>
         <para>If you have a text with notes, distinguish between whether the notes are intrinsic or
            extrinsic to the work. </para>
         <para>If the former, treat them as such and give them <code>&lt;div></code>s. But don't try
            to keep everything in document order. That is, either put notes at the end of every
            relevant div, or put them all the way at the end of the work. And you can also probably
            delete the note signals. You can use self-alignment to make sure that notes are pegged
            to their proper place. And there you have the opportunity to attach the note not only to
            the word or punctuation to which it is attached, but you can try to sense the entire
            range of text that the author wished the note to apply to.</para>
         <para>If the notes are not part of the work per se -- for example, translator's notes in a
            translation of a primary source -- you may treat the notes as a work in their own right.
            Just create a separate TAN file for those notes, then create an alignment file to
            correlate the notes with the translation.</para>
         <para>Remember that the note signals in the main text and in the footnote area are metadata
            meant to help readers link corresponding passages of texts. So if you've already
            accommodated those alignments through a TAN-A file, the note signals are otiose, and
            they are good candidates for normalization.</para>
         <para>What about if you are transcribing a text that has variants to the work integrated
            into the document? For example, a manuscript may have correctors' marks. Or a critical
            edition can be seen as a modern instatiation, noting where corrections and deviations
            occur. In those cases...</para>
      </chapter>
      <chapter>
         <title>Best Practices in Managing and Sharing TAN Files</title>
         <para>Good idea to think about TAN files as resting in controlled libraries of a manageable
            size and, to you at any rate, coherent theme.</para>
         <para>Put your class 1 files in the root of the library directory. Then put your class 2 or
            class 3 files in their own subdirectory, given the name of their TAN type, e.g.,
            TAN-A-div.</para>
         <para>If class 2 or class 1 files point to other members of that same project, use a local
            URL for &lt;location>. You may wish to provide other &lt;location>s with the absolute
            URL.</para>
         <para>Put your TAN libraries in a single folder. If you import someone else's TAN library
            for local use, put it in that same folder, using a descriptor for the filename that
            makes sense to you.</para>
         <para>When you poin to external libraries, include along with the absolute URL another
            &lt;location> that points to the local version.</para>
      </chapter>
      <chapter>
         <title>Best Practices in Using TAN Files</title>
         <para>Developers: it is advisable to process the data in two steps. The first step puts all
            the data into a simplified, normalized data set. The second step queries and arranges
            that simplified data.</para>
         <para>The first step: collect all the files that have been invoked. Normalize the data
            according to the <code>&lt;declaration></code>s specified in the <code>&lt;head></code>.
            Transcription references should be homogenized to have a common nomenclature. It may
            help to flatten the hierarchy of the transcription data into leaf
            <code>&lt;div></code>s, i.e., pairs consisting of a leaf <code>&lt;div></code> ref and
            the text values for that ref.</para>
         <para>The second step, that of transforming or querying the text, becomes much simpler and
            easier.</para>
      </chapter>
   </part>
</book>
