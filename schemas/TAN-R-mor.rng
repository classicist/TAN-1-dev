<?xml version="1.0" encoding="UTF-8"?>
<grammar ns="tag:textalign.net,2015:ns" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns:local="tag:textalign.net,2015:ns" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <start>
    <element name="TAN-R-mor">
      <a:documentation>specifies that the TAN file contains definitions for the parts of speech for a language, the codes for those parts, and the rules for combining them. Root element.</a:documentation>
      <ref name="TAN-root"/>
    </element>
  </start>
  <include href="TAN-class-3.rng">
    <define name="decl-non-class-3">
      <a:documentation>every TAN-R-mor file has one or more src-lang and feature elements</a:documentation>
      <interleave>
        <oneOrMore>
          <ref name="lang-outside"/>
        </oneOrMore>
        <oneOrMore>
          <ref name="morph-feature"/>
        </oneOrMore>
      </interleave>
    </define>
    <define name="TAN-body-core">
      <ref name="TAN-R-mor-body"/>
    </define>
  </include>
  <define name="morph-feature">
    <a:documentation>TAN-R-mor files declare the morphological features that are allowed for a given language</a:documentation>
    <element name="feature">
      <a:documentation>names, through its IRI + name pattern, a grammatical concept (e.g., plural, subjunctive, 1st person) that characterizes a language.</a:documentation>
      <optional>
        <ref name="ed-stamp"/>
      </optional>
      <choice>
        <ref name="inclusion"/>
        <group>
          <ref name="internal-id"/>
          <interleave>
            <zeroOrMore>
              <ref name="comment"/>
            </zeroOrMore>
            <ref name="entity-nondigital-ref"/>
          </interleave>
        </group>
      </choice>
    </element>
  </define>
  <define name="TAN-R-mor-body">
    <a:documentation>TAN-R-mor body consists of zero or more assert, report, category, or options</a:documentation>
    <interleave>
      <zeroOrMore>
        <ref name="assert"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="report"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="category"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="options"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="assert">
    <element name="assert">
      <a:documentation>names a pattern that, if found to be false in any &lt;m&gt; in a dependent TAN-LM file, will return the enclosed message upon validation of the dependent file, along with an error or warning. Modeled loosely on Schematron &lt;report&gt;.</a:documentation>
      <ref name="test-pattern"/>
    </element>
  </define>
  <define name="report">
    <element name="report">
      <a:documentation>names a pattern that, if found to be true in any &lt;m&gt; in a dependent TAN-LM file, will return the enclosed message upon validation of the dependent file, along with an error or warning. Modeled loosely on Schematron &lt;report&gt;.</a:documentation>
      <ref name="test-pattern"/>
    </element>
  </define>
  <define name="test-pattern">
    <a:documentation>Test pattern attributes for determining whether to return the message provided by text.</a:documentation>
    <optional>
      <ref name="certainty-stamp"/>
    </optional>
    <choice>
      <ref name="inclusion"/>
      <group>
        <optional>
          <ref name="filter"/>
        </optional>
        <choice>
          <ref name="code-regex-test"/>
          <ref name="token-regex-test"/>
          <ref name="feature-test"/>
          <ref name="feature-qty-test"/>
        </choice>
        <text/>
      </group>
    </choice>
  </define>
  <define name="filter">
    <attribute name="feature-filter">
      <a:documentation>specifies that when a dependent TAN-LM file is validated and the condition for the parent &lt;report&gt; or &lt;assert&gt; is triggered by the value of a given &lt;m&gt;, the message should be returned only if the &lt;m&gt; has at least one of the features mentioned by @feature-filter.</a:documentation>
    </attribute>
  </define>
  <define name="code-regex-test">
    <attribute name="code-regex-test">
      <a:documentation>asserts a pattern in the form of a regular expression that is to be used to check matches in codes in &lt;m&gt;s in a dependent TAN-LM file.</a:documentation>
      <a:documentation>One of four tests for determining the truth value that will trigger the message in a &lt;report&gt; or &lt;assert&gt; </a:documentation>
    </attribute>
  </define>
  <define name="token-regex-test">
    <attribute name="token-regex-test">
      <a:documentation>carries a regular expression that is to be used to check the truth value of a &lt;report&gt; or &lt;assert&gt;. When a dependent TAN-LM file is validated, if the pattern matches the resolved value of any &lt;tok&gt;, the value will be true, and affect whether a message is triggered in any &lt;m&gt; elements that share an &lt;ana&gt; ancestor.</a:documentation>
      <a:documentation>One of four tests for determining the truth value that will trigger the message in a &lt;report&gt; or &lt;assert&gt; </a:documentation>
    </attribute>
  </define>
  <define name="feature-test">
    <attribute name="feature-test">
      <a:documentation>indicates one or more features that are used to check the truth value of a &lt;report&gt; or &lt;assert&gt;. When a dependent TAN-LM file is validated, this attribute returns true for any feature that is found in an &lt;m&gt; element, and false otherwise.</a:documentation>
      <a:documentation>One of four tests for determining the truth value that will trigger the message in a &lt;report&gt; or &lt;assert&gt; </a:documentation>
    </attribute>
  </define>
  <define name="feature-qty-test">
    <attribute name="feature-qty-test">
      <a:documentation>specifies a number greater than one indicating how many of the features in @feature-filter must be present for the condition to be true. This is useful for situations where it is desired to flag values of &lt;m&gt; that try to combine incompatible features.</a:documentation>
      <a:documentation>One of four tests for determining the truth value that will trigger the message in a &lt;report&gt; or &lt;assert&gt; </a:documentation>
      <data type="integer"/>
    </attribute>
  </define>
  <define name="category">
    <element name="category">
      <a:documentation>creates a set of features that share a common grammatical trait such as gender, number, etc.</a:documentation>
      <optional>
        <ref name="ed-stamp"/>
      </optional>
      <choice>
        <ref name="inclusion"/>
        <interleave>
          <zeroOrMore>
            <ref name="comment"/>
          </zeroOrMore>
          <group>
            <ref name="feature-ref"/>
            <oneOrMore>
              <ref name="options"/>
            </oneOrMore>
          </group>
        </interleave>
      </choice>
    </element>
  </define>
  <define name="options">
    <element name="option">
      <a:documentation>refer to a feature.</a:documentation>
      <a:documentation>If its parent is &lt;category&gt;, this element indicates a feature that is allowed in that area.</a:documentation>
      <a:documentation>If its parent is &lt;body&gt; it markes a supplemental way to refer to the feature other than the assigned @xml:id. Useful for situations where a code requires a value that is otherwise disallowed by @xml:id, e.g., colons.</a:documentation>
      <optional>
        <ref name="ed-stamp"/>
      </optional>
      <choice>
        <ref name="inclusion"/>
        <group>
          <ref name="feature-ref"/>
          <optional>
            <ref name="code"/>
          </optional>
        </group>
      </choice>
    </element>
  </define>
  <define name="feature-ref">
    <attribute name="feature">
      <a:documentation>refers to a feature by means of its @xml:id</a:documentation>
      <data type="IDREF" datatypeLibrary="http://relaxng.org/ns/compatibility/datatypes/1.0"/>
    </attribute>
  </define>
  <define name="code">
    <attribute name="code">
      <a:documentation>contains a string that can be used as an alternative code for a &lt;feature&gt;.</a:documentation>
      <data type="string">
        <a:documentation>hyphen reserved for "not applicable"; spaces and (),| reserved for @feature-test expressions</a:documentation>
        <param name="pattern">[^\-\(\),|\s]|[^\(\),|\s]+</param>
      </data>
    </attribute>
  </define>
</grammar>
