# TO DO:
# [priority low] allow @src to take * and * - [names] to allow blanket statements

namespace ns1 = "tag:textalign.net,2015:ns"

include "TAN-core.rnc" inherit = ns1 {
    decl-non-core = decl-class-2 & decl-non-class-2
    
    ## All sources are TAN files, so no source rights should be declared--they're already stated
    source-rights = empty
    source-ref =
        
        ## refers to the ID of one or more <source>s 
        attribute src { text }
}

## Reserved for declarations common to all class 2 files
decl-class-2 = decl-token-opt & decl-supp-div-opt & decl-rename-n-opt

## Reserved for declarations specific to individual types of class 2 files 
decl-non-class-2 = empty

## Reserved for modification in different types of Class 2 files, to specify how many tokenization declarations are allowed.
## Class 2 files that do not require tokenization (i.e., TAN-A-div) must include <token-definition> only if the file uses elements (e.g., <split-leaf-div-at>) that assume tokenization. 
decl-token-opt = decl-tok-def+

## Reserved for modification in different types of Class 2 files, to specify how many suppress-div-type declarations are allowed.
decl-supp-div-opt = decl-supp-div-type*
decl-supp-div-type =
    
    ## marks div types in a source that should be suppressed in references. Any suppression of a div type must preserve the Leaf Div Uniqueness Rule (LDUR). See main.xml#leaf_div_uniqueness_rule
    
    ## This element will be used seldomly, for cases where a source has a div type that is dispensable in text references. 
    element suppress-div-types {
        ed-stamp?,
        (inclusion | (source-ref, div-type-ref))
    }
decl-rename-n-opt = decl-rename-div-n*
decl-rename-div-n =
    
    ## provisionally reassigns @n values for one or more sources and one or more div types. Renaming applies only to the current file. 
    
    ## This element is especially useful for converting Roman numerals or letter numerals into Arabic numerals. See <rename> for syntax.
    
    ## This feature is strictly speaking a convenience, not a necessity. All TAN-compliant preprocessors are required to automatically detect Roman and alphabetic numbering systems and treat them as Arabic numerals. 
    
    ## It is also useful for div types that use descriptive names for @n (such as books of the Bible), particularly for reconciling those names with a system that prevails or is preferred (e.g., "mt" to "Matt"). 
    
    ## Note for TAN-A-div users: Although this element can reconcile simple differences, it should not be used for more complex inconsistencies that affect alignment, best handled in the <body> of a TAN-A-div file.
    
    ## For more inforrmation see main.xml#class_2_metadata
    element rename-div-ns {
        ed-stamp?,
        (inclusion | (source-ref, div-type-ref, name-change+))
    }
name-change =
    
    ## indicates the name of a <div> @n or @type that should be changed, and the name to which it should be changed.
    
    ## To change Roman numerals or letter numeration to Arabic numerals use this syntax: 
    
    ## <rename old="#i" new="#1"/> 
    
    ## <rename old="#a" new="#1"/> 
    element rename {
        
        ## name of an @n or @type in a source to be renamed
        attribute old {
            n-val
            | xsd:string { pattern = "#[ai]" }
        },
        
        ## new name for an @n or @type that is to be renamed
        attribute new {
            n-val
            | xsd:string { pattern = "#1" }
        }
    }

## Option to include an internal id. Not needed in TAN-LM files.
id-option = internal-id
alignment =
    
    ## declares one or more groups of words or divs that should be aligned with each other. If in a TAN-A-tok file, <align> governs <tok>s (words); in TAN-A-div files, <div-ref> (divs and segments)
    
    ## In TAN-A-tok files, <align> specifies that all the tokens invoked for one source collectively align with the tokens in the other. This version of <align> allows @cert, @bitext-relation, and @reuse-type, in addition to the editorial stamp. 
    
    ## In TAN-A-div files, <align> specifies that every group of divs or segments (defined by a child <div-ref>) should be aligned with every other group in the alingment. This alignment is to be taken as adding to any default, automatic alignment. This version of <align> allows @strength, @exclusive, and @distribute, which affect the default behavior of <align>. For more see main.xml#tan-a-div_align
    element align {
        alignment-inclusion-opt
        | (alignment-attributes-non-class-2,
           certainty-stamp,
           non-class-2-opt,
           (comment* & alignment-content-non-class-2))
    }
non-class-2-opt = empty
alignment-attributes-non-class-2 = empty
alignment-content-non-class-2 = empty
alignment-inclusion-opt = inclusion
div-type-ref =
    
    ## is used by class-2 files to point to one or more <div-type>s in class-1 files. Permits multiple values separated by spaces.
    attribute div-type-ref { text }
token-list =
    
    ## identifies one or more words or word fragments. Used by class 2 files to make assertions about specific words. 
    element tok {
        certainty-stamp,
        source-ref,
        pointer-to-div-range,
        (token-value-ref | item-pos-ref | (token-value-ref, item-pos-ref)),
        char-ref,
        continuation-opt?
    }

##    Pointer (link) to a div in a TAN-T(EI) file
pointer-to-div-range =
    
    ## lists references to one or more <div>s. It consists of one or more atomic references joined with commas or hyphens. An atomic reference is a string value that points to a single <div>. In most cases (i.e., when @distribute is not in force), multiple atomic references are treated collectively, as a single reference to a complex passage, not as multiple references to individual passages. 
    
    ## Examples: 'bk.2:ch.4', '2.4 - 2.7, 2.9', 'poem 5, poem 6:line 6 - poem 7:line 2'
    
    ## Any hyphen used as a range should be preceded and followed by at least one space character.
    
    ## For more, see main.xml#class_2_body 
    attribute ref { div-range-ref }
token-value-ref =
    
    ## specifies a particular word token by means of its string value. Permits regular expressions. Therefore a request for help should consist of a space before or after a question mark.
    
    ## For more see main.xml#attr_pos_and_val
    attribute val {
        xsd:string { pattern = ".+" }
    }
item-pos-ref =
    
    ## lists one or more items, specified through Arabic numerals and the keyword 'last' or 'last-X' (where X is a valid number), joined with commas or hyphens.
    
    ## Examples: '1', 'last', 'last-3 - last-1', '1, 3, 5, 7 - 11, last-8, last'
    
    ## Any hyphen used as a range should be preceded and followed by at least one space character.
    
    ## For more see main.xml#attr_pos_and_val
    attribute pos { seq-picker }
char-ref =
    
    ## list of one or more characters, specified through Arabic numerals, the keyword 'last' or 'last-X' (where X is a valid number), joined with commas or hyphens.
    
    ## Examples: '1', 'last', 'last-3 - last-1', '1, 3, 5, 7 - 11, last-8, last'
    attribute chars { seq-picker }?
continuation-opt = empty
continuation =
    
    ## indicates whether the current element is continued by the next one and to be treated as a single one. Value must be 1 or true, implied by the very presence of the attribute. If you wish to decare it to be false, delete the attribute altogether.
    
    ## This feature is useful in <tok> for rejoining the portion of a word split across two <div>s, or for uniting into a single linguistic token multiple tokens separated by the tokenization process, e.g., "pom pom". 
    
    ## This feature is useful in <div-ref> for creating groups of references that cannot be expressed in a single <div-ref>  
    attribute cont {
        xsd:boolean { pattern = "true|1" }
    }
