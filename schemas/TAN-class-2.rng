<?xml version="1.0" encoding="UTF-8"?>
<!--
  TO DO:
  [priority low] allow @src to take * and * - [names] to allow blanket statements
-->
<grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns:ns1="tag:textalign.net,2015:ns" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <include href="TAN-core.rng" ns="tag:textalign.net,2015:ns">
    <define name="decl-non-core">
      <interleave>
        <ref name="decl-class-2"/>
        <ref name="decl-non-class-2"/>
      </interleave>
    </define>
    <define name="group-attributes">
      <ref name="type"/>
      <optional>
        <ref name="n"/>
      </optional>
    </define>
    <define name="source-rights">
      <a:documentation>All sources are TAN files, so no source rights should be declared--they're already stated</a:documentation>
      <empty/>
    </define>
    <define name="source-ref">
      <attribute name="src">
        <a:documentation>refers to the ID of one or more &lt;source&gt;s </a:documentation>
      </attribute>
    </define>
    <define name="body-group-opt">
      <zeroOrMore>
        <ref name="body-group"/>
      </zeroOrMore>
    </define>
  </include>
  <define name="decl-class-2">
    <a:documentation>Reserved for declarations common to all class 2 files</a:documentation>
    <interleave>
      <ref name="decl-token-opt"/>
      <ref name="decl-supp-div-opt"/>
      <ref name="decl-rename-n-opt"/>
    </interleave>
  </define>
  <define name="decl-non-class-2">
    <a:documentation>Reserved for declarations specific to individual types of class 2 files </a:documentation>
    <empty/>
  </define>
  <define name="decl-token-opt">
    <a:documentation>Reserved for modification in different types of Class 2 files, to specify how many tokenization declarations are allowed.
Class 2 files that do not require tokenization (i.e., TAN-A-div) may include &lt;token-definition&gt; only if the file uses elements (e.g., &lt;split-leaf-div-at&gt;) that assume tokenization. </a:documentation>
    <zeroOrMore>
      <ref name="decl-tok-def"/>
    </zeroOrMore>
  </define>
  <define name="decl-supp-div-opt">
    <a:documentation>Reserved for modification in different types of Class 2 files, to specify how many suppress-div-type declarations are allowed.</a:documentation>
    <zeroOrMore>
      <ref name="decl-supp-div-type"/>
    </zeroOrMore>
  </define>
  <define name="decl-supp-div-type">
    <element name="suppress-div-types">
      <a:documentation>marks div types in a source that should be suppressed in references. Suppressions occur shallowly. That is, it does not suppress any descendants of that div type. But if the suppression applies to a leaf div, that div and its text is effectively suppressed. </a:documentation>
      <a:documentation>Any suppression of a div type must preserve the Leaf Div Uniqueness Rule (LDUR). See main.xml#leaf_div_uniqueness_rule</a:documentation>
      <a:documentation>This element will be used seldomly, for cases where a source has a div type that is dispensable in text references. </a:documentation>
      <optional>
        <ref name="ed-stamp"/>
      </optional>
      <choice>
        <ref name="inclusion"/>
        <group>
          <ref name="source-ref"/>
          <ref name="div-type-ref"/>
        </group>
      </choice>
    </element>
  </define>
  <define name="decl-rename-n-opt">
    <zeroOrMore>
      <ref name="decl-rename-div-n"/>
    </zeroOrMore>
  </define>
  <define name="decl-rename-div-n">
    <element name="rename-div-ns">
      <a:documentation>provisionally reassigns @n values for one or more sources and one or more div types. Renaming applies only to the current file. </a:documentation>
      <a:documentation>This element is especially useful for converting Roman numerals or letter numerals into Arabic numerals. See &lt;rename&gt; for syntax.</a:documentation>
      <a:documentation>This feature is strictly speaking a convenience, not a necessity. All TAN-compliant preprocessors are required to automatically detect Roman and alphabetic numbering systems and treat them as Arabic numerals. </a:documentation>
      <a:documentation>It is also useful for div types that use descriptive names for @n (such as books of the Bible), particularly for reconciling those names with a system that prevails or is preferred (e.g., "mt" to "Matt"). </a:documentation>
      <a:documentation>Note for TAN-A-div users: Although this element can reconcile simple differences, it should not be used for more complex inconsistencies that affect alignment, best handled in the &lt;body&gt; of a TAN-A-div file.</a:documentation>
      <a:documentation>For more inforrmation see main.xml#class_2_metadata</a:documentation>
      <optional>
        <ref name="ed-stamp"/>
      </optional>
      <choice>
        <ref name="inclusion"/>
        <group>
          <ref name="source-ref"/>
          <ref name="div-type-ref"/>
          <oneOrMore>
            <ref name="name-change"/>
          </oneOrMore>
        </group>
      </choice>
    </element>
  </define>
  <define name="name-change">
    <element name="rename">
      <a:documentation>indicates the name of a &lt;div&gt; @n or @type that should be changed, and the name to which it should be changed.</a:documentation>
      <a:documentation>To change Roman numerals or letter numeration to Arabic numerals use this syntax: </a:documentation>
      <a:documentation>&lt;rename old="#i" new="#1"/&gt; </a:documentation>
      <a:documentation>&lt;rename old="#a" new="#1"/&gt; </a:documentation>
      <attribute name="old">
        <a:documentation>provides the name of an @n or @type in a source to be renamed</a:documentation>
        <choice>
          <ref name="n-val"/>
          <data type="string">
            <param name="pattern">#[ai]</param>
          </data>
        </choice>
      </attribute>
      <attribute name="new">
        <a:documentation>provides the new name for an @n or @type that is to be renamed</a:documentation>
        <choice>
          <ref name="n-val"/>
          <data type="string">
            <param name="pattern">#1</param>
          </data>
        </choice>
      </attribute>
    </element>
  </define>
  <define name="id-option">
    <a:documentation>Option to include an internal id. Not needed in TAN-LM files.</a:documentation>
    <ref name="internal-id"/>
  </define>
  <define name="alignment">
    <element name="align">
      <a:documentation>declares one or more groups of words or divs that should be aligned with each other. If in a TAN-A-tok file, &lt;align&gt; governs &lt;tok&gt;s (words); in TAN-A-div files, &lt;div-ref&gt; (divs and segments)</a:documentation>
      <a:documentation>In TAN-A-tok files, &lt;align&gt; specifies that all the tokens invoked for one source collectively align with the tokens in the other. This version of &lt;align&gt; allows @cert, @bitext-relation, and @reuse-type, in addition to the editorial stamp. </a:documentation>
      <a:documentation>In TAN-A-div files, &lt;align&gt; specifies that every group of divs or segments (defined by a child &lt;div-ref&gt;) should be aligned with every other group in the alingment. This alignment is to be taken as adding to any default, automatic alignment. This version of &lt;align&gt; allows @strength, @exclusive, and @distribute, which affect the default behavior of &lt;align&gt;. For more see main.xml#tan-a-div_align</a:documentation>
      <choice>
        <ref name="alignment-inclusion-opt"/>
        <group>
          <ref name="alignment-attributes-non-class-2"/>
          <ref name="certainty-stamp"/>
          <ref name="non-class-2-opt"/>
          <interleave>
            <zeroOrMore>
              <ref name="comment"/>
            </zeroOrMore>
            <ref name="alignment-content-non-class-2"/>
          </interleave>
        </group>
      </choice>
    </element>
  </define>
  <define name="non-class-2-opt">
    <empty/>
  </define>
  <define name="alignment-attributes-non-class-2">
    <empty/>
  </define>
  <define name="alignment-content-non-class-2">
    <empty/>
  </define>
  <define name="alignment-inclusion-opt">
    <ref name="inclusion"/>
  </define>
  <define name="div-type-ref">
    <attribute name="div-type-ref">
      <a:documentation>is used by class-2 files to point to one or more &lt;div-type&gt;s in class-1 files. Permits multiple values separated by spaces.</a:documentation>
    </attribute>
  </define>
  <define name="token-list">
    <oneOrMore>
      <ref name="tok-item"/>
    </oneOrMore>
  </define>
  <define name="tok-item">
    <choice>
      <ref name="tok-regular"/>
      <ref name="tok-sequence"/>
    </choice>
  </define>
  <define name="tok-regular">
    <element name="tok">
      <a:documentation>identifies one or more words or word fragments. Used by class 2 files to make assertions about specific words. </a:documentation>
      <ref name="tok-attr-regular"/>
    </element>
  </define>
  <define name="tok-sequence">
    <ref name="tok-with-src-and-cont"/>
    <zeroOrMore>
      <ref name="tok-with-cont-but-no-src"/>
    </zeroOrMore>
    <ref name="tok-without-cont-or-src"/>
  </define>
  <define name="tok-with-src-and-cont">
    <element name="tok">
      <ref name="tok-attr-with-src-and-cont"/>
    </element>
  </define>
  <define name="tok-with-cont-but-no-src">
    <element name="tok">
      <ref name="tok-attr-with-cont-but-no-src"/>
    </element>
  </define>
  <define name="tok-without-cont-or-src">
    <element name="tok">
      <ref name="tok-attr-without-cont-or-src"/>
    </element>
  </define>
  <define name="tok-attr-core">
    <optional>
      <ref name="ed-stamp"/>
    </optional>
    <ref name="reference-opt"/>
    <choice>
      <ref name="token-value-ref"/>
      <ref name="item-pos-ref"/>
      <group>
        <ref name="token-value-ref"/>
        <ref name="item-pos-ref"/>
      </group>
    </choice>
    <optional>
      <ref name="char-ref"/>
    </optional>
  </define>
  <define name="tok-attr-regular">
    <ref name="tok-attr-core"/>
    <ref name="source-ref"/>
    <ref name="class-opt"/>
    <ref name="cert-opt"/>
  </define>
  <define name="tok-attr-with-src-and-cont">
    <ref name="tok-attr-core"/>
    <ref name="source-ref"/>
    <ref name="continuation-opt"/>
    <optional>
      <ref name="cert-claim"/>
    </optional>
  </define>
  <define name="tok-attr-with-cont-but-no-src">
    <ref name="tok-attr-core"/>
    <ref name="continuation-opt"/>
  </define>
  <define name="tok-attr-without-cont-or-src">
    <ref name="tok-attr-core"/>
  </define>
  <define name="cert-opt">
    <optional>
      <ref name="cert-claim"/>
    </optional>
  </define>
  <define name="class-opt">
    <empty/>
  </define>
  <define name="class">
    <attribute name="class">
      <a:documentation>supplies a value intended to optimize searching for &lt;tok&gt;s, especially in applications that use XSLT and XPath key functions. </a:documentation>
    </attribute>
  </define>
  <define name="reference-opt">
    <a:documentation>Reference option allows TAN-LM files to point to languages as a whole in lieu of specific sources</a:documentation>
    <ref name="pointer-to-div-range"/>
  </define>
  <define name="pointer-to-div-range">
    <a:documentation>   Pointer (link) to a div in a TAN-T(EI) file</a:documentation>
    <attribute name="ref">
      <a:documentation>lists references to one or more &lt;div&gt;s. It consists of one or more atomic references joined with commas or hyphens. An atomic reference is a string value that points to a single &lt;div&gt;. In most cases (i.e., when @distribute is not in force), multiple atomic references are treated collectively, as a single reference to a complex passage, not as multiple references to individual passages. </a:documentation>
      <a:documentation>Examples: 'bk.2:ch.4', '2.4 - 2.7, 2.9', 'poem 5, poem 6:line 6 - poem 7:line 2'</a:documentation>
      <a:documentation>Any hyphen used as a range should be preceded and followed by at least one space character.</a:documentation>
      <a:documentation>For more, see main.xml#class_2_body </a:documentation>
      <ref name="div-range-ref"/>
    </attribute>
  </define>
  <define name="token-value-ref">
    <attribute name="val">
      <a:documentation>specifies a particular word token by means of its string value. Permits regular expressions. Therefore a request for help should consist of a space before or after a question mark.</a:documentation>
      <a:documentation>For more see main.xml#attr_pos_and_val</a:documentation>
      <data type="string">
        <param name="pattern">.+</param>
      </data>
    </attribute>
  </define>
  <define name="item-pos-ref">
    <attribute name="pos">
      <a:documentation>lists one or more items, specified through Arabic numerals and the keyword 'last' or 'last-X' (where X is a valid number), joined with commas or hyphens.</a:documentation>
      <a:documentation>Examples: '1', 'last', 'last-3 - last-1', '1, 3, 5, 7 - 11, last-8, last'</a:documentation>
      <a:documentation>Any hyphen used as a range should be preceded and followed by at least one space character.</a:documentation>
      <a:documentation>For more see main.xml#attr_pos_and_val</a:documentation>
      <ref name="seq-picker"/>
    </attribute>
  </define>
  <define name="char-ref">
    <attribute name="chars">
      <a:documentation>list of one or more characters, specified through Arabic numerals, the keyword 'last' or 'last-X' (where X is a valid number), joined with commas or hyphens.</a:documentation>
      <a:documentation>Examples: '1', 'last', 'last-3 - last-1', '1, 3, 5, 7 - 11, last-8, last'</a:documentation>
      <ref name="seq-picker"/>
    </attribute>
  </define>
  <define name="continuation-opt">
    <empty/>
  </define>
  <define name="continuation">
    <attribute name="cont">
      <a:documentation>indicates whether the current element is continued by the next one and to be treated as a single one. Value must be 1 or true, implied by the very presence of the attribute. If you wish to decare it to be false, delete the attribute altogether.</a:documentation>
      <a:documentation>This feature is useful in &lt;tok&gt; for rejoining the portion of a word split across two &lt;div&gt;s, or for uniting into a single linguistic token multiple tokens separated by the tokenization process, e.g., "pom pom". </a:documentation>
      <a:documentation>This feature is useful in &lt;div-ref&gt; for creating groups of references that cannot be expressed in a single &lt;div-ref&gt;  </a:documentation>
      <data type="boolean">
        <param name="pattern">true|1</param>
      </data>
    </attribute>
  </define>
  <define name="decl-class">
    <zeroOrMore>
      <!-- element class-type { ed-stamp?, element-scope?, (inclusion | entity-nondigital-ref) } -->
      <element name="group-type">
        <a:documentation>defines types of classes, used primarily to explain the nature of &lt;group&gt;s.</a:documentation>
        <ref name="decl-pattern-default"/>
      </element>
    </zeroOrMore>
  </define>
</grammar>
