<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns:ns1="tag:textalign.net,2015:ns" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <include href="TAN-core.rng" ns="tag:textalign.net,2015:ns">
    <define name="decl-non-core">
      <interleave>
        <ref name="decl-class-2"/>
        <ref name="decl-non-class-2"/>
      </interleave>
    </define>
    <define name="source-rights">
      <a:documentation>All sources are TAN files, so no source rights should be declared--they're already stated</a:documentation>
      <empty/>
    </define>
  </include>
  <define name="decl-class-2">
    <a:documentation>Reserved for declarations common to all class 2 files</a:documentation>
    <interleave>
      <ref name="decl-token-opt"/>
      <ref name="decl-supp-div-opt"/>
      <ref name="decl-implicit-div-type-refs-opt"/>
      <group>
        <ref name="decl-rename-type-opt"/>
        <ref name="decl-rename-n-opt"/>
      </group>
    </interleave>
  </define>
  <define name="decl-non-class-2">
    <a:documentation>Reserved for declarations specific to individual types of class 2 files </a:documentation>
    <empty/>
  </define>
  <define name="decl-token-opt">
    <a:documentation>
Reserved for modification in different types of Class 2 files, to specify how many tokenization declarations are allowed.</a:documentation>
    <oneOrMore>
      <ref name="decl-token"/>
    </oneOrMore>
  </define>
  <define name="decl-token">
    <element name="tokenization">
      <a:documentation>specifies a tokenization method to be applied to one or more sources, either by (1) pointing to a TAN-R-tok file, (2) pointing by IDREF to a &lt;recommended-tokenization&gt; in a source, or (3) using a reserved tokenization keyword.</a:documentation>
      <a:documentation>Class 2 files that do not require tokenization (i.e., TAN-A-div) must include &lt;tokenization&gt; only if the file uses elements (e.g., &lt;split-leaf-div-at&gt;) that assume tokenization. </a:documentation>
      <optional>
        <ref name="ed-stamp"/>
      </optional>
      <choice>
        <ref name="inclusion"/>
        <group>
          <ref name="source-ref"/>
          <choice>
            <ref name="tokenization-ref"/>
            <ref name="entity-digital-tan-other-ref"/>
          </choice>
        </group>
      </choice>
    </element>
  </define>
  <define name="decl-supp-div-opt">
    <a:documentation>Reserved for modification in different types of Class 2 files, to specify how many suppress-div-type declarations are allowed.</a:documentation>
    <zeroOrMore>
      <ref name="decl-supp-div-type"/>
    </zeroOrMore>
  </define>
  <define name="decl-supp-div-type">
    <element name="suppress-div-types">
      <a:documentation>marks div types in a source that should be suppressed in references. Any suppression of a div type must preserve the Leaf Div Uniqueness Rule (LDUR).</a:documentation>
      <a:documentation>This element will be used seldomly, for cases where a source has a div type that is dispensable in text references. </a:documentation>
      <optional>
        <ref name="ed-stamp"/>
      </optional>
      <choice>
        <ref name="inclusion"/>
        <group>
          <ref name="source-ref"/>
          <ref name="div-type-ref"/>
        </group>
      </choice>
    </element>
  </define>
  <define name="decl-implicit-div-type-refs-opt">
    <zeroOrMore>
      <element name="implicit-div-type-refs">
        <a:documentation>indicates that div types will be dropped for one or more sources, so that references to &lt;div&gt;s in that source will be exclusively through @n values.</a:documentation>
        <optional>
          <ref name="ed-stamp"/>
        </optional>
        <choice>
          <ref name="inclusion"/>
          <ref name="source-ref"/>
        </choice>
      </element>
    </zeroOrMore>
  </define>
  <define name="decl-rename-type-opt">
    <zeroOrMore>
      <ref name="decl-rename-div-type"/>
    </zeroOrMore>
  </define>
  <define name="decl-rename-div-type">
    <element name="rename-div-types">
      <a:documentation>reassigns the name of a div-type in one or more sources. This feature is strictly speaking a convenience. It does not change the underlying definiton of the div-type.</a:documentation>
      <a:documentation>Note for TAN-A-div users: If you wish to change the underlying meaning of the div type, you should use the element &lt;equate-div-types&gt;</a:documentation>
      <optional>
        <ref name="ed-stamp"/>
      </optional>
      <choice>
        <ref name="inclusion"/>
        <group>
          <ref name="source-ref"/>
          <oneOrMore>
            <ref name="name-change"/>
          </oneOrMore>
        </group>
      </choice>
    </element>
  </define>
  <define name="decl-rename-n-opt">
    <zeroOrMore>
      <ref name="decl-rename-div-n"/>
    </zeroOrMore>
  </define>
  <define name="decl-rename-div-n">
    <element name="rename-div-ns">
      <a:documentation>reassigns n values for one or more sources and one or more div types. </a:documentation>
      <a:documentation>This element is especially useful for converting Roman numerals or letter numerals into Arabic numerals. This feature is strictly speaking a convenience, not a necessity. All TAN-compliant preprocessors are required to automatically detect Roman and alphabetic numbering systems and treat them as Arabic numerals. </a:documentation>
      <a:documentation>It is also useful for div types that use descriptive names for @n (such as books of the Bible), particularly for reconciling those names with a system that prevails or is preferred (e.g., "mt" to "Matt"). </a:documentation>
      <a:documentation>Note for TAN-A-div users: Although this element can reconcile simple differences, it should not be used for more complex inconsistencies that affect alignment, best handled in the &lt;body&gt; of a TAN-A-div file.</a:documentation>
      <optional>
        <ref name="ed-stamp"/>
      </optional>
      <choice>
        <ref name="inclusion"/>
        <group>
          <ref name="source-ref"/>
          <ref name="div-type-ref"/>
          <oneOrMore>
            <ref name="name-change"/>
          </oneOrMore>
        </group>
      </choice>
    </element>
  </define>
  <define name="name-change">
    <element name="rename">
      <a:documentation>indicates the name of a &lt;div&gt; @n or @type that should be changed, and the name to which it should be changed.</a:documentation>
      <attribute name="old">
        <a:documentation>name of an @n or @type in a source to be renamed</a:documentation>
        <choice>
          <ref name="n-val"/>
          <data type="string">
            <param name="pattern">#[ai]</param>
          </data>
        </choice>
      </attribute>
      <attribute name="new">
        <a:documentation>new name for an @n or @type that is to be renamed</a:documentation>
        <choice>
          <ref name="n-val"/>
          <data type="string">
            <param name="pattern">#1</param>
          </data>
        </choice>
      </attribute>
    </element>
  </define>
  <define name="certainty-stamp">
    <optional>
      <ref name="cert-claim"/>
    </optional>
    <optional>
      <ref name="ed-stamp"/>
    </optional>
  </define>
  <define name="id-option">
    <a:documentation>Option to include an internal id. Not needed in TAN-LM files.</a:documentation>
    <ref name="internal-id"/>
  </define>
  <define name="alignment">
    <element name="align">
      <a:documentation>declares an ad hoc alignment of words or divs. If in a TAN-A-tok file, &lt;align&gt; governs &lt;tok&gt;s; in TAN-A-div files, &lt;div-ref&gt;</a:documentation>
      <a:documentation>In TAN-A-tok files, the children are &lt;tok&gt;s, and &lt;align&gt; specifies that all the tokens invoked for one source collectively align with the tokens in the other. This version of &lt;align&gt; allows @cert, @bitext-relation, and @reuse-type, in addition to the editorial stamp. </a:documentation>
      <a:documentation>In TAN-A-div files, the children are &lt;div-ref&gt;s, and &lt;align&gt; by default specifies that every &lt;div-ref&gt;, taken as a group, is to be aligned with every other &lt;div-ref&gt;. This version of &lt;align&gt; allows @strength, @exclusive, and @distribute, which affect the default behavior of &lt;align&gt; (see documentation on specific attributes for details). </a:documentation>
      <choice>
        <ref name="alignment-inclusion-opt"/>
        <group>
          <ref name="alignment-attributes-non-class-2"/>
          <ref name="certainty-stamp"/>
          <interleave>
            <zeroOrMore>
              <ref name="comment"/>
            </zeroOrMore>
            <ref name="alignment-content-non-class-2"/>
          </interleave>
        </group>
      </choice>
    </element>
  </define>
  <define name="alignment-attributes-non-class-2">
    <empty/>
  </define>
  <define name="alignment-content-non-class-2">
    <empty/>
  </define>
  <define name="alignment-inclusion-opt">
    <ref name="inclusion"/>
  </define>
  <define name="token-list">
    <element name="tok">
      <a:documentation>identifies one or more words or word fragments, to make assertions. </a:documentation>
      <ref name="certainty-stamp"/>
      <ref name="source-ref"/>
      <ref name="pointer-to-div-range"/>
      <optional>
        <ref name="token-value-ref"/>
      </optional>
      <optional>
        <ref name="token-value-order-ref"/>
      </optional>
      <ref name="char-ref"/>
    </element>
  </define>
  <define name="char-ref">
    <optional>
      <attribute name="chars">
        <a:documentation>list of one or more characters, specified through Arabic numerals, the keyword 'last' or 'last-X' (where X is a valid number), joined with commas or hyphens.</a:documentation>
        <a:documentation>Examples: '1', 'last', 'last-3 - last-1', '1, 3, 5, 7 - 11, last-8, last'</a:documentation>
        <ref name="seq-picker"/>
      </attribute>
    </optional>
  </define>
</grammar>
