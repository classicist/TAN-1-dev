namespace ns1 = "tag:textalign.net,2015:ns"

include "TAN-core.rnc" inherit = ns1 {
    group-attributes = type, n?
    
    ## All sources are TAN files, so no source rights should be declared--they're already stated
    source-rights = empty
    source-refs =
        
        ## refers to the ID of one or more <source>s 
        attribute src { text }
    body-group-opt = body-group*
}
source-ref =
    
    ## refers to the ID of only one <source>
    attribute src { xsd:NCName }
decl-supp-div-type =
    
    ## marks div types in a source that should be suppressed in references. Suppressions occur shallowly. That is, it does not suppress any descendants of that div type. But if the suppression applies to a leaf div, that div and its text is effectively suppressed. 
    
    ## Any suppression of a div type must preserve the Leaf Div Uniqueness Rule (LDUR). See main.xml#leaf_div_uniqueness_rule
    
    ## This element will be used seldomly, for cases where a source has a div type that is dispensable in text references. 
    element suppress-div-types {
        ed-stamp?,
        (inclusion | (source-refs, div-type-ref))
    }
decl-rename-div-n =
    
    ## provisionally reassigns @n values for one or more sources and one or more div types. Renaming applies only to the current file. 
    
    ## This element is especially useful for converting Roman numerals or letter numerals into Arabic numerals. See <rename> for syntax.
    
    ## This feature is strictly speaking a convenience, not a necessity. All TAN-compliant preprocessors are required to automatically detect Roman and alphabetic numbering systems and treat them as Arabic numerals. 
    
    ## It is also useful for div types that use descriptive names for @n (such as books of the Bible), particularly for reconciling those names with a system that prevails or is preferred (e.g., "mt" to "Matt"). 
    
    ## Note for TAN-A-div users: Although this element can reconcile simple differences, it should not be used for more complex inconsistencies that affect alignment, best handled in the <body> of a TAN-A-div file.
    
    ## For more inforrmation see main.xml#class_2_metadata
    element rename-div-ns {
        ed-stamp?,
        (inclusion | (source-refs, div-type-ref, name-change+))
    }
name-change =
    
    ## indicates the name of a <div> @n that should be changed in a given @type, and the name to which it should be changed.
    
    ## There is no need to use this feature to convert Roman, alphabetic, or other numerals, which are detected and converted automatically 
    element rename {
        
        ## provides the name of an @n to be renamed
        attribute old { n-val },
        
        ## provides the new name for an @n that is to be renamed
        attribute new { n-val }
    }

## Option to include an internal id. Not needed in TAN-LM files.
id-option = internal-id
div-type-ref =
    
    ## is used by class-2 files to point to one or more <div-type>s in class-1 files. Permits multiple values separated by spaces.
    attribute div-type-ref { text }
tok-attr-core = ed-stamp?, char-ref?
tok-regular =
    
    ## identifies one or more words or word fragments. Used by class 2 files to make assertions about specific words. 
    
    ## In TAN-A-div and TAN-A-tok files, <tok> has no linguistic connotations; in TAN-LM, it normally does.
    
    ## <tok>s are two types: simple and complex.
    
    ## SIMPLE: <tok>s that are restricted to a single token, or a portion of a single token. This is the normal behavior of <tok>. Multiple values in @src, @ref, and @pos will result in expansion across all values. But multiple values of @chars are taken to refer to the constituent parts of a single <tok> and so no expansion occurs on @chars.
    
    ## For example, a <tok> with 2 values for @src, 3 for @ref, 4 for @pos, and 5 for @chars will result in a <tok> that points to 24 tokens, each of which is filtered to the same five characters (by position, not content). This syntax, then, allows multiple <tok>s to be collapsed into a single one, to save space and perhaps enhance legibility. Put another way, <tok src="X" ref="a" pos="1"/> and <tok src="X" ref="a" pos="2"/> is always identical to <tok src="X" ref="a" pos="1-2"/>
    
    ## COMPLEX: There are cases where one wishes to treat more than one token, in whole or part, as a single entity. In this case, @cont should be used, and it must join <tok>s that have only single values for @src, @ref, and @pos. @chars may take multiple values.
    
    ## The behavior of <tok> differs from <div-ref>. The former is never treated as a group, whereas the latter is. For more, see <div-ref>.
    element tok {
        tok-attr-core,
        tok-source-ref-opt,
        pointer-to-div-range,
        (token-value-ref | seq-pos-ref | (token-value-ref, seq-pos-ref)),
        tok-cert-opt
    }
tok-source-ref-opt = source-refs
tok-cert-opt = cert-opt
tok-sequence = tok-with-src-and-cont, tok-with-cont-but-no-src*, tok-without-cont-or-src
tok-sequence-attr-core =
    tok-attr-core,
    pointer-to-div-item,
    (token-value-ref | item-pos-ref | (token-value-ref, item-pos-ref))
tok-with-src-and-cont =
    element tok { tok-sequence-attr-core, source-ref, continuation-opt, cert-claim? }
tok-with-cont-but-no-src = element tok { tok-sequence-attr-core, continuation-opt }
tok-without-cont-or-src = element tok { tok-sequence-attr-core }
cert-opt = cert-claim?

##    Pointer (link) to a div in a TAN-T(EI) file
pointer-to-div-range =
    
    ## lists references to one or more <div>s. It consists of one or more simple references joined by commas or hyphens. A simple reference is a string value that points to a single <div>. 
    
    ## It is assumed that any simple reference that has fewer @n values than preceding simple references has been truncated. The abbreviated form will be checked before the form actually stated. For example, 1 1 - 3 will be interpreted first as 1 1 through 1 3; if that is invalid, it will be interpeted as 1 1 through 3. Examples: '2.4 - 7, 9', 'iv 7 - 9'
    
    ## In a range with members of uneven depth, those <div>s that are closest to the shallowest member are retrieved. For example, 2 - 3 2 2 might fetch 2, 3 1, 3 2 1, 3 2 2 (and not 3 or 3 1 1).
    
    ## For more, see main.xml#class_2_body 
    attribute ref { div-range-ref }
pointer-to-div-item = attribute ref { div-item-ref }
token-value-ref =
    
    ## specifies a particular word token by means of its string value. Permits regular expressions.
    
    ## For more see main.xml#attr_pos_and_val
    attribute val {
        xsd:string { pattern = ".+" }
    }
seq-pos-ref =
    
    ## lists one or more items, specified through Arabic numerals and the keyword 'last' or 'last-X' (where X is a valid number), joined with commas or hyphens.
    
    ## Examples: '1', 'last', 'last-3 - last-1', '1, 3, 5, 7 - 11, last-8, last'
    
    ## For more see main.xml#attr_pos_and_val
    attribute pos { seq-picker }
item-pos-ref = attribute pos { item-picker }
char-ref =
    
    ## list of one or more characters, specified through Arabic numerals, the keyword 'last' or 'last-X' (where X is a valid number), joined with commas or hyphens.
    
    ## Examples: '1', 'last', 'last-3 - last-1', '1, 3, 5, 7 - 11, last-8, last'
    attribute chars { seq-picker }
continuation-opt = continuation
continuation =
    
    ## indicates whether the current element is continued by the next one and to be treated as a single one. Value must be 1 or true, implied by the very presence of the attribute. If you wish to decare it to be false, delete the attribute altogether.
    
    ## This feature is useful in <tok> for rejoining the portion of a word split across two <div>s, or for uniting into a single linguistic token multiple tokens separated by the tokenization process, e.g., "pom pom". 
    
    ## This feature is useful in <div-ref> for creating groups of references that cannot be expressed in a single <div-ref>  
    attribute cont {
        xsd:boolean { pattern = "true|1" }
    }
